C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE OEM_MAIN
OBJECT MODULE PLACED IN Oem\Oem_Main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Oem\Oem_Main.c LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Core\Include\;.\O
                    -em\Include\)

line level    source

   1          #include "Core_Inc.h"
   2          #include "Oem_Inc.h"
   3          
   4          
   5          
   6          
   7          #define DebugRamAddr 0x600
   8          #define DebugRamRange 0xFF
   9          
  10          void RamDebug(unsigned char dbgcode)
  11          {
  12   1              PORT_BYTE_PNTR ClearIndex;
  13   1              PORT_BYTE_PNTR byte_register_pntr;
  14   1              BYTE index;
  15   1              BYTE i;
  16   1              
  17   1          byte_register_pntr = DebugRamAddr+DebugRamRange;          
  18   1          index = *byte_register_pntr;
  19   1          *byte_register_pntr +=1;
  20   1              
  21   1          if ( *byte_register_pntr == DebugRamRange )
  22   1              {
  23   2                      *byte_register_pntr = 0;
  24   2              ClearIndex= DebugRamAddr;
  25   2      
  26   2                      for (i=0x00;i<DebugRamRange;i++)
  27   2              {
  28   3                      *ClearIndex=0x00;
  29   3                      ClearIndex++;
  30   3              }
  31   2              }
  32   1      
  33   1              byte_register_pntr = DebugRamAddr + index;
  34   1          *byte_register_pntr = dbgcode;
  35   1      }
  36          
  37          
  38          void RamDebugWord(unsigned int dbgword)
  39          {
  40   1              BYTE    dgb_H;
  41   1              BYTE    dgb_L;
  42   1      
  43   1              dgb_H = (BYTE) (dbgword >> 8) ;
  44   1              dgb_L = (BYTE) (dbgword & 0x00FF ) ;
  45   1      
  46   1              RamDebug(dgb_H);
  47   1              RamDebug(dgb_L);
  48   1      }
  49          
  50          void RamDebugDword(unsigned long dbgdword)
  51          {
  52   1              BYTE    dgb_4;
  53   1              BYTE    dgb_3;
  54   1              BYTE    dgb_2;
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 2   

  55   1              BYTE    dgb_1;
  56   1      
  57   1              dgb_4 = (BYTE) (dbgdword >> 24) ;
  58   1              dgb_3 = (BYTE) (dbgdword >> 16) ;
  59   1              dgb_2 = (BYTE) (dbgdword >> 8) ;
  60   1              dgb_1 = (BYTE) (dbgdword & 0x00FF ) ;
  61   1      
  62   1              RamDebug(dgb_4);
  63   1              RamDebug(dgb_3);
  64   1              RamDebug(dgb_2);
  65   1              RamDebug(dgb_1);
  66   1      }
  67          
  68          
  69          //-----------------------------------------------------------------------------
  70          // Oem 1ms Events/Hook Here
  71          //-----------------------------------------------------------------------------
  72          void Oem_Hook_1MS_Event(void)
  73          {
  74   1              #if SUPPORT_Hook_1ms_Timer
  75   1                      #if SMBusServiceCenterFunc
                              SMBusCenter();
                              #endif
  78   1              #endif  
  79   1              //J74_001++>>
  80   1              //J74_001A-->>
  81   1          /*
  82   1          Index_07H = 0x07;
  83   1              SET_BIT(GP36_SEL_REG,6);                //Set GP36
  84   1              SET_BIT(GP3X_FUNC_REG,6);               //Set GP36 simple IO function
  85   1              SET_BIT(GP3X_IOMODE_REG,6);     //Set GP36 output
  86   1              SET_BIT(GP45_PULLUP_REG,5);             // Set GP44 PULL-UP (GPIO Pin Set 4 Pin Internal Pull-up Enable Registers)
  87   1                      
  88   1              SET_BIT(GP14_SEL_REG,4);                //Set GP14
  89   1              SET_BIT(GP1X_IOMODE_REG,4);     //Set GP14 output
  90   1              SET_BIT(GP1X_FUNC_REG,4);               //Set GP14 simple IO function   
  91   1                      
  92   1              SET_BIT(GP37_SEL_REG,7);                //Set GP37
  93   1              SET_BIT(GP3X_IOMODE_REG,7);     //Set GP37 output
  94   1              SET_BIT(GP3X_FUNC_REG,7);               //Set GP37 simple IO function
  95   1                      
  96   1              SET_BIT(GP24_SEL_REG,4);                //Set GP24
  97   1              SET_BIT(GP2X_IOMODE_REG,4);     //Set GP24 output
  98   1              SET_BIT(GP2X_FUNC_REG,4);               //Set GP24 simple IO function
  99   1              Index_07H = 0x00;
 100   1         /* if(STATE_PM_SLP_S3()&&(DDRSIGN==0))
 101   1          {
 102   1                  GP36_HI();  
 103   1                      GP14_HI();
 104   1                  GP37_HI();
 105   1                      GP24_HI(); 
 106   1          }
 107   1              else if((!STATE_PM_SLP_S3())&&(STATE_PM_SLP_S4()))
 108   1              {
 109   1                  DDRSIGN=1;
 110   1                      GP36_LO();      
 111   1                      GP14_LO();
 112   1                      GP37_LO();
 113   1                  GP24_LO();
 114   1              }
 115   1              else if((!STATE_PM_SLP_S3())&&(!STATE_PM_SLP_S4()))
 116   1              {
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 3   

 117   1                  DDRSIGN=0;
 118   1                      GP36_LO();      
 119   1                      GP14_LO();
 120   1                  GP37_LO();
 121   1                  GP24_LO();
 122   1              }
 123   1              */
 124   1         //J74_001A--<<
 125   1         //J74_001A++>>
 126   1              if(!STATE_PM_SLP_S4())
 127   1          {
 128   2                  GP36_HI();  
 129   2                      GP14_HI();
 130   2                  GP37_HI();
 131   2                      GP24_HI(); 
 132   2          }
 133   1              else if(!STATE_PM_SLP_S3())
 134   1              {
 135   2                      GP36_LO();      
 136   2                      GP14_LO();
 137   2                      GP37_LO();
 138   2                  GP24_LO();
 139   2              }
 140   1      
 141   1              if(IS_PM_SLP_S4())
 142   1          {
 143   2                      if(IS_PANSHW())
 144   2                      {
 145   3                        GP36_HI();    
 146   3                        GP14_HI();
 147   3                    GP37_HI();
 148   3                        GP24_HI();
 149   3                        S3_FLAG = 1;
 150   3                      }
 151   2                      else if(S3_FLAG == 0)
 152   2                      {
 153   3                        GP36_LO();    
 154   3                        GP14_LO();
 155   3                        GP37_LO();
 156   3                    GP24_LO();
 157   3                      }
 158   2          }
 159   1              else if(IS_PM_SLP_S3())
 160   1              {
 161   2                      GP36_LO();      
 162   2                      GP14_LO();
 163   2                      GP37_LO();
 164   2                  GP24_LO();
 165   2                      S3_FLAG = 2;
 166   2              }
 167   1              else if(S3_FLAG == 1)
 168   1              {
 169   2                      GP36_HI();      
 170   2                      GP14_HI();
 171   2                  GP37_HI();
 172   2                      GP24_HI();
 173   2                      S3_FLAG = 0;
 174   2              }
 175   1         //J74_001A++<<
 176   1         //J74_001++<<
 177   1      
 178   1      }
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 4   

 179          
 180          
 181          
 182          //-----------------------------------------------------------------------------
 183          // Oem 5ms Events/Hook Here
 184          //-----------------------------------------------------------------------------
 185          void Oem_Hook_5MS_Event(void)
 186          {
 187   1      
 188   1              Check_Power_State();
 189   1              Service_EventCenter();
 190   1      
 191   1      }
 192          
 193          //-----------------------------------------------------------------------------
 194          // Oem 10ms Events/Hook Here
 195          //-----------------------------------------------------------------------------
 196          void Oem_Hook_10MS_Event(void)
 197          {
 198   1      
 199   1      }
 200          
 201          //-----------------------------------------------------------------------------
 202          // Oem 50ms Events/Hook Here
 203          //-----------------------------------------------------------------------------
 204          void Oem_Hook_50MS_EventA(void)
 205          {
 206   1      
 207   1      
 208   1      }
 209          
 210          void Oem_Hook_50MS_EventB(void)
 211          {       
 212   1              
 213   1      }
 214          
 215          void Oem_Hook_50MS_EventC(void)
 216          {
 217   1      
 218   1      }
 219          
 220          //-----------------------------------------------------------------------------
 221          // Oem 100ms Events/Hook Here
 222          //-----------------------------------------------------------------------------
 223          void Oem_Hook_100MS_EventA(void)
 224          {
 225   1              if(SystemIsS0)
 226   1          {
 227   2             //EC_start();
 228   2          }
 229   1              else
 230   1              {
 231   2                      EC_stop();
 232   2              }
 233   1              
 234   1      }
 235          
 236          void Oem_Hook_100MS_EventB(void)
 237          {
 238   1      
 239   1      }
 240          
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 5   

 241          void Oem_Hook_100MS_EventC(void)
 242          {
 243   1      
 244   1      }
 245          
 246          //-----------------------------------------------------------------------------
 247          // Oem 125ms Events/Hook Here
 248          //-----------------------------------------------------------------------------
 249          void Oem_Hook_125MS_Event(void)
 250          {
 251   1      
 252   1      }
 253          
 254          //-----------------------------------------------------------------------------
 255          // Oem 250ms Events/Hook Here
 256          //-----------------------------------------------------------------------------
 257          void Oem_Hook_250MS_Event(void)
 258          {
 259   1      
 260   1      
 261   1      }
 262          
 263          //-----------------------------------------------------------------------------
 264          // Oem 500ms Events/Hook Here
 265          //-----------------------------------------------------------------------------
 266          void Oem_Hook_500MS_EventA(void)
 267          {
 268   1      
 269   1      }
 270          
 271          void Oem_Hook_500MS_EventB(void)
 272          {
 273   1      
 274   1      }
 275          
 276          void Oem_Hook_500MS_EventC(void)
 277          {
 278   1      
 279   1      
 280   1      }
 281          
 282          //-----------------------------------------------------------------------------
 283          // Oem 1s Events/Hook Here
 284          //-----------------------------------------------------------------------------
 285          void Oem_Hook_1S_EventA(void)
 286          {
 287   1              ProcessLED();
 288   1      }
 289          
 290          void Oem_Hook_1S_EventB(void)
 291          {
 292   1      
 293   1      }
 294          
 295          void Oem_Hook_1S_EventC(void)
 296          {
 297   1      
 298   1      }
 299          
 300          //-----------------------------------------------------------------------------
 301          // Oem 1min Events/Hook Here
 302          //-----------------------------------------------------------------------------
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 6   

 303          void Oem_Hook_1Min_Event(void)
 304          {
 305   1      
 306   1      }
 307          //-----------------------------------------------------------------------------
 308          // End of Handle Timer Events
 309          //-----------------------------------------------------------------------------
 310          
 311          void Oem_Main_Test_Func(void)
 312          {
 313   1              // do nothing
 314   1      }
 315          
 316          
 317          void CheckResetSource(void)
 318          {
 319   1      
 320   1      }
 321          
 322          
 323          void Delay15US(XWORD dly_count)
 324          {
 325   1          
 326   1          //delay
 327   1          while(dly_count > 0)
 328   1          {
 329   2              WNCKR = 0;      
 330   2              dly_count--;
 331   2          }    
 332   1          
 333   1      }
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0030 (BEGIN)
0000         L?0049:
0000         L?0050:
0000 900000      E     MOV     DPTR,#GPIO_3x
0003 E0                MOVX    A,@DPTR
0004 4440              ORL     A,#040H
0006 F0                MOVX    @DPTR,A
0007 900000      E     MOV     DPTR,#GPIO_1x
000A E0                MOVX    A,@DPTR
000B 4410              ORL     A,#010H
000D F0                MOVX    @DPTR,A
000E 900000      E     MOV     DPTR,#GPIO_3x
0011 E0                MOVX    A,@DPTR
0012 4480              ORL     A,#080H
0014 F0                MOVX    @DPTR,A
0015 900000      E     MOV     DPTR,#GPIO_2x
0018 E0                MOVX    A,@DPTR
0019 4410              ORL     A,#010H
001B F0                MOVX    @DPTR,A
001C 22                RET     
001D         L?0051:
001D         L?0052:
001D 900000      E     MOV     DPTR,#GPIO_3x
0020 E0                MOVX    A,@DPTR
0021 54BF              ANL     A,#0BFH
0023 F0                MOVX    @DPTR,A
0024 900000      E     MOV     DPTR,#GPIO_1x
0027 E0                MOVX    A,@DPTR
0028 54EF              ANL     A,#0EFH
002A F0                MOVX    @DPTR,A
002B 900000      E     MOV     DPTR,#GPIO_3x
002E E0                MOVX    A,@DPTR
002F 547F              ANL     A,#07FH
0031 F0                MOVX    @DPTR,A
0032 900000      E     MOV     DPTR,#GPIO_2x
0035 E0                MOVX    A,@DPTR
0036 54EF              ANL     A,#0EFH
0038 F0                MOVX    @DPTR,A
0039 22                RET     
003A         L?0053:
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
003C         L?0054:
003C 900000      R     MOV     DPTR,#dbgdword
003F 020000      E     LJMP    ?C?LLDXDATA
             ; FUNCTION Com0030 (END)

             ; FUNCTION _RamDebug (BEGIN)
                                           ; SOURCE LINE # 10
;---- Variable 'dbgcode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 11
                                           ; SOURCE LINE # 17
;---- Variable 'byte_register_pntr' assigned to Register 'R4/R5' ----
0000 7DFF              MOV     R5,#0FFH
0002 7C06              MOV     R4,#06H
                                           ; SOURCE LINE # 18
0004 8D82              MOV     DPL,R5
0006 8C83              MOV     DPH,R4
0008 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 8   

;---- Variable 'index' assigned to Register 'R1' ----
0009 F9                MOV     R1,A
                                           ; SOURCE LINE # 19
000A E0                MOVX    A,@DPTR
000B 04                INC     A
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
000D E0                MOVX    A,@DPTR
000E B4FF27            CJNE    A,#0FFH,?C0001
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 24
0013 900000      R     MOV     DPTR,#ClearIndex
0016 7406              MOV     A,#06H
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 26
;---- Variable 'i' assigned to Register 'R6' ----
001C FE                MOV     R6,A
001D         ?C0002:
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
001D 900000      R     MOV     DPTR,#ClearIndex
0020 E0                MOVX    A,@DPTR
0021 FA                MOV     R2,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 F582              MOV     DPL,A
0026 8A83              MOV     DPH,R2
0028 E4                CLR     A
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 29
002A 900000      R     MOV     DPTR,#ClearIndex
002D 75F001            MOV     B,#01H
0030 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 30
0033 0E                INC     R6
0034 EE                MOV     A,R6
0035 B4FFE5            CJNE    A,#0FFH,?C0002
                                           ; SOURCE LINE # 31
0038         ?C0001:
                                           ; SOURCE LINE # 33
0038 CE                XCH     A,R6
0039 E9                MOV     A,R1
003A CE                XCH     A,R6
003B E9                MOV     A,R1
003C 2400              ADD     A,#00H
003E FD                MOV     R5,A
003F E4                CLR     A
0040 3406              ADDC    A,#06H
                                           ; SOURCE LINE # 34
0042 8D82              MOV     DPL,R5
0044 F583              MOV     DPH,A
0046 EF                MOV     A,R7
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
0048 22                RET     
             ; FUNCTION _RamDebug (END)
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 9   


             ; FUNCTION _RamDebugWord (BEGIN)
                                           ; SOURCE LINE # 38
;---- Variable 'dbgword' assigned to Register 'R4/R5' ----
0000 CD                XCH     A,R5
0001 EF                MOV     A,R7
0002 CD                XCH     A,R5
0003 CC                XCH     A,R4
0004 EE                MOV     A,R6
0005 CC                XCH     A,R4
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 43
0006 EC                MOV     A,R4
0007 FF                MOV     R7,A
;---- Variable 'dgb_H' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 44
0008 ED                MOV     A,R5
;---- Variable 'dgb_L' assigned to Register 'R3' ----
0009 FB                MOV     R3,A
                                           ; SOURCE LINE # 46
000A 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 47
000D CF                XCH     A,R7
000E EB                MOV     A,R3
000F CF                XCH     A,R7
0010 020000      R     LJMP    _RamDebug
             ; FUNCTION _RamDebugWord (END)

             ; FUNCTION _RamDebugDword (BEGIN)
                                           ; SOURCE LINE # 50
0000 900000      R     MOV     DPTR,#dbgdword
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 57
0006 120000      R     LCALL   L?0054
0009 7818              MOV     R0,#018H
000B 120000      E     LCALL   ?C?ULSHR
;---- Variable 'dgb_4' assigned to Register 'R2' ----
000E CA                XCH     A,R2
000F EF                MOV     A,R7
0010 CA                XCH     A,R2
                                           ; SOURCE LINE # 58
0011 120000      R     LCALL   L?0054
0014 7810              MOV     R0,#010H
0016 120000      E     LCALL   ?C?ULSHR
0019 900000      R     MOV     DPTR,#dgb_3
                                           ; SOURCE LINE # 59
001C 120000      R     LCALL   L?0053
001F 7808              MOV     R0,#08H
0021 120000      E     LCALL   ?C?ULSHR
0024 900000      R     MOV     DPTR,#dgb_2
                                           ; SOURCE LINE # 60
0027 120000      R     LCALL   L?0053
002A E4                CLR     A
;---- Variable 'dgb_1' assigned to Register 'R3' ----
002B CB                XCH     A,R3
002C EF                MOV     A,R7
002D CB                XCH     A,R3
                                           ; SOURCE LINE # 62
002E CF                XCH     A,R7
002F EA                MOV     A,R2
0030 CF                XCH     A,R7
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 10  

0031 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 63
0034 900000      R     MOV     DPTR,#dgb_3
0037 E0                MOVX    A,@DPTR
0038 FF                MOV     R7,A
0039 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 64
003C 900000      R     MOV     DPTR,#dgb_2
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 65
0044 CF                XCH     A,R7
0045 EB                MOV     A,R3
0046 CF                XCH     A,R7
0047 020000      R     LJMP    _RamDebug
             ; FUNCTION _RamDebugDword (END)

             ; FUNCTION Oem_Hook_1MS_Event (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 126
0000 900000      E     MOV     DPTR,#GPIO_5x
0003 E0                MOVX    A,@DPTR
0004 30E303            JNB     ACC.3,?C0009
0007 D3                SETB    C
0008 8001              SJMP    ?C0010
000A         ?C0009:
000A C3                CLR     C
000B         ?C0010:
000B 4005              JC      ?C0008
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
000D 120000      R     LCALL   L?0049
                                           ; SOURCE LINE # 132
0010 8010              SJMP    ?C0011
0012         ?C0008:
                                           ; SOURCE LINE # 133
0012 900000      E     MOV     DPTR,#GPIO_4x
0015 E0                MOVX    A,@DPTR
0016 30E503            JNB     ACC.5,?C0013
0019 D3                SETB    C
001A 8001              SJMP    ?C0014
001C         ?C0013:
001C C3                CLR     C
001D         ?C0014:
001D 4003              JC      ?C0011
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
001F 120000      R     LCALL   L?0051
                                           ; SOURCE LINE # 139
0022         ?C0011:
                                           ; SOURCE LINE # 141
0022 900000      E     MOV     DPTR,#GPIO_5x
0025 E0                MOVX    A,@DPTR
0026 20E31B            JB      ACC.3,?C0015
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 11  

                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
0029 900000      E     MOV     DPTR,#GPIO_4x
002C E0                MOVX    A,@DPTR
002D 20E30A            JB      ACC.3,?C0016
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
0030 120000      R     LCALL   L?0049
                                           ; SOURCE LINE # 149
0033 900000      E     MOV     DPTR,#S3_FLAG
0036 7401              MOV     A,#01H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
0039 22                RET     
003A         ?C0016:
                                           ; SOURCE LINE # 151
003A 900000      E     MOV     DPTR,#S3_FLAG
003D E0                MOVX    A,@DPTR
003E 7024              JNZ     ?C0023
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
0040 120000      R     LCALL   L?0051
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
0043 22                RET     
0044         ?C0015:
                                           ; SOURCE LINE # 159
0044 900000      E     MOV     DPTR,#GPIO_4x
0047 E0                MOVX    A,@DPTR
0048 20E50A            JB      ACC.5,?C0020
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
004B 120000      R     LCALL   L?0052
                                           ; SOURCE LINE # 165
004E 900000      E     MOV     DPTR,#S3_FLAG
0051 7402              MOV     A,#02H
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
0054 22                RET     
0055         ?C0020:
                                           ; SOURCE LINE # 167
0055 900000      E     MOV     DPTR,#S3_FLAG
0058 E0                MOVX    A,@DPTR
0059 B40108            CJNE    A,#01H,?C0023
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 172
005C 120000      R     LCALL   L?0050
                                           ; SOURCE LINE # 173
005F E4                CLR     A
0060 900000      E     MOV     DPTR,#S3_FLAG
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 12  

0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
                                           ; SOURCE LINE # 178
0064         ?C0023:
0064 22                RET     
             ; FUNCTION Oem_Hook_1MS_Event (END)

             ; FUNCTION Oem_Hook_5MS_Event (BEGIN)
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 186
                                           ; SOURCE LINE # 188
0000 120000      E     LCALL   Check_Power_State
                                           ; SOURCE LINE # 189
0003 020000      E     LJMP    Service_EventCenter
             ; FUNCTION Oem_Hook_5MS_Event (END)

             ; FUNCTION Oem_Hook_10MS_Event (BEGIN)
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 199
0000 22                RET     
             ; FUNCTION Oem_Hook_10MS_Event (END)

             ; FUNCTION Oem_Hook_50MS_EventA (BEGIN)
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 208
0000 22                RET     
             ; FUNCTION Oem_Hook_50MS_EventA (END)

             ; FUNCTION Oem_Hook_50MS_EventB (BEGIN)
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 213
0000 22                RET     
             ; FUNCTION Oem_Hook_50MS_EventB (END)

             ; FUNCTION Oem_Hook_50MS_EventC (BEGIN)
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 218
0000 22                RET     
             ; FUNCTION Oem_Hook_50MS_EventC (END)

             ; FUNCTION Oem_Hook_100MS_EventA (BEGIN)
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 6401              XRL     A,#01H
0006 6003              JZ      ?C0031
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 228
0008         ?C0029:
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
0008 120000      E     LCALL   EC_stop
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 234
000B         ?C0031:
000B 22                RET     
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 13  

             ; FUNCTION Oem_Hook_100MS_EventA (END)

             ; FUNCTION Oem_Hook_100MS_EventB (BEGIN)
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 239
0000 22                RET     
             ; FUNCTION Oem_Hook_100MS_EventB (END)

             ; FUNCTION Oem_Hook_100MS_EventC (BEGIN)
                                           ; SOURCE LINE # 241
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 244
0000 22                RET     
             ; FUNCTION Oem_Hook_100MS_EventC (END)

             ; FUNCTION Oem_Hook_125MS_Event (BEGIN)
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 252
0000 22                RET     
             ; FUNCTION Oem_Hook_125MS_Event (END)

             ; FUNCTION Oem_Hook_250MS_Event (BEGIN)
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 261
0000 22                RET     
             ; FUNCTION Oem_Hook_250MS_Event (END)

             ; FUNCTION Oem_Hook_500MS_EventA (BEGIN)
                                           ; SOURCE LINE # 266
                                           ; SOURCE LINE # 267
                                           ; SOURCE LINE # 269
0000 22                RET     
             ; FUNCTION Oem_Hook_500MS_EventA (END)

             ; FUNCTION Oem_Hook_500MS_EventB (BEGIN)
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
                                           ; SOURCE LINE # 274
0000 22                RET     
             ; FUNCTION Oem_Hook_500MS_EventB (END)

             ; FUNCTION Oem_Hook_500MS_EventC (BEGIN)
                                           ; SOURCE LINE # 276
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 280
0000 22                RET     
             ; FUNCTION Oem_Hook_500MS_EventC (END)

             ; FUNCTION Oem_Hook_1S_EventA (BEGIN)
                                           ; SOURCE LINE # 285
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 287
0000 020000      E     LJMP    ProcessLED
             ; FUNCTION Oem_Hook_1S_EventA (END)

             ; FUNCTION Oem_Hook_1S_EventB (BEGIN)
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 293
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 14  

0000 22                RET     
             ; FUNCTION Oem_Hook_1S_EventB (END)

             ; FUNCTION Oem_Hook_1S_EventC (BEGIN)
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 298
0000 22                RET     
             ; FUNCTION Oem_Hook_1S_EventC (END)

             ; FUNCTION Oem_Hook_1Min_Event (BEGIN)
                                           ; SOURCE LINE # 303
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 306
0000 22                RET     
             ; FUNCTION Oem_Hook_1Min_Event (END)

             ; FUNCTION Oem_Main_Test_Func (BEGIN)
                                           ; SOURCE LINE # 311
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 314
0000 22                RET     
             ; FUNCTION Oem_Main_Test_Func (END)

             ; FUNCTION CheckResetSource (BEGIN)
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 318
                                           ; SOURCE LINE # 320
0000 22                RET     
             ; FUNCTION CheckResetSource (END)

             ; FUNCTION _Delay15US (BEGIN)
                                           ; SOURCE LINE # 323
0000 900000      R     MOV     DPTR,#dly_count
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 324
0008         ?C0045:
                                           ; SOURCE LINE # 327
0008 D3                SETB    C
0009 900000      R     MOV     DPTR,#dly_count+01H
000C E0                MOVX    A,@DPTR
000D 9400              SUBB    A,#00H
000F 900000      R     MOV     DPTR,#dly_count
0012 E0                MOVX    A,@DPTR
0013 9400              SUBB    A,#00H
0015 4011              JC      ?C0047
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
0017 E4                CLR     A
0018 900000      E     MOV     DPTR,#WNCKR
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 330
001C 900000      R     MOV     DPTR,#dly_count
001F 74FF              MOV     A,#0FFH
0021 F5F0              MOV     B,A
0023 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 331
0026 80E0              SJMP    ?C0045
C51 COMPILER V7.50   OEM_MAIN                                                              09/20/2020 10:56:19 PAGE 15  

                                           ; SOURCE LINE # 333
0028         ?C0047:
0028 22                RET     
             ; FUNCTION _Delay15US (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    411    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

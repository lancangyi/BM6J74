C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE OEM_MAIN
OBJECT MODULE PLACED IN Oem\Oem_Main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Oem\Oem_Main.c LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Core\Include\;.\O
                    -em\Include\)

line level    source

   1          #include "Core_Inc.h"
   2          #include "Oem_Inc.h"
   3          
   4          
   5          
   6          
   7          #define DebugRamAddr 0x600
   8          #define DebugRamRange 0xFF
   9          
  10          void RamDebug(unsigned char dbgcode)
  11          {
  12   1              PORT_BYTE_PNTR ClearIndex;
  13   1              PORT_BYTE_PNTR byte_register_pntr;
  14   1              BYTE index;
  15   1              BYTE i;
  16   1              
  17   1          byte_register_pntr = DebugRamAddr+DebugRamRange;          
  18   1          index = *byte_register_pntr;
  19   1          *byte_register_pntr +=1;
  20   1              
  21   1          if ( *byte_register_pntr == DebugRamRange )
  22   1              {
  23   2                      *byte_register_pntr = 0;
  24   2              ClearIndex= DebugRamAddr;
  25   2      
  26   2                      for (i=0x00;i<DebugRamRange;i++)
  27   2              {
  28   3                      *ClearIndex=0x00;
  29   3                      ClearIndex++;
  30   3              }
  31   2              }
  32   1      
  33   1              byte_register_pntr = DebugRamAddr + index;
  34   1          *byte_register_pntr = dbgcode;
  35   1      }
  36          
  37          
  38          void RamDebugWord(unsigned int dbgword)
  39          {
  40   1              BYTE    dgb_H;
  41   1              BYTE    dgb_L;
  42   1      
  43   1              dgb_H = (BYTE) (dbgword >> 8) ;
  44   1              dgb_L = (BYTE) (dbgword & 0x00FF ) ;
  45   1      
  46   1              RamDebug(dgb_H);
  47   1              RamDebug(dgb_L);
  48   1      }
  49          
  50          void RamDebugDword(unsigned long dbgdword)
  51          {
  52   1              BYTE    dgb_4;
  53   1              BYTE    dgb_3;
  54   1              BYTE    dgb_2;
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 2   

  55   1              BYTE    dgb_1;
  56   1      
  57   1              dgb_4 = (BYTE) (dbgdword >> 24) ;
  58   1              dgb_3 = (BYTE) (dbgdword >> 16) ;
  59   1              dgb_2 = (BYTE) (dbgdword >> 8) ;
  60   1              dgb_1 = (BYTE) (dbgdword & 0x00FF ) ;
  61   1      
  62   1              RamDebug(dgb_4);
  63   1              RamDebug(dgb_3);
  64   1              RamDebug(dgb_2);
  65   1              RamDebug(dgb_1);
  66   1      }
  67          
  68          
  69          //-----------------------------------------------------------------------------
  70          // Oem 1ms Events/Hook Here
  71          //-----------------------------------------------------------------------------
  72          void Oem_Hook_1MS_Event(void)
  73          {
  74   1              #if SUPPORT_Hook_1ms_Timer
  75   1                      #if SMBusServiceCenterFunc
                              SMBusCenter();
                              #endif
  78   1              #endif  
  79   1              //J74_001++>>
  80   1              //J74_001A-->>
  81   1          /*
  82   1          Index_07H = 0x07;
  83   1              SET_BIT(GP36_SEL_REG,6);                //Set GP36
  84   1              SET_BIT(GP3X_FUNC_REG,6);               //Set GP36 simple IO function
  85   1              SET_BIT(GP3X_IOMODE_REG,6);     //Set GP36 output
  86   1              SET_BIT(GP45_PULLUP_REG,5);             // Set GP44 PULL-UP (GPIO Pin Set 4 Pin Internal Pull-up Enable Registers)
  87   1                      
  88   1              SET_BIT(GP14_SEL_REG,4);                //Set GP14
  89   1              SET_BIT(GP1X_IOMODE_REG,4);     //Set GP14 output
  90   1              SET_BIT(GP1X_FUNC_REG,4);               //Set GP14 simple IO function   
  91   1                      
  92   1              SET_BIT(GP37_SEL_REG,7);                //Set GP37
  93   1              SET_BIT(GP3X_IOMODE_REG,7);     //Set GP37 output
  94   1              SET_BIT(GP3X_FUNC_REG,7);               //Set GP37 simple IO function
  95   1                      
  96   1              SET_BIT(GP24_SEL_REG,4);                //Set GP24
  97   1              SET_BIT(GP2X_IOMODE_REG,4);     //Set GP24 output
  98   1              SET_BIT(GP2X_FUNC_REG,4);               //Set GP24 simple IO function
  99   1              Index_07H = 0x00;
 100   1         /* if(STATE_PM_SLP_S3()&&(DDRSIGN==0))
 101   1          {
 102   1                  GP36_HI();  
 103   1                      GP14_HI();
 104   1                  GP37_HI();
 105   1                      GP24_HI(); 
 106   1          }
 107   1              else if((!STATE_PM_SLP_S3())&&(STATE_PM_SLP_S4()))
 108   1              {
 109   1                  DDRSIGN=1;
 110   1                      GP36_LO();      
 111   1                      GP14_LO();
 112   1                      GP37_LO();
 113   1                  GP24_LO();
 114   1              }
 115   1              else if((!STATE_PM_SLP_S3())&&(!STATE_PM_SLP_S4()))
 116   1              {
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 3   

 117   1                  DDRSIGN=0;
 118   1                      GP36_LO();      
 119   1                      GP14_LO();
 120   1                  GP37_LO();
 121   1                  GP24_LO();
 122   1              }
 123   1              */
 124   1         //J74_001A--<<
 125   1         //J74_001A++>>
 126   1         //J74_001B-->>
 127   1         /*
 128   1              if(!STATE_PM_SLP_S4())
 129   1          {
 130   1                  GP36_HI();  
 131   1                      GP14_HI();
 132   1                  GP37_HI();
 133   1                      GP24_HI(); 
 134   1          }
 135   1              else if(!STATE_PM_SLP_S3())
 136   1              {
 137   1                      GP36_LO();      
 138   1                      GP14_LO();
 139   1                      GP37_LO();
 140   1                  GP24_LO();
 141   1              }
 142   1              
 143   1              if(IS_PM_SLP_S4())
 144   1          {
 145   1                      if(IS_PANSHW())
 146   1                      {
 147   1                        GP36_HI();    
 148   1                        GP14_HI();
 149   1                    GP37_HI();
 150   1                        GP24_HI();
 151   1                        S3_FLAG = 1;
 152   1                      }
 153   1                      else if(S3_FLAG == 0)
 154   1                      {
 155   1                        GP36_LO();    
 156   1                        GP14_LO();
 157   1                        GP37_LO();
 158   1                    GP24_LO();
 159   1                      }
 160   1          }
 161   1              else if(IS_PM_SLP_S3())
 162   1              {
 163   1                      GP36_LO();      
 164   1                      GP14_LO();
 165   1                      GP37_LO();
 166   1                  GP24_LO();
 167   1                      S3_FLAG = 2;
 168   1              }
 169   1              else if(S3_FLAG == 1)
 170   1              {
 171   1                      GP36_HI();      
 172   1                      GP14_HI();
 173   1                  GP37_HI();
 174   1                      GP24_HI();
 175   1                      S3_FLAG = 0;
 176   1              }
 177   1         //J74_001A++<<
 178   1         */
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 4   

 179   1         //J74_001B--<<
 180   1         //J74_001++<<
 181   1          //J74_001B++>>
 182   1              if(SystemIsS0 && !S3_FLAG) 
 183   1              {
 184   2                      GP36_HI();      
 185   2                      GP14_HI();
 186   2                  GP37_HI();
 187   2                      GP24_HI();
 188   2              }
 189   1              else if(SystemNotS0)
 190   1              {
 191   2                      GP36_LO();      
 192   2                      GP14_LO();
 193   2                      GP37_LO();
 194   2                  GP24_LO();
 195   2              }       
 196   1              //J74_001B++<<
 197   1      
 198   1      }
 199          
 200          
 201          
 202          //-----------------------------------------------------------------------------
 203          // Oem 5ms Events/Hook Here
 204          //-----------------------------------------------------------------------------
 205          void Oem_Hook_5MS_Event(void)
 206          {
 207   1      
 208   1              Check_Power_State();
 209   1              Service_EventCenter();
 210   1      
 211   1      }
 212          
 213          //-----------------------------------------------------------------------------
 214          // Oem 10ms Events/Hook Here
 215          //-----------------------------------------------------------------------------
 216          void Oem_Hook_10MS_Event(void)
 217          {
 218   1      
 219   1      }
 220          
 221          //-----------------------------------------------------------------------------
 222          // Oem 50ms Events/Hook Here
 223          //-----------------------------------------------------------------------------
 224          void Oem_Hook_50MS_EventA(void)
 225          {
 226   1      
 227   1      
 228   1      }
 229          
 230          void Oem_Hook_50MS_EventB(void)
 231          {       
 232   1              
 233   1      }
 234          
 235          void Oem_Hook_50MS_EventC(void)
 236          {
 237   1      
 238   1      }
 239          
 240          //-----------------------------------------------------------------------------
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 5   

 241          // Oem 100ms Events/Hook Here
 242          //-----------------------------------------------------------------------------
 243          void Oem_Hook_100MS_EventA(void)
 244          {
 245   1              if(SystemIsS0)
 246   1          {
 247   2             //EC_start();
 248   2          }
 249   1              else
 250   1              {
 251   2                      EC_stop();
 252   2              }
 253   1              
 254   1      }
 255          
 256          void Oem_Hook_100MS_EventB(void)
 257          {
 258   1      
 259   1      }
 260          
 261          void Oem_Hook_100MS_EventC(void)
 262          {
 263   1      
 264   1      }
 265          
 266          //-----------------------------------------------------------------------------
 267          // Oem 125ms Events/Hook Here
 268          //-----------------------------------------------------------------------------
 269          void Oem_Hook_125MS_Event(void)
 270          {
 271   1      
 272   1      }
 273          
 274          //-----------------------------------------------------------------------------
 275          // Oem 250ms Events/Hook Here
 276          //-----------------------------------------------------------------------------
 277          void Oem_Hook_250MS_Event(void)
 278          {
 279   1      
 280   1      
 281   1      }
 282          
 283          //-----------------------------------------------------------------------------
 284          // Oem 500ms Events/Hook Here
 285          //-----------------------------------------------------------------------------
 286          void Oem_Hook_500MS_EventA(void)
 287          {
 288   1      
 289   1      }
 290          
 291          void Oem_Hook_500MS_EventB(void)
 292          {
 293   1      
 294   1      }
 295          
 296          void Oem_Hook_500MS_EventC(void)
 297          {
 298   1      
 299   1      
 300   1      }
 301          
 302          //-----------------------------------------------------------------------------
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 6   

 303          // Oem 1s Events/Hook Here
 304          //-----------------------------------------------------------------------------
 305          void Oem_Hook_1S_EventA(void)
 306          {
 307   1              ProcessLED();
 308   1              //J74_004++>>
 309   1              if(SystemIsS0)
 310   1              {
 311   2                      Index_07H = 0x06;
 312   2                      Index_30H = 0x01;
 313   2                      Index_07H = 0x00;
 314   2              }
 315   1              //J74_004++<< 
 316   1      }
 317          
 318          void Oem_Hook_1S_EventB(void)
 319          {
 320   1      
 321   1      }
 322          
 323          void Oem_Hook_1S_EventC(void)
 324          {
 325   1      
 326   1      }
 327          
 328          //-----------------------------------------------------------------------------
 329          // Oem 1min Events/Hook Here
 330          //-----------------------------------------------------------------------------
 331          void Oem_Hook_1Min_Event(void)
 332          {
 333   1      
 334   1      }
 335          //-----------------------------------------------------------------------------
 336          // End of Handle Timer Events
 337          //-----------------------------------------------------------------------------
 338          
 339          void Oem_Main_Test_Func(void)
 340          {
 341   1              // do nothing
 342   1      }
 343          
 344          
 345          void CheckResetSource(void)
 346          {
 347   1      
 348   1      }
 349          
 350          
 351          void Delay15US(XWORD dly_count)
 352          {
 353   1          
 354   1          //delay
 355   1          while(dly_count > 0)
 356   1          {
 357   2              WNCKR = 0;      
 358   2              dly_count--;
 359   2          }    
 360   1          
 361   1      }
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0025 (BEGIN)
0000         L?0038:
0000 EF                MOV     A,R7
0001 F0                MOVX    @DPTR,A
0002         L?0039:
0002 900000      R     MOV     DPTR,#dbgdword
0005 020000      E     LJMP    ?C?LLDXDATA
0008         L?0040:
0008         L?0041:
0008 900000      E     MOV     DPTR,#SysPowState
000B E0                MOVX    A,@DPTR
000C 6401              XRL     A,#01H
000E 22                RET     
             ; FUNCTION Com0025 (END)

             ; FUNCTION _RamDebug (BEGIN)
                                           ; SOURCE LINE # 10
;---- Variable 'dbgcode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 11
                                           ; SOURCE LINE # 17
;---- Variable 'byte_register_pntr' assigned to Register 'R4/R5' ----
0000 7DFF              MOV     R5,#0FFH
0002 7C06              MOV     R4,#06H
                                           ; SOURCE LINE # 18
0004 8D82              MOV     DPL,R5
0006 8C83              MOV     DPH,R4
0008 E0                MOVX    A,@DPTR
;---- Variable 'index' assigned to Register 'R1' ----
0009 F9                MOV     R1,A
                                           ; SOURCE LINE # 19
000A E0                MOVX    A,@DPTR
000B 04                INC     A
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
000D E0                MOVX    A,@DPTR
000E B4FF27            CJNE    A,#0FFH,?C0001
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 24
0013 900000      R     MOV     DPTR,#ClearIndex
0016 7406              MOV     A,#06H
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 26
;---- Variable 'i' assigned to Register 'R6' ----
001C FE                MOV     R6,A
001D         ?C0002:
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
001D 900000      R     MOV     DPTR,#ClearIndex
0020 E0                MOVX    A,@DPTR
0021 FA                MOV     R2,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 F582              MOV     DPL,A
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 8   

0026 8A83              MOV     DPH,R2
0028 E4                CLR     A
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 29
002A 900000      R     MOV     DPTR,#ClearIndex
002D 75F001            MOV     B,#01H
0030 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 30
0033 0E                INC     R6
0034 EE                MOV     A,R6
0035 B4FFE5            CJNE    A,#0FFH,?C0002
                                           ; SOURCE LINE # 31
0038         ?C0001:
                                           ; SOURCE LINE # 33
0038 CE                XCH     A,R6
0039 E9                MOV     A,R1
003A CE                XCH     A,R6
003B E9                MOV     A,R1
003C 2400              ADD     A,#00H
003E FD                MOV     R5,A
003F E4                CLR     A
0040 3406              ADDC    A,#06H
                                           ; SOURCE LINE # 34
0042 8D82              MOV     DPL,R5
0044 F583              MOV     DPH,A
0046 EF                MOV     A,R7
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
0048 22                RET     
             ; FUNCTION _RamDebug (END)

             ; FUNCTION _RamDebugWord (BEGIN)
                                           ; SOURCE LINE # 38
;---- Variable 'dbgword' assigned to Register 'R4/R5' ----
0000 CD                XCH     A,R5
0001 EF                MOV     A,R7
0002 CD                XCH     A,R5
0003 CC                XCH     A,R4
0004 EE                MOV     A,R6
0005 CC                XCH     A,R4
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 43
0006 EC                MOV     A,R4
0007 FF                MOV     R7,A
;---- Variable 'dgb_H' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 44
0008 ED                MOV     A,R5
;---- Variable 'dgb_L' assigned to Register 'R3' ----
0009 FB                MOV     R3,A
                                           ; SOURCE LINE # 46
000A 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 47
000D CF                XCH     A,R7
000E EB                MOV     A,R3
000F CF                XCH     A,R7
0010 020000      R     LJMP    _RamDebug
             ; FUNCTION _RamDebugWord (END)

             ; FUNCTION _RamDebugDword (BEGIN)
                                           ; SOURCE LINE # 50
0000 900000      R     MOV     DPTR,#dbgdword
0003 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 9   

                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 57
0006 120000      R     LCALL   L?0039
0009 7818              MOV     R0,#018H
000B 120000      E     LCALL   ?C?ULSHR
;---- Variable 'dgb_4' assigned to Register 'R2' ----
000E CA                XCH     A,R2
000F EF                MOV     A,R7
0010 CA                XCH     A,R2
                                           ; SOURCE LINE # 58
0011 120000      R     LCALL   L?0039
0014 7810              MOV     R0,#010H
0016 120000      E     LCALL   ?C?ULSHR
0019 900000      R     MOV     DPTR,#dgb_3
                                           ; SOURCE LINE # 59
001C 120000      R     LCALL   L?0038
001F 7808              MOV     R0,#08H
0021 120000      E     LCALL   ?C?ULSHR
0024 900000      R     MOV     DPTR,#dgb_2
                                           ; SOURCE LINE # 60
0027 120000      R     LCALL   L?0038
002A E4                CLR     A
;---- Variable 'dgb_1' assigned to Register 'R3' ----
002B CB                XCH     A,R3
002C EF                MOV     A,R7
002D CB                XCH     A,R3
                                           ; SOURCE LINE # 62
002E CF                XCH     A,R7
002F EA                MOV     A,R2
0030 CF                XCH     A,R7
0031 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 63
0034 900000      R     MOV     DPTR,#dgb_3
0037 E0                MOVX    A,@DPTR
0038 FF                MOV     R7,A
0039 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 64
003C 900000      R     MOV     DPTR,#dgb_2
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 120000      R     LCALL   _RamDebug
                                           ; SOURCE LINE # 65
0044 CF                XCH     A,R7
0045 EB                MOV     A,R3
0046 CF                XCH     A,R7
0047 020000      R     LJMP    _RamDebug
             ; FUNCTION _RamDebugDword (END)

             ; FUNCTION Oem_Hook_1MS_Event (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 182
0000 120000      R     LCALL   L?0040
0003 7023              JNZ     ?C0008
0005 900000      E     MOV     DPTR,#S3_FLAG
0008 E0                MOVX    A,@DPTR
0009 701D              JNZ     ?C0008
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
000B 900000      E     MOV     DPTR,#GPIO_3x
000E E0                MOVX    A,@DPTR
000F 4440              ORL     A,#040H
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 10  

0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 185
0012 900000      E     MOV     DPTR,#GPIO_1x
0015 E0                MOVX    A,@DPTR
0016 4410              ORL     A,#010H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
0019 900000      E     MOV     DPTR,#GPIO_3x
001C E0                MOVX    A,@DPTR
001D 4480              ORL     A,#080H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
0020 900000      E     MOV     DPTR,#GPIO_2x
0023 E0                MOVX    A,@DPTR
0024 4410              ORL     A,#010H
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
0027 22                RET     
0028         ?C0008:
                                           ; SOURCE LINE # 189
0028 120000      R     LCALL   L?0040
002B 601C              JZ      ?C0011
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
002D 900000      E     MOV     DPTR,#GPIO_3x
0030 E0                MOVX    A,@DPTR
0031 54BF              ANL     A,#0BFH
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
0034 900000      E     MOV     DPTR,#GPIO_1x
0037 E0                MOVX    A,@DPTR
0038 54EF              ANL     A,#0EFH
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
003B 900000      E     MOV     DPTR,#GPIO_3x
003E E0                MOVX    A,@DPTR
003F 547F              ANL     A,#07FH
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 194
0042 900000      E     MOV     DPTR,#GPIO_2x
0045 E0                MOVX    A,@DPTR
0046 54EF              ANL     A,#0EFH
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 198
0049         ?C0011:
0049 22                RET     
             ; FUNCTION Oem_Hook_1MS_Event (END)

             ; FUNCTION Oem_Hook_5MS_Event (BEGIN)
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 208
0000 120000      E     LCALL   Check_Power_State
                                           ; SOURCE LINE # 209
0003 020000      E     LJMP    Service_EventCenter
             ; FUNCTION Oem_Hook_5MS_Event (END)

             ; FUNCTION Oem_Hook_10MS_Event (BEGIN)
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 219
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 11  

0000 22                RET     
             ; FUNCTION Oem_Hook_10MS_Event (END)

             ; FUNCTION Oem_Hook_50MS_EventA (BEGIN)
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 228
0000 22                RET     
             ; FUNCTION Oem_Hook_50MS_EventA (END)

             ; FUNCTION Oem_Hook_50MS_EventB (BEGIN)
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 233
0000 22                RET     
             ; FUNCTION Oem_Hook_50MS_EventB (END)

             ; FUNCTION Oem_Hook_50MS_EventC (BEGIN)
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 238
0000 22                RET     
             ; FUNCTION Oem_Hook_50MS_EventC (END)

             ; FUNCTION Oem_Hook_100MS_EventA (BEGIN)
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 245
0000 120000      R     LCALL   L?0041
0003 6003              JZ      ?C0019
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 248
0005         ?C0017:
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 251
0005 120000      E     LCALL   EC_stop
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 254
0008         ?C0019:
0008 22                RET     
             ; FUNCTION Oem_Hook_100MS_EventA (END)

             ; FUNCTION Oem_Hook_100MS_EventB (BEGIN)
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 259
0000 22                RET     
             ; FUNCTION Oem_Hook_100MS_EventB (END)

             ; FUNCTION Oem_Hook_100MS_EventC (BEGIN)
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 264
0000 22                RET     
             ; FUNCTION Oem_Hook_100MS_EventC (END)

             ; FUNCTION Oem_Hook_125MS_Event (BEGIN)
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 270
                                           ; SOURCE LINE # 272
0000 22                RET     
             ; FUNCTION Oem_Hook_125MS_Event (END)
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 12  


             ; FUNCTION Oem_Hook_250MS_Event (BEGIN)
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 281
0000 22                RET     
             ; FUNCTION Oem_Hook_250MS_Event (END)

             ; FUNCTION Oem_Hook_500MS_EventA (BEGIN)
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 289
0000 22                RET     
             ; FUNCTION Oem_Hook_500MS_EventA (END)

             ; FUNCTION Oem_Hook_500MS_EventB (BEGIN)
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 294
0000 22                RET     
             ; FUNCTION Oem_Hook_500MS_EventB (END)

             ; FUNCTION Oem_Hook_500MS_EventC (BEGIN)
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 297
                                           ; SOURCE LINE # 300
0000 22                RET     
             ; FUNCTION Oem_Hook_500MS_EventC (END)

             ; FUNCTION Oem_Hook_1S_EventA (BEGIN)
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 307
0000 120000      E     LCALL   ProcessLED
                                           ; SOURCE LINE # 309
0003 900000      E     MOV     DPTR,#SysPowState
0006 E0                MOVX    A,@DPTR
0007 B40111            CJNE    A,#01H,?C0028
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
000A 900000      E     MOV     DPTR,#Index_07H
000D 7406              MOV     A,#06H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 312
0010 900000      E     MOV     DPTR,#Index_30H
0013 7401              MOV     A,#01H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 313
0016 E4                CLR     A
0017 900000      E     MOV     DPTR,#Index_07H
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 314
                                           ; SOURCE LINE # 316
001B         ?C0028:
001B 22                RET     
             ; FUNCTION Oem_Hook_1S_EventA (END)

             ; FUNCTION Oem_Hook_1S_EventB (BEGIN)
                                           ; SOURCE LINE # 318
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 321
0000 22                RET     
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 13  

             ; FUNCTION Oem_Hook_1S_EventB (END)

             ; FUNCTION Oem_Hook_1S_EventC (BEGIN)
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 326
0000 22                RET     
             ; FUNCTION Oem_Hook_1S_EventC (END)

             ; FUNCTION Oem_Hook_1Min_Event (BEGIN)
                                           ; SOURCE LINE # 331
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 334
0000 22                RET     
             ; FUNCTION Oem_Hook_1Min_Event (END)

             ; FUNCTION Oem_Main_Test_Func (BEGIN)
                                           ; SOURCE LINE # 339
                                           ; SOURCE LINE # 340
                                           ; SOURCE LINE # 342
0000 22                RET     
             ; FUNCTION Oem_Main_Test_Func (END)

             ; FUNCTION CheckResetSource (BEGIN)
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 348
0000 22                RET     
             ; FUNCTION CheckResetSource (END)

             ; FUNCTION _Delay15US (BEGIN)
                                           ; SOURCE LINE # 351
0000 900000      R     MOV     DPTR,#dly_count
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 352
0008         ?C0034:
                                           ; SOURCE LINE # 355
0008 D3                SETB    C
0009 900000      R     MOV     DPTR,#dly_count+01H
000C E0                MOVX    A,@DPTR
000D 9400              SUBB    A,#00H
000F 900000      R     MOV     DPTR,#dly_count
0012 E0                MOVX    A,@DPTR
0013 9400              SUBB    A,#00H
0015 4011              JC      ?C0036
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
0017 E4                CLR     A
0018 900000      E     MOV     DPTR,#WNCKR
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 358
001C 900000      R     MOV     DPTR,#dly_count
001F 74FF              MOV     A,#0FFH
0021 F5F0              MOV     B,A
0023 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 359
0026 80E0              SJMP    ?C0034
                                           ; SOURCE LINE # 361
C51 COMPILER V7.50   OEM_MAIN                                                              09/25/2020 15:06:32 PAGE 14  

0028         ?C0036:
0028 22                RET     
             ; FUNCTION _Delay15US (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    355    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

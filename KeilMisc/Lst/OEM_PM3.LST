C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE OEM_PM3
OBJECT MODULE PLACED IN Code\Oem\OEM_PM3.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Code\Oem\OEM_PM3.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\INC
                    -LUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*----------------------------------------------------------------------------
   2           * Filename: OEM_PM3.C  For Chipset: ITE.IT85XX
   3           *
   4           * Function: PMC3 example function
   5           *
   6           * Author  : Dino
   7           * 
   8           * Copyright (c) 2010 - , ITE Tech. Inc. All Rights Reserved. 
   9           *
  10           * You may not present,reproduce,distribute,publish,display,modify,adapt,
  11           * perform,transmit,broadcast,recite,release,license or otherwise exploit
  12           * any part of this publication in any form,by any means,without the prior
  13           * written permission of ITE Tech. Inc. 
  14           *---------------------------------------------------------------------------*/
  15          
  16          #include <CORE_INCLUDE.H>
  17          #include <OEM_INCLUDE.H>
  18          
  19          void PMC3Output(BYTE value)
  20          {
  21   1          PM3DO = value;
  22   1      }
  23          
  24          void PMC3SetDataCounter(BYTE cunt)
  25          {
  26   1          PM3DataCount = cunt;
  27   1      }
  28          
  29          // ----------------------------------------------------------------------------
  30          // Process PMC3 command 60      
  31          // ----------------------------------------------------------------------------
  32          void PMC3_Cmd_60(void)
  33          {
  34   1          PMC3SetDataCounter(BufferLength);   // Write PECI_StressToolBuf[];
  35   1      }
  36          
  37          // ----------------------------------------------------------------------------
  38          // Process PMC3 command 61      
  39          // ----------------------------------------------------------------------------
  40          void PMC3_Cmd_61(void)
  41          {
  42   1          PECI_PSTReadBuffer();               // Read PECI_StressToolBuf[];
  43   1      }
  44          
  45          // ----------------------------------------------------------------------------
  46          // Process PMC3 command 62      
  47          // ----------------------------------------------------------------------------
  48          void PMC3_Cmd_62(void)
  49          {
  50   1          PECI_PSTIssueCmd();
  51   1      }
  52          
  53          // ----------------------------------------------------------------------------
  54          // Process PMC3 command 63      
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 2   

  55          // ----------------------------------------------------------------------------
  56          void PMC3_Cmd_63(void)
  57          {
  58   1          PECI_PSTEndCmd();
  59   1      }
  60          
  61          // ----------------------------------------------------------------------------
  62          // Process PMC3 command 64      
  63          // ----------------------------------------------------------------------------
  64          void PMC3_Cmd_64(void)
  65          {
  66   1          PECI_PSTReadStatus();
  67   1      }
  68          
  69          // ----------------------------------------------------------------------------
  70          // Process PMC3 command 65      
  71          // ----------------------------------------------------------------------------
  72          void PMC3_Cmd_65(void)
  73          {
  74   1          PECI_PSTReadErrorCount();
  75   1      }
  76          
  77          // ----------------------------------------------------------------------------
  78          // Process PMC3 command 66      
  79          // ----------------------------------------------------------------------------
  80          void PMC3_Cmd_66(void)
  81          {
  82   1      
  83   1      }
  84          
  85          // ----------------------------------------------------------------------------
  86          // Process PMC3 command 67      
  87          // ----------------------------------------------------------------------------
  88          void PMC3_Cmd_67(void)
  89          {
  90   1      
  91   1      }
  92          
  93          // ----------------------------------------------------------------------------
  94          // Process PMC3 command 68      
  95          // ----------------------------------------------------------------------------
  96          void PMC3_Cmd_68(void)
  97          {
  98   1      
  99   1      }
 100          
 101          // ----------------------------------------------------------------------------
 102          // Process PMC3 command 69      
 103          // ----------------------------------------------------------------------------
 104          void PMC3_Cmd_69(void)
 105          {
 106   1      
 107   1      }
 108          
 109          // ----------------------------------------------------------------------------
 110          // Process PMC3 command 6A      
 111          // ----------------------------------------------------------------------------
 112          void PMC3_Cmd_6A(void)
 113          {
 114   1      
 115   1      }
 116          
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 3   

 117          // ----------------------------------------------------------------------------
 118          // Process PMC3 command 6B      
 119          // ----------------------------------------------------------------------------
 120          void PMC3_Cmd_6B(void)
 121          {
 122   1      
 123   1      }
 124          
 125          // ----------------------------------------------------------------------------
 126          // Process PMC3 command 6C      
 127          // ----------------------------------------------------------------------------
 128          void PMC3_Cmd_6C(void)
 129          {
 130   1      
 131   1      }
 132          
 133          // ----------------------------------------------------------------------------
 134          // Process PMC3 command 6D      
 135          // ----------------------------------------------------------------------------
 136          void PMC3_Cmd_6D(void)
 137          {
 138   1      
 139   1      }
 140          
 141          // ----------------------------------------------------------------------------
 142          // Process PMC3 command 6E      
 143          // ----------------------------------------------------------------------------
 144          void PMC3_Cmd_6E(void)
 145          {
 146   1      
 147   1      }
 148          
 149          // ----------------------------------------------------------------------------
 150          // Process PMC3 command 6F      
 151          // ----------------------------------------------------------------------------
 152          void PMC3_Cmd_6F(void)
 153          {
 154   1      
 155   1      }
 156          
 157          // ----------------------------------------------------------------------------
 158          // Process PMC3 data 60 
 159          // ----------------------------------------------------------------------------
 160          void PMC3_Data_60(void)
 161          {
 162   1          PECI_PSTWriteBuffer();
 163   1      }
 164          
 165          // ----------------------------------------------------------------------------
 166          // Process PMC3 data 61 
 167          // ----------------------------------------------------------------------------
 168          void PMC3_Data_61(void)
 169          {
 170   1      
 171   1      }
 172          
 173          // ----------------------------------------------------------------------------
 174          // Process PMC3 data 62 
 175          // ----------------------------------------------------------------------------
 176          void PMC3_Data_62(void)
 177          {
 178   1      
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 4   

 179   1      }
 180          
 181          // ----------------------------------------------------------------------------
 182          // Process PMC3 data 63 
 183          // ----------------------------------------------------------------------------
 184          void PMC3_Data_63(void)
 185          {
 186   1      
 187   1      }
 188          
 189          // ----------------------------------------------------------------------------
 190          // Process PMC3 data 64 
 191          // ----------------------------------------------------------------------------
 192          void PMC3_Data_64(void)
 193          {
 194   1      
 195   1      }
 196          
 197          // ----------------------------------------------------------------------------
 198          // Process PMC3 data 65 
 199          // ----------------------------------------------------------------------------
 200          void PMC3_Data_65(void)
 201          {
 202   1      
 203   1      }
 204          
 205          // ----------------------------------------------------------------------------
 206          // Process PMC3 data 66 
 207          // ----------------------------------------------------------------------------
 208          void PMC3_Data_66(void)
 209          {
 210   1      
 211   1      }
 212          
 213          // ----------------------------------------------------------------------------
 214          // Process PMC3 data 67 
 215          // ----------------------------------------------------------------------------
 216          void PMC3_Data_67(void)
 217          {
 218   1      
 219   1      }
 220          
 221          // ----------------------------------------------------------------------------
 222          // Process PMC3 data 68 
 223          // ----------------------------------------------------------------------------
 224          void PMC3_Data_68(void)
 225          {
 226   1      
 227   1      }
 228          
 229          // ----------------------------------------------------------------------------
 230          // Process PMC3 data 69 
 231          // ----------------------------------------------------------------------------
 232          void PMC3_Data_69(void)
 233          {
 234   1      
 235   1      }
 236          
 237          // ----------------------------------------------------------------------------
 238          // Process PMC3 data 6A 
 239          // ----------------------------------------------------------------------------
 240          void PMC3_Data_6A(void)
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 5   

 241          {
 242   1      
 243   1      }
 244          
 245          // ----------------------------------------------------------------------------
 246          // Process PMC3 data 6B 
 247          // ----------------------------------------------------------------------------
 248          void PMC3_Data_6B(void)
 249          {
 250   1      
 251   1      }
 252          
 253          // ----------------------------------------------------------------------------
 254          // Process PMC3 data 6C 
 255          // ----------------------------------------------------------------------------
 256          void PMC3_Data_6C(void)
 257          {
 258   1      
 259   1      }
 260          
 261          // ----------------------------------------------------------------------------
 262          // Process PMC3 data 6D 
 263          // ----------------------------------------------------------------------------
 264          void PMC3_Data_6D(void)
 265          {
 266   1      
 267   1      }
 268          
 269          // ----------------------------------------------------------------------------
 270          // Process PMC3 data 6E 
 271          // ----------------------------------------------------------------------------
 272          void PMC3_Data_6E(void)
 273          {
 274   1      
 275   1      }
 276          
 277          // ----------------------------------------------------------------------------
 278          // Process PMC3 data 6F 
 279          // ----------------------------------------------------------------------------
 280          void PMC3_Data_6F(void)
 281          {
 282   1      
 283   1      }
 284          
 285          //----------------------------------------------------------------------------
 286          // Process Command/Data received from System via PMC3 interface
 287          //----------------------------------------------------------------------------
 288          const FUNCT_PTR_V_V code PortPMC3Cmd_table[16] =
 289          {
 290                  PMC3_Cmd_0X,                    // Process PMC3 command 0x               
 291                  PMC3_Cmd_1X,                    // Process PMC3 command 1x      
 292                  PMC3_Cmd_2X,                    // Process PMC3 command 2x      
 293                  PMC3_Cmd_3X,                    // Process PMC3 command 3x               
 294                  PMC3_Cmd_4X,                    // Process PMC3 command 4x      
 295                  PMC3_Cmd_5X,                    // Process PMC3 command 5x      
 296                  PMC3_Cmd_6X,                    // Process PMC3 command 6x       
 297                  PMC3_Cmd_7X,                    // Process PMC3 command 7x      
 298                  PMC3_Cmd_8X,                    // Process PMC3 command 8x      
 299                  PMC3_Cmd_9X,                    // Process PMC3 command 9x               
 300                  PMC3_Cmd_AX,                    // Process PMC3 command Ax      
 301                  PMC3_Cmd_BX,                    // Process PMC3 command Bx      
 302                  PMC3_Cmd_CX,                    // Process PMC3 command Cx      
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 6   

 303                  PMC3_Cmd_DX,                    // Process PMC3 command Dx      
 304                  PMC3_Cmd_EX,                    // Process PMC3 command Ex      
 305                  PMC3_Cmd_FX                     // Process PMC3 command Fx      
 306          };
 307          
 308          const FUNCT_PTR_V_V code PortPMC3Data_table[16] =
 309          {
 310                  PMC3_Cmd_0XData,                // Process PMC3 data 0x  
 311                  PMC3_Cmd_1XData,                // Process PMC3 data 1x 
 312                  PMC3_Cmd_2XData,                // Process PMC3 data 2x 
 313                  PMC3_Cmd_3XData,                // Process PMC3 data 3x                  
 314                  PMC3_Cmd_4XData,                // Process PMC3 data 4x 
 315                  PMC3_Cmd_5XData,                // Process PMC3 data 5x 
 316                  PMC3_Cmd_6XData,                // Process PMC3 data 6x          
 317                  PMC3_Cmd_7XData,                // Process PMC3 data 7x 
 318                  PMC3_Cmd_8XData,                // Process PMC3 data 8x 
 319                  PMC3_Cmd_9XData,                // Process PMC3 data 9x                  
 320                  PMC3_Cmd_AXData,                // Process PMC3 data Ax 
 321                  PMC3_Cmd_BXData,                // Process PMC3 data Bx 
 322                  PMC3_Cmd_CXData,                // Process PMC3 data Cx                  
 323                  PMC3_Cmd_DXData,                // Process PMC3 data Dx 
 324                  PMC3_Cmd_EXData,                // Process PMC3 data Ex 
 325                  PMC3_Cmd_FXData                 // Process PMC3 data Fx 
 326          };
 327          void service_pci4(void)
 328          {
 329   1          if ( IS_MASK_CLEAR(PM3STS,P_IBF) )  
 330   1          {
 331   2                      return; 
 332   2          }
 333   1              
 334   1              if ( PM3STS & P_C_D)    // Command port
 335   1              {
 336   2                      PM3Cmd  = PM3DI;        // Load command
 337   2                      EnablePMC3IBFInt();
 338   2                      PMC3SetDataCounter(0x00);
 339   2                      (PortPMC3Cmd_table[PM3Cmd>>4])(); // Handle command             
 340   2              }
 341   1              else                                    // Data port
 342   1              {
 343   2              if(PM3DataCount==0x00)   
 344   2              {
 345   3                  PM3Data = PM3DI; 
 346   3                  EnablePMC3IBFInt();
 347   3              } 
 348   2              else 
 349   2              {
 350   3                  PM3Data = PM3DI;
 351   3                  EnablePMC3IBFInt();
 352   3                  if (PM3DataCount!=0x00) 
 353   3                  {
 354   4                              (PortPMC3Data_table[PM3Cmd>>4])(); // Handle command data
 355   4                              PM3DataCount--;
 356   4                          }
 357   3                  }
 358   2              }
 359   1      }
 360          
 361          //----------------------------------------------------------------------------
 362          // Handle PMC3 cmd port 0x.
 363          //----------------------------------------------------------------------------
 364          void PMC3_Cmd_0X(void)
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 7   

 365          {
 366   1      
 367   1      }
 368          
 369          //----------------------------------------------------------------------------
 370          // Handle PMC3 cmd port 1x.
 371          //----------------------------------------------------------------------------
 372          void PMC3_Cmd_1X(void)
 373          {
 374   1      
 375   1      }
 376          
 377          //----------------------------------------------------------------------------
 378          // Handle PMC3 cmd port 2x.
 379          //----------------------------------------------------------------------------
 380          void PMC3_Cmd_2X(void)
 381          {
 382   1      
 383   1      }
 384          
 385          //----------------------------------------------------------------------------
 386          // Handle PMC3 cmd port 3x.
 387          //----------------------------------------------------------------------------
 388          void PMC3_Cmd_3X(void)
 389          {
 390   1      
 391   1      }
 392          
 393          //----------------------------------------------------------------------------
 394          // Handle PMC3 cmd port 4x.
 395          //----------------------------------------------------------------------------
 396          void PMC3_Cmd_4X(void)
 397          {
 398   1      
 399   1      }
 400          
 401          //----------------------------------------------------------------------------
 402          // Handle PMC3 cmd port 5x.
 403          //----------------------------------------------------------------------------
 404          void PMC3_Cmd_5X(void)
 405          {
 406   1      
 407   1      }
 408          
 409          //----------------------------------------------------------------------------
 410          // Handle PMC3 command 6x.
 411          //----------------------------------------------------------------------------
 412          const FUNCT_PTR_V_V code PMC3Cmd6X_table[16] =
 413          {
 414                  PMC3_Cmd_60,                    // Process PMC3 command 60      
 415                  PMC3_Cmd_61,                    // Process PMC3 command 61      
 416                  PMC3_Cmd_62,                    // Process PMC3 command 62              
 417                  PMC3_Cmd_63,                    // Process PMC3 command 63      
 418                  PMC3_Cmd_64,                    // Process PMC3 command 64      
 419                  PMC3_Cmd_65,                    // Process PMC3 command 65      
 420                  PMC3_Cmd_66,                    // Process PMC3 command 66      
 421                  PMC3_Cmd_67,                    // Process PMC3 command 67      
 422                  PMC3_Cmd_68,                    // Process PMC3 command 68      
 423                  PMC3_Cmd_69,                    // Process PMC3 command 69      
 424                  PMC3_Cmd_6A,                    // Process PMC3 command 6A      
 425                  PMC3_Cmd_6B,                    // Process PMC3 command 6B      
 426                  PMC3_Cmd_6C,                    // Process PMC3 command 6C      
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 8   

 427                  PMC3_Cmd_6D,                    // Process PMC3 command 6D      
 428                  PMC3_Cmd_6E,                    // Process PMC3 command 6E              
 429                  PMC3_Cmd_6F                     // Process PMC3 command 6F      
 430          };
 431          
 432          //----------------------------------------------------------------------------
 433          // Handle PMC3 cmd port 6x.
 434          //----------------------------------------------------------------------------
 435          void PMC3_Cmd_6X(void)
 436          {
 437   1              (PMC3Cmd6X_table[PM3Cmd&0x0F])(); 
 438   1      }
 439          
 440          //----------------------------------------------------------------------------
 441          // Handle PMC3 cmd port 7x.
 442          //----------------------------------------------------------------------------
 443          void PMC3_Cmd_7X(void)
 444          {
 445   1      
 446   1      }
 447          
 448          //----------------------------------------------------------------------------
 449          // Handle PMC3 cmd port 8x.
 450          //----------------------------------------------------------------------------
 451          void PMC3_Cmd_8X(void)
 452          {
 453   1      
 454   1      }
 455          
 456          //----------------------------------------------------------------------------
 457          // Handle PMC3 cmd port 9x.
 458          //----------------------------------------------------------------------------
 459          void PMC3_Cmd_9X(void)
 460          {
 461   1      
 462   1      }
 463          
 464          //----------------------------------------------------------------------------
 465          // Handle PMC3 cmd port Ax.
 466          //----------------------------------------------------------------------------
 467          void PMC3_Cmd_AX(void)
 468          {
 469   1      
 470   1      }
 471          
 472          //----------------------------------------------------------------------------
 473          // Handle PMC3 cmd port Bx.
 474          //----------------------------------------------------------------------------
 475          void PMC3_Cmd_BX(void)
 476          {
 477   1      
 478   1      }
 479          
 480          //----------------------------------------------------------------------------
 481          // Handle PMC3 cmd port Cx.
 482          //----------------------------------------------------------------------------
 483          void PMC3_Cmd_CX(void)
 484          {
 485   1      
 486   1      }
 487          
 488          //----------------------------------------------------------------------------
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 9   

 489          // Handle PMC3 cmd port Dx.
 490          //----------------------------------------------------------------------------
 491          void PMC3_Cmd_DX(void)
 492          {
 493   1      
 494   1      }
 495          
 496          //----------------------------------------------------------------------------
 497          // Handle PMC3 cmd port Ex.
 498          //----------------------------------------------------------------------------
 499          void PMC3_Cmd_EX(void)
 500          {
 501   1      
 502   1      }
 503          
 504          //----------------------------------------------------------------------------
 505          // Handle PMC3 cmd port Fx.
 506          //----------------------------------------------------------------------------
 507          void PMC3_Cmd_FX(void)
 508          {
 509   1      
 510   1      }
 511          
 512          //----------------------------------------------------------------------------
 513          // Handle PMC3 data port 0x.
 514          //----------------------------------------------------------------------------
 515          void PMC3_Cmd_0XData(void)
 516          {
 517   1      
 518   1      }
 519          
 520          //----------------------------------------------------------------------------
 521          // Handle PMC3 data port 1x.
 522          //----------------------------------------------------------------------------
 523          void PMC3_Cmd_1XData(void)
 524          {
 525   1      
 526   1      }
 527          
 528          //----------------------------------------------------------------------------
 529          // Handle PMC3 data port 2x.
 530          //----------------------------------------------------------------------------
 531          void PMC3_Cmd_2XData(void)
 532          {
 533   1      
 534   1      }
 535          
 536          //----------------------------------------------------------------------------
 537          // Handle PMC3 data port 3x.
 538          //----------------------------------------------------------------------------
 539          void PMC3_Cmd_3XData(void)
 540          {
 541   1      
 542   1      }
 543          
 544          //----------------------------------------------------------------------------
 545          // Handle PMC3 data port 4x.
 546          //----------------------------------------------------------------------------
 547          void PMC3_Cmd_4XData(void)
 548          {
 549   1      
 550   1      }
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 10  

 551          
 552          //----------------------------------------------------------------------------
 553          // Handle PMC3 data port 5x.
 554          //----------------------------------------------------------------------------
 555          void PMC3_Cmd_5XData(void)
 556          {
 557   1      
 558   1      }
 559          
 560          //----------------------------------------------------------------------------
 561          // Handle PMC3 data 6x.
 562          //----------------------------------------------------------------------------
 563          const FUNCT_PTR_V_V code PMC3Data6X_table[16] =
 564          {
 565                  PMC3_Data_60,                   // Process PMC3 Data 60 
 566                  PMC3_Data_61,                   // Process PMC3 Data 61 
 567                  PMC3_Data_62,                   // Process PMC3 Data 62         
 568                  PMC3_Data_63,                   // Process PMC3 Data 63 
 569                  PMC3_Data_64,                   // Process PMC3 Data 64 
 570                  PMC3_Data_65,                   // Process PMC3 Data 65 
 571                  PMC3_Data_66,                   // Process PMC3 Data 66 
 572                  PMC3_Data_67,                   // Process PMC3 Data 67 
 573                  PMC3_Data_68,                   // Process PMC3 Data 68 
 574                  PMC3_Data_69,                   // Process PMC3 Data 69 
 575                  PMC3_Data_6A,                   // Process PMC3 Data 6A 
 576                  PMC3_Data_6B,                   // Process PMC3 Data 6B 
 577                  PMC3_Data_6C,                   // Process PMC3 Data 6C 
 578                  PMC3_Data_6D,                   // Process PMC3 Data 6D 
 579                  PMC3_Data_6E,                   // Process PMC3 Data 6E         
 580                  PMC3_Data_6F                    // Process PMC3 Data 6F 
 581          };
 582          //----------------------------------------------------------------------------
 583          // Handle PMC3 data port 6x.
 584          //----------------------------------------------------------------------------
 585          void PMC3_Cmd_6XData(void)
 586          {
 587   1              (PMC3Data6X_table[PM3Cmd&0x0F])(); 
 588   1      }
 589          
 590          //----------------------------------------------------------------------------
 591          // Handle PMC3 data port 7x.
 592          //----------------------------------------------------------------------------
 593          void PMC3_Cmd_7XData(void)
 594          {
 595   1      
 596   1      }
 597          
 598          //----------------------------------------------------------------------------
 599          // Handle PMC3 data port 8x.
 600          //----------------------------------------------------------------------------
 601          void PMC3_Cmd_8XData(void)
 602          {
 603   1      
 604   1      }
 605          
 606          //----------------------------------------------------------------------------
 607          // Handle PMC3 data port 9x.
 608          //----------------------------------------------------------------------------
 609          void PMC3_Cmd_9XData(void)
 610          {
 611   1      
 612   1      }
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 11  

 613          
 614          //----------------------------------------------------------------------------
 615          // Handle PMC3 data port Ax.
 616          //----------------------------------------------------------------------------
 617          void PMC3_Cmd_AXData(void)
 618          {
 619   1      
 620   1      }
 621          
 622          //----------------------------------------------------------------------------
 623          // Handle PMC3 data port Bx.
 624          //----------------------------------------------------------------------------
 625          void PMC3_Cmd_BXData(void)
 626          {
 627   1      
 628   1      }
 629          
 630          //----------------------------------------------------------------------------
 631          // Handle PMC3 data port Cx.
 632          //----------------------------------------------------------------------------
 633          void PMC3_Cmd_CXData(void)
 634          {
 635   1      
 636   1      }
 637          
 638          //----------------------------------------------------------------------------
 639          // Handle PMC3 data port Dx.
 640          //----------------------------------------------------------------------------
 641          void PMC3_Cmd_DXData(void)
 642          {
 643   1      
 644   1      }
 645          
 646          //----------------------------------------------------------------------------
 647          // Handle PMC3 data port Ex.
 648          //----------------------------------------------------------------------------
 649          void PMC3_Cmd_EXData(void)
 650          {
 651   1      
 652   1      }
 653          
 654          //----------------------------------------------------------------------------
 655          // Handle PMC3 data port Fx.
 656          //----------------------------------------------------------------------------
 657          void PMC3_Cmd_FXData(void)
 658          {
 659   1      
 660   1      }
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 12  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com004A (BEGIN)
0000         L?0075:
0000         L?0076:
0000 F583              MOV     DPH,A
0002 E4                CLR     A
0003 93                MOVC    A,@A+DPTR
0004 FE                MOV     R6,A
0005 7401              MOV     A,#01H
0007 93                MOVC    A,@A+DPTR
0008 CA                XCH     A,R2
0009 EE                MOV     A,R6
000A CA                XCH     A,R2
000B F9                MOV     R1,A
000C 22                RET     
             ; FUNCTION Com004A (END)

             ; FUNCTION _PMC3Output (BEGIN)
                                           ; SOURCE LINE # 19
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 21
0000 900000      E     MOV     DPTR,#PM3DO
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 22
0005 22                RET     
             ; FUNCTION _PMC3Output (END)

             ; FUNCTION _PMC3SetDataCounter (BEGIN)
                                           ; SOURCE LINE # 24
;---- Variable 'cunt' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
0000 8F00        E     MOV     PM3DataCount,R7
                                           ; SOURCE LINE # 27
0002 22                RET     
             ; FUNCTION _PMC3SetDataCounter (END)

             ; FUNCTION PMC3_Cmd_60 (BEGIN)
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 34
0000 7F18              MOV     R7,#018H
0002 020000      R     LJMP    _PMC3SetDataCounter
             ; FUNCTION PMC3_Cmd_60 (END)

             ; FUNCTION PMC3_Cmd_61 (BEGIN)
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
0000 020000      E     LJMP    PECI_PSTReadBuffer
             ; FUNCTION PMC3_Cmd_61 (END)

             ; FUNCTION PMC3_Cmd_62 (BEGIN)
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
0000 020000      E     LJMP    PECI_PSTIssueCmd
             ; FUNCTION PMC3_Cmd_62 (END)
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 13  


             ; FUNCTION PMC3_Cmd_63 (BEGIN)
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
0000 020000      E     LJMP    PECI_PSTEndCmd
             ; FUNCTION PMC3_Cmd_63 (END)

             ; FUNCTION PMC3_Cmd_64 (BEGIN)
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
0000 020000      E     LJMP    PECI_PSTReadStatus
             ; FUNCTION PMC3_Cmd_64 (END)

             ; FUNCTION PMC3_Cmd_65 (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0000 020000      E     LJMP    PECI_PSTReadErrorCount
             ; FUNCTION PMC3_Cmd_65 (END)

             ; FUNCTION PMC3_Cmd_66 (BEGIN)
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 83
0000 22                RET     
             ; FUNCTION PMC3_Cmd_66 (END)

             ; FUNCTION PMC3_Cmd_67 (BEGIN)
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 91
0000 22                RET     
             ; FUNCTION PMC3_Cmd_67 (END)

             ; FUNCTION PMC3_Cmd_68 (BEGIN)
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 99
0000 22                RET     
             ; FUNCTION PMC3_Cmd_68 (END)

             ; FUNCTION PMC3_Cmd_69 (BEGIN)
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 107
0000 22                RET     
             ; FUNCTION PMC3_Cmd_69 (END)

             ; FUNCTION PMC3_Cmd_6A (BEGIN)
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 115
0000 22                RET     
             ; FUNCTION PMC3_Cmd_6A (END)

             ; FUNCTION PMC3_Cmd_6B (BEGIN)
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 123
0000 22                RET     
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 14  

             ; FUNCTION PMC3_Cmd_6B (END)

             ; FUNCTION PMC3_Cmd_6C (BEGIN)
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 131
0000 22                RET     
             ; FUNCTION PMC3_Cmd_6C (END)

             ; FUNCTION PMC3_Cmd_6D (BEGIN)
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 139
0000 22                RET     
             ; FUNCTION PMC3_Cmd_6D (END)

             ; FUNCTION PMC3_Cmd_6E (BEGIN)
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 147
0000 22                RET     
             ; FUNCTION PMC3_Cmd_6E (END)

             ; FUNCTION PMC3_Cmd_6F (BEGIN)
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 155
0000 22                RET     
             ; FUNCTION PMC3_Cmd_6F (END)

             ; FUNCTION PMC3_Data_60 (BEGIN)
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
0000 020000      E     LJMP    PECI_PSTWriteBuffer
             ; FUNCTION PMC3_Data_60 (END)

             ; FUNCTION PMC3_Data_61 (BEGIN)
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 171
0000 22                RET     
             ; FUNCTION PMC3_Data_61 (END)

             ; FUNCTION PMC3_Data_62 (BEGIN)
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 179
0000 22                RET     
             ; FUNCTION PMC3_Data_62 (END)

             ; FUNCTION PMC3_Data_63 (BEGIN)
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 187
0000 22                RET     
             ; FUNCTION PMC3_Data_63 (END)

             ; FUNCTION PMC3_Data_64 (BEGIN)
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 195
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 15  

0000 22                RET     
             ; FUNCTION PMC3_Data_64 (END)

             ; FUNCTION PMC3_Data_65 (BEGIN)
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 203
0000 22                RET     
             ; FUNCTION PMC3_Data_65 (END)

             ; FUNCTION PMC3_Data_66 (BEGIN)
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 211
0000 22                RET     
             ; FUNCTION PMC3_Data_66 (END)

             ; FUNCTION PMC3_Data_67 (BEGIN)
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 219
0000 22                RET     
             ; FUNCTION PMC3_Data_67 (END)

             ; FUNCTION PMC3_Data_68 (BEGIN)
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 227
0000 22                RET     
             ; FUNCTION PMC3_Data_68 (END)

             ; FUNCTION PMC3_Data_69 (BEGIN)
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
                                           ; SOURCE LINE # 235
0000 22                RET     
             ; FUNCTION PMC3_Data_69 (END)

             ; FUNCTION PMC3_Data_6A (BEGIN)
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
                                           ; SOURCE LINE # 243
0000 22                RET     
             ; FUNCTION PMC3_Data_6A (END)

             ; FUNCTION PMC3_Data_6B (BEGIN)
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 251
0000 22                RET     
             ; FUNCTION PMC3_Data_6B (END)

             ; FUNCTION PMC3_Data_6C (BEGIN)
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
                                           ; SOURCE LINE # 259
0000 22                RET     
             ; FUNCTION PMC3_Data_6C (END)

             ; FUNCTION PMC3_Data_6D (BEGIN)
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 265
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 16  

                                           ; SOURCE LINE # 267
0000 22                RET     
             ; FUNCTION PMC3_Data_6D (END)

             ; FUNCTION PMC3_Data_6E (BEGIN)
                                           ; SOURCE LINE # 272
                                           ; SOURCE LINE # 273
                                           ; SOURCE LINE # 275
0000 22                RET     
             ; FUNCTION PMC3_Data_6E (END)

             ; FUNCTION PMC3_Data_6F (BEGIN)
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 283
0000 22                RET     
             ; FUNCTION PMC3_Data_6F (END)

             ; FUNCTION service_pci4 (BEGIN)
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
0000 900000      E     MOV     DPTR,#PM3STS
0003 E0                MOVX    A,@DPTR
0004 30E159            JNB     ACC.1,?C0036
                                           ; SOURCE LINE # 330
                                           ; SOURCE LINE # 332
0007         ?C0035:
                                           ; SOURCE LINE # 334
0007 900000      E     MOV     DPTR,#PM3STS
000A E0                MOVX    A,@DPTR
000B 30E322            JNB     ACC.3,?C0037
                                           ; SOURCE LINE # 335
                                           ; SOURCE LINE # 336
000E 900000      E     MOV     DPTR,#PM3DI
0011 E0                MOVX    A,@DPTR
0012 F500        E     MOV     PM3Cmd,A
                                           ; SOURCE LINE # 337
0014 120000      E     LCALL   EnablePMC3IBFInt
                                           ; SOURCE LINE # 338
0017 E4                CLR     A
0018 FF                MOV     R7,A
0019 120000      R     LCALL   _PMC3SetDataCounter
                                           ; SOURCE LINE # 339
001C E500        E     MOV     A,PM3Cmd
001E C4                SWAP    A
001F 540F              ANL     A,#0FH
0021 25E0              ADD     A,ACC
0023 2400        R     ADD     A,#LOW PortPMC3Cmd_table
0025 F582              MOV     DPL,A
0027 E4                CLR     A
0028 3400        R     ADDC    A,#HIGH PortPMC3Cmd_table
002A 120000      R     LCALL   L?0075
002D 020000      E     LJMP    ?C?ICALL
                                           ; SOURCE LINE # 340
0030         ?C0037:
                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 343
0030 E500        E     MOV     A,PM3DataCount
0032 7009              JNZ     ?C0039
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 345
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 17  

0034 900000      E     MOV     DPTR,#PM3DI
0037 E0                MOVX    A,@DPTR
0038 F500        E     MOV     PM3Data,A
                                           ; SOURCE LINE # 346
003A 020000      E     LJMP    EnablePMC3IBFInt
                                           ; SOURCE LINE # 347
003D         ?C0039:
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 350
003D 900000      E     MOV     DPTR,#PM3DI
0040 E0                MOVX    A,@DPTR
0041 F500        E     MOV     PM3Data,A
                                           ; SOURCE LINE # 351
0043 120000      E     LCALL   EnablePMC3IBFInt
                                           ; SOURCE LINE # 352
0046 E500        E     MOV     A,PM3DataCount
0048 6016              JZ      ?C0036
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
004A E500        E     MOV     A,PM3Cmd
004C C4                SWAP    A
004D 540F              ANL     A,#0FH
004F 25E0              ADD     A,ACC
0051 2400        R     ADD     A,#LOW PortPMC3Data_table
0053 F582              MOV     DPL,A
0055 E4                CLR     A
0056 3400        R     ADDC    A,#HIGH PortPMC3Data_table
0058 120000      R     LCALL   L?0075
005B 120000      E     LCALL   ?C?ICALL
                                           ; SOURCE LINE # 355
005E 1500        E     DEC     PM3DataCount
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 359
0060         ?C0036:
0060 22                RET     
             ; FUNCTION service_pci4 (END)

             ; FUNCTION PMC3_Cmd_0X (BEGIN)
                                           ; SOURCE LINE # 364
                                           ; SOURCE LINE # 365
                                           ; SOURCE LINE # 367
0000 22                RET     
             ; FUNCTION PMC3_Cmd_0X (END)

             ; FUNCTION PMC3_Cmd_1X (BEGIN)
                                           ; SOURCE LINE # 372
                                           ; SOURCE LINE # 373
                                           ; SOURCE LINE # 375
0000 22                RET     
             ; FUNCTION PMC3_Cmd_1X (END)

             ; FUNCTION PMC3_Cmd_2X (BEGIN)
                                           ; SOURCE LINE # 380
                                           ; SOURCE LINE # 381
                                           ; SOURCE LINE # 383
0000 22                RET     
             ; FUNCTION PMC3_Cmd_2X (END)

             ; FUNCTION PMC3_Cmd_3X (BEGIN)
                                           ; SOURCE LINE # 388
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 18  

                                           ; SOURCE LINE # 389
                                           ; SOURCE LINE # 391
0000 22                RET     
             ; FUNCTION PMC3_Cmd_3X (END)

             ; FUNCTION PMC3_Cmd_4X (BEGIN)
                                           ; SOURCE LINE # 396
                                           ; SOURCE LINE # 397
                                           ; SOURCE LINE # 399
0000 22                RET     
             ; FUNCTION PMC3_Cmd_4X (END)

             ; FUNCTION PMC3_Cmd_5X (BEGIN)
                                           ; SOURCE LINE # 404
                                           ; SOURCE LINE # 405
                                           ; SOURCE LINE # 407
0000 22                RET     
             ; FUNCTION PMC3_Cmd_5X (END)

             ; FUNCTION PMC3_Cmd_6X (BEGIN)
                                           ; SOURCE LINE # 435
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 437
0000 E500        E     MOV     A,PM3Cmd
0002 540F              ANL     A,#0FH
0004 25E0              ADD     A,ACC
0006 2400        R     ADD     A,#LOW PMC3Cmd6X_table
0008 F582              MOV     DPL,A
000A E4                CLR     A
000B 3400        R     ADDC    A,#HIGH PMC3Cmd6X_table
000D 120000      R     LCALL   L?0076
0010 020000      E     LJMP    ?C?ICALL
             ; FUNCTION PMC3_Cmd_6X (END)

             ; FUNCTION PMC3_Cmd_7X (BEGIN)
                                           ; SOURCE LINE # 443
                                           ; SOURCE LINE # 444
                                           ; SOURCE LINE # 446
0000 22                RET     
             ; FUNCTION PMC3_Cmd_7X (END)

             ; FUNCTION PMC3_Cmd_8X (BEGIN)
                                           ; SOURCE LINE # 451
                                           ; SOURCE LINE # 452
                                           ; SOURCE LINE # 454
0000 22                RET     
             ; FUNCTION PMC3_Cmd_8X (END)

             ; FUNCTION PMC3_Cmd_9X (BEGIN)
                                           ; SOURCE LINE # 459
                                           ; SOURCE LINE # 460
                                           ; SOURCE LINE # 462
0000 22                RET     
             ; FUNCTION PMC3_Cmd_9X (END)

             ; FUNCTION PMC3_Cmd_AX (BEGIN)
                                           ; SOURCE LINE # 467
                                           ; SOURCE LINE # 468
                                           ; SOURCE LINE # 470
0000 22                RET     
             ; FUNCTION PMC3_Cmd_AX (END)

C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 19  

             ; FUNCTION PMC3_Cmd_BX (BEGIN)
                                           ; SOURCE LINE # 475
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 478
0000 22                RET     
             ; FUNCTION PMC3_Cmd_BX (END)

             ; FUNCTION PMC3_Cmd_CX (BEGIN)
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 484
                                           ; SOURCE LINE # 486
0000 22                RET     
             ; FUNCTION PMC3_Cmd_CX (END)

             ; FUNCTION PMC3_Cmd_DX (BEGIN)
                                           ; SOURCE LINE # 491
                                           ; SOURCE LINE # 492
                                           ; SOURCE LINE # 494
0000 22                RET     
             ; FUNCTION PMC3_Cmd_DX (END)

             ; FUNCTION PMC3_Cmd_EX (BEGIN)
                                           ; SOURCE LINE # 499
                                           ; SOURCE LINE # 500
                                           ; SOURCE LINE # 502
0000 22                RET     
             ; FUNCTION PMC3_Cmd_EX (END)

             ; FUNCTION PMC3_Cmd_FX (BEGIN)
                                           ; SOURCE LINE # 507
                                           ; SOURCE LINE # 508
                                           ; SOURCE LINE # 510
0000 22                RET     
             ; FUNCTION PMC3_Cmd_FX (END)

             ; FUNCTION PMC3_Cmd_0XData (BEGIN)
                                           ; SOURCE LINE # 515
                                           ; SOURCE LINE # 516
                                           ; SOURCE LINE # 518
0000 22                RET     
             ; FUNCTION PMC3_Cmd_0XData (END)

             ; FUNCTION PMC3_Cmd_1XData (BEGIN)
                                           ; SOURCE LINE # 523
                                           ; SOURCE LINE # 524
                                           ; SOURCE LINE # 526
0000 22                RET     
             ; FUNCTION PMC3_Cmd_1XData (END)

             ; FUNCTION PMC3_Cmd_2XData (BEGIN)
                                           ; SOURCE LINE # 531
                                           ; SOURCE LINE # 532
                                           ; SOURCE LINE # 534
0000 22                RET     
             ; FUNCTION PMC3_Cmd_2XData (END)

             ; FUNCTION PMC3_Cmd_3XData (BEGIN)
                                           ; SOURCE LINE # 539
                                           ; SOURCE LINE # 540
                                           ; SOURCE LINE # 542
0000 22                RET     
             ; FUNCTION PMC3_Cmd_3XData (END)
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 20  


             ; FUNCTION PMC3_Cmd_4XData (BEGIN)
                                           ; SOURCE LINE # 547
                                           ; SOURCE LINE # 548
                                           ; SOURCE LINE # 550
0000 22                RET     
             ; FUNCTION PMC3_Cmd_4XData (END)

             ; FUNCTION PMC3_Cmd_5XData (BEGIN)
                                           ; SOURCE LINE # 555
                                           ; SOURCE LINE # 556
                                           ; SOURCE LINE # 558
0000 22                RET     
             ; FUNCTION PMC3_Cmd_5XData (END)

             ; FUNCTION PMC3_Cmd_6XData (BEGIN)
                                           ; SOURCE LINE # 585
                                           ; SOURCE LINE # 586
                                           ; SOURCE LINE # 587
0000 E500        E     MOV     A,PM3Cmd
0002 540F              ANL     A,#0FH
0004 25E0              ADD     A,ACC
0006 2400        R     ADD     A,#LOW PMC3Data6X_table
0008 F582              MOV     DPL,A
000A E4                CLR     A
000B 3400        R     ADDC    A,#HIGH PMC3Data6X_table
000D 120000      R     LCALL   L?0076
0010 020000      E     LJMP    ?C?ICALL
             ; FUNCTION PMC3_Cmd_6XData (END)

             ; FUNCTION PMC3_Cmd_7XData (BEGIN)
                                           ; SOURCE LINE # 593
                                           ; SOURCE LINE # 594
                                           ; SOURCE LINE # 596
0000 22                RET     
             ; FUNCTION PMC3_Cmd_7XData (END)

             ; FUNCTION PMC3_Cmd_8XData (BEGIN)
                                           ; SOURCE LINE # 601
                                           ; SOURCE LINE # 602
                                           ; SOURCE LINE # 604
0000 22                RET     
             ; FUNCTION PMC3_Cmd_8XData (END)

             ; FUNCTION PMC3_Cmd_9XData (BEGIN)
                                           ; SOURCE LINE # 609
                                           ; SOURCE LINE # 610
                                           ; SOURCE LINE # 612
0000 22                RET     
             ; FUNCTION PMC3_Cmd_9XData (END)

             ; FUNCTION PMC3_Cmd_AXData (BEGIN)
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 618
                                           ; SOURCE LINE # 620
0000 22                RET     
             ; FUNCTION PMC3_Cmd_AXData (END)

             ; FUNCTION PMC3_Cmd_BXData (BEGIN)
                                           ; SOURCE LINE # 625
                                           ; SOURCE LINE # 626
                                           ; SOURCE LINE # 628
C51 COMPILER V7.50   OEM_PM3                                                               09/08/2020 15:56:25 PAGE 21  

0000 22                RET     
             ; FUNCTION PMC3_Cmd_BXData (END)

             ; FUNCTION PMC3_Cmd_CXData (BEGIN)
                                           ; SOURCE LINE # 633
                                           ; SOURCE LINE # 634
                                           ; SOURCE LINE # 636
0000 22                RET     
             ; FUNCTION PMC3_Cmd_CXData (END)

             ; FUNCTION PMC3_Cmd_DXData (BEGIN)
                                           ; SOURCE LINE # 641
                                           ; SOURCE LINE # 642
                                           ; SOURCE LINE # 644
0000 22                RET     
             ; FUNCTION PMC3_Cmd_DXData (END)

             ; FUNCTION PMC3_Cmd_EXData (BEGIN)
                                           ; SOURCE LINE # 649
                                           ; SOURCE LINE # 650
                                           ; SOURCE LINE # 652
0000 22                RET     
             ; FUNCTION PMC3_Cmd_EXData (END)

             ; FUNCTION PMC3_Cmd_FXData (BEGIN)
                                           ; SOURCE LINE # 657
                                           ; SOURCE LINE # 658
                                           ; SOURCE LINE # 660
0000 22                RET     
             ; FUNCTION PMC3_Cmd_FXData (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    235    ----
   CONSTANT SIZE    =    128    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V7.50   OEM_TIMER                                                             09/08/2020 15:56:26 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE OEM_TIMER
OBJECT MODULE PLACED IN Code\Oem\OEM_TIMER.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Code\Oem\OEM_TIMER.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\I
                    -NCLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_TIMER.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *---------------------------------------------------------------------------*/
   8          
   9          #include <CORE_INCLUDE.H>
  10          #include <OEM_INCLUDE.H>
  11          
  12          
  13          //         PS2  PS1     PS0     WDIDLE   ¡§C    SWRST   WDTOVF  WDTEN
  14          //Bit    7              6       5        4                      3         2                     1          0
  15          
  16          //PS2
  17          //PS1
  18          //PS0
  19          //                      Prescaler bits for the watchdog timer (WDT). When all three bits are cleared to 0, the watchdog timer
             - has a nominal
  20          //                      period of 16K clock cycles. When all three bits are set to 1, the nominal period is 2048K clock cycle
             -s.
  21          
  22          //WDIDLE        Disable/enable the Watchdog Timer in IDLE mode.
  23          //          When WDIDLE = 0, WDT continues to count in IDLE mode. When
  24          //                       WDIDLE = 1, WDT freezes while the device is in IDLE mode.
  25          //SWRST         Software Reset Flag. Set when a software reset is generated by writing the sequence 5AH/A5H to WD
             -TRST. Also set
  26          //          when an incorrect sequence is written to WDTRST. Must be cleared by software.
  27          //WDTOVF    Watchdog Overflow Flag. Set when a WDT rest is generated by the WDT timer overflow. Also set w
             -hen an incorrect
  28          //          sequence is written to WDTRST. Must be cleared by software.
  29          //WDTEN     Watchdog Enable Flag. This bit is READ-ONLY and reflects the status of the WDT (whether it is 
             -running or not). The
  30          //          WDT is disabled after any reset and must be re-enabled by writing 1EH/E1H to WDTRST
  31          
  32          
  33          void ExtWDTInit(void)
  34          {
  35   1          #if WATCHDOG
  36   1               ETPSR=0x00;                    // SELECT 32.768Khz
  37   1               ETCNTLHR=0x80;         // SET EXTERNAL TIMERR = 1sec
  38   1               ETCNTLLR=0x00;         // SET EXTERNAL TIMERR = 1sec 
  39   1               //EWDCNTLR=WATCHDOG_COUNTER;   // SET WATCHDOG TIMER = WATCHDOG_COUNTER ("DEFINE.H")
  40   1               ETWCFG=0x20;                   // LOCK WATCHDOG REGISTER
  41   1               ETWCTRL = 0x10;        //EWDCMS  External WDT stop count mode select   1: External WDT can be stopped by
             - setting EWDSCEN bit,   0: External WDT cannot be stopped
  42   1               ETWCTRL = 0x30;        //External WDT stop count enable  1: stop   0:otherwise.         
  43   1          #endif // WATCHDOG
  44   1      }
  45          
  46          //----------------------------------------------------------------------------
  47          // Enable internal watch dog and waiting EC reset                 
  48          //----------------------------------------------------------------------------
C51 COMPILER V7.50   OEM_TIMER                                                             09/08/2020 15:56:26 PAGE 2   

  49          void InternalWDTNow(void)
  50          {
  51   1              WDTCON|=0x01;   // WDTRST = 1 Reset watch dog timer.
  52   1              WDTCON|=0x02;   // WDTEN  = 1 Enable watch dog.     
  53   1              while(1);       // Wait for watch dog time-out      
  54   1      }
  55          
  56          //----------------------------------------------------------------------------
  57          // Enable internal watch dog
  58          //----------------------------------------------------------------------------
  59          void EnableInternalWDT(void)
  60          {
  61   1              CKCON |= 0xC0;              // set 26 bit counter
  62   1              WDTRST = 1;                             // reset internal watch dog
  63   1              WDTEB = 1;                              // enable internal watch dog            
  64   1      }
  65          
  66          //----------------------------------------------------------------------------
  67          // Disable internal watch dog
  68          //----------------------------------------------------------------------------
  69          void DisableInternalWDT(void)
  70          {
  71   1              WDTEB = 0;                              // Disable internal watch dog
  72   1      }
  73          
  74          //----------------------------------------------------------------------------
  75          // Disable internal watch dog
  76          //----------------------------------------------------------------------------
  77          void ResetInternalWDT(void)
  78          {
  79   1              WDTRST = 1;                             // Reset internal watch dog counter
  80   1      }
C51 COMPILER V7.50   OEM_TIMER                                                             09/08/2020 15:56:26 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ExtWDTInit (BEGIN)
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 36
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#ETPSR
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 37
0005 900000      E     MOV     DPTR,#ETCNTLHR
0008 7480              MOV     A,#080H
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
000B E4                CLR     A
000C 900000      E     MOV     DPTR,#ETCNTLLR
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 40
0010 900000      E     MOV     DPTR,#ETWCFG
0013 7420              MOV     A,#020H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 41
0016 900000      E     MOV     DPTR,#ETWCTRL
0019 7410              MOV     A,#010H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 42
001C 7430              MOV     A,#030H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 44
001F 22                RET     
             ; FUNCTION ExtWDTInit (END)

             ; FUNCTION InternalWDTNow (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0000 43D801            ORL     WDTCON,#01H
                                           ; SOURCE LINE # 52
0003 43D802            ORL     WDTCON,#02H
0006         ?C0002:
                                           ; SOURCE LINE # 53
0006 80FE              SJMP    ?C0002
             ; FUNCTION InternalWDTNow (END)

             ; FUNCTION EnableInternalWDT (BEGIN)
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0000 438EC0            ORL     CKCON,#0C0H
                                           ; SOURCE LINE # 62
0003 D2D8              SETB    WDTRST
                                           ; SOURCE LINE # 63
0005 D2D9              SETB    WDTEB
                                           ; SOURCE LINE # 64
0007 22                RET     
             ; FUNCTION EnableInternalWDT (END)

             ; FUNCTION DisableInternalWDT (BEGIN)
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
C51 COMPILER V7.50   OEM_TIMER                                                             09/08/2020 15:56:26 PAGE 4   

0000 C2D9              CLR     WDTEB
                                           ; SOURCE LINE # 72
0002 22                RET     
             ; FUNCTION DisableInternalWDT (END)

             ; FUNCTION ResetInternalWDT (BEGIN)
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0000 D2D8              SETB    WDTRST
                                           ; SOURCE LINE # 80
0002 22                RET     
             ; FUNCTION ResetInternalWDT (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     54    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V7.50   OEM_LPC                                                               09/08/2020 15:56:26 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE OEM_LPC
OBJECT MODULE PLACED IN Code\Oem\OEM_LPC.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Code\Oem\OEM_LPC.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\INC
                    -LUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_LPC.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *---------------------------------------------------------------------------*/
   8           
   9          #include <CORE_INCLUDE.H>
  10          #include <OEM_INCLUDE.H>
  11          
  12          //----------------------------------------------------------------------------
  13          // The selection of HLPC protect mode use P0ZR
  14          //----------------------------------------------------------------------------
  15          void HLPC_Protect0Mode(BYTE mode)
  16          {
  17   1          if(mode==ProtectMode_ReadProtection || mode==ProtectMode_WriteProtection || mode==ProtectMode_RWProtec
             -tion)
  18   1          {
  19   2              P0ZR|=mode;
  20   2          }
  21   1      }
  22          
  23          //----------------------------------------------------------------------------
  24          // The selection of HLPC protect size use P0ZR
  25          //----------------------------------------------------------------------------
  26          void HLPC_Protect0Size(BYTE size)
  27          {
  28   1          P0ZR|=size;
  29   1      }
  30          
  31          //----------------------------------------------------------------------------
  32          // The selection of HLPC protect mode use P1ZR
  33          //----------------------------------------------------------------------------
  34          void HLPC_Protect1Mode(BYTE mode)
  35          {
  36   1          if(mode==ProtectMode_ReadProtection || mode==ProtectMode_WriteProtection || mode==ProtectMode_RWProtec
             -tion)
  37   1          {
  38   2              P1ZR|=mode;
  39   2          }
  40   1      }
  41          
  42          //----------------------------------------------------------------------------
  43          // The selection of HLPC protect size use P1ZR
  44          //----------------------------------------------------------------------------
  45          void HLPC_Protect1Size(BYTE size)
  46          {
  47   1          P1ZR|=size;
  48   1      }
  49          
  50          //----------------------------------------------------------------------------
  51          // To lock protect related registers
  52          //----------------------------------------------------------------------------
C51 COMPILER V7.50   OEM_LPC                                                               09/08/2020 15:56:26 PAGE 2   

  53          void HLPC_LockProtectRelatedRegisters(void)
  54          {
  55   1          SET_MASK(SMECCS, LKPRR);
  56   1      }
  57          
  58          //----------------------------------------------------------------------------
  59          // The example of writeing protect 0x180000 ~ 0x1FFFFF
  60          //  bit 23  P1BA0R.bit3
  61          //  bit 22  P1BA0R.bit2
  62          //  bit 21  P1BA0R.bit1
  63          //  bit 20  P1BA0R.bit0
  64          
  65          //  bit 19  P1BA1R.bit7
  66          //  bit 18  P1BA1R.bit6
  67          //  bit 17  P1BA1R.bit5
  68          //  bit 16  P1BA1R.bit4
  69          //  bit 15  P1BA1R.bit3
  70          //  bit 14  P1BA1R.bit2
  71          //  bit 13  P1BA1R.bit1
  72          //  bit 12  P1BA1R.bit0
  73          //----------------------------------------------------------------------------
  74          void HLPC_WriteProtect0(void)
  75          {
  76   1          P0BA0R = BIT0;
  77   1          P0BA1R = BIT7;
  78   1          HLPC_Protect0Mode(ProtectMode_WriteProtection);
  79   1          HLPC_Protect0Size(ProtectSize_512K);
  80   1          
  81   1          HLPC_LockProtectRelatedRegisters();
  82   1      }
  83          
  84          //----------------------------------------------------------------------------
  85          //
  86          //----------------------------------------------------------------------------
  87          void HLPC_WriteProtectEnable0(void)
  88          {
  89   1          P0BA0R = 0x00;
  90   1          P0BA1R = 0x00;
  91   1          P0ZR = 0x00;
  92   1      }
  93           
C51 COMPILER V7.50   OEM_LPC                                                               09/08/2020 15:56:26 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _HLPC_Protect0Mode (BEGIN)
                                           ; SOURCE LINE # 15
;---- Variable 'mode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 17
0000 EF                MOV     A,R7
0001 6008              JZ      ?C0002
0003 6440              XRL     A,#040H
0005 6004              JZ      ?C0002
0007 EF                MOV     A,R7
0008 B48006            CJNE    A,#080H,?C0003
000B         ?C0002:
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
000B 900000      E     MOV     DPTR,#P0ZR
000E E0                MOVX    A,@DPTR
000F 4F                ORL     A,R7
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 21
0011         ?C0003:
0011 22                RET     
             ; FUNCTION _HLPC_Protect0Mode (END)

             ; FUNCTION _HLPC_Protect0Size (BEGIN)
                                           ; SOURCE LINE # 26
;---- Variable 'size' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0000 900000      E     MOV     DPTR,#P0ZR
0003 E0                MOVX    A,@DPTR
0004 4F                ORL     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 29
0006 22                RET     
             ; FUNCTION _HLPC_Protect0Size (END)

             ; FUNCTION _HLPC_Protect1Mode (BEGIN)
                                           ; SOURCE LINE # 34
;---- Variable 'mode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
0000 EF                MOV     A,R7
0001 6008              JZ      ?C0006
0003 6440              XRL     A,#040H
0005 6004              JZ      ?C0006
0007 EF                MOV     A,R7
0008 B48006            CJNE    A,#080H,?C0007
000B         ?C0006:
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
000B 900000      E     MOV     DPTR,#P1ZR
000E E0                MOVX    A,@DPTR
000F 4F                ORL     A,R7
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
0011         ?C0007:
0011 22                RET     
C51 COMPILER V7.50   OEM_LPC                                                               09/08/2020 15:56:26 PAGE 4   

             ; FUNCTION _HLPC_Protect1Mode (END)

             ; FUNCTION _HLPC_Protect1Size (BEGIN)
                                           ; SOURCE LINE # 45
;---- Variable 'size' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
0000 900000      E     MOV     DPTR,#P1ZR
0003 E0                MOVX    A,@DPTR
0004 4F                ORL     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 48
0006 22                RET     
             ; FUNCTION _HLPC_Protect1Size (END)

             ; FUNCTION HLPC_LockProtectRelatedRegisters (BEGIN)
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
0000 900000      E     MOV     DPTR,#SMECCS
0003 E0                MOVX    A,@DPTR
0004 4404              ORL     A,#04H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 56
0007 22                RET     
             ; FUNCTION HLPC_LockProtectRelatedRegisters (END)

             ; FUNCTION HLPC_WriteProtect0 (BEGIN)
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0000 900000      E     MOV     DPTR,#P0BA0R
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
0006 900000      E     MOV     DPTR,#P0BA1R
0009 7480              MOV     A,#080H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
000C 7F40              MOV     R7,#040H
000E 120000      R     LCALL   _HLPC_Protect0Mode
                                           ; SOURCE LINE # 79
0011 7F07              MOV     R7,#07H
0013 120000      R     LCALL   _HLPC_Protect0Size
                                           ; SOURCE LINE # 81
0016 020000      R     LJMP    HLPC_LockProtectRelatedRegisters
             ; FUNCTION HLPC_WriteProtect0 (END)

             ; FUNCTION HLPC_WriteProtectEnable0 (BEGIN)
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#P0BA0R
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
0005 900000      E     MOV     DPTR,#P0BA1R
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
0009 900000      E     MOV     DPTR,#P0ZR
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 92
C51 COMPILER V7.50   OEM_LPC                                                               09/08/2020 15:56:26 PAGE 5   

000D 22                RET     
             ; FUNCTION HLPC_WriteProtectEnable0 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     97    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

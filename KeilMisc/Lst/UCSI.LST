C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE UCSI
OBJECT MODULE PLACED IN Code\Oem\UCSI.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Code\Oem\UCSI.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\INCLUD
                    -E\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /******************************************************************************
   2          Copyright (c) 2017, Analogix Semiconductor, Inc.
   3          
   4          PKG Ver  : V1.1.1
   5          Filename : ucsi.c
   6          Project  : EC UCSI Multiport
   7          Created  : 17 Jul 2017
   8          Devices  : ANX7447
   9          Toolchain: C51
  10          
  11          Description:
  12          UCSI public layer.
  13          The basic UCSI COMMANDs public interface implementation.
  14          
  15          Revision History:
  16          V0.1
  17          1. Initial version, implemented the basic required COMMANDs.
  18          
  19          V0.2
  20          1. Add connector exist checking for command GET_ALTERNATE_MODES
  21          
  22          v0.6.0
  23          1. Used 1ms hook and 50ms hook to check Async callback, event, GPIO interrupt.
  24          2. Used GPIO Port H.6 as Liberty Type-C port1 interrupt pin, configured as "INPUT", active is low.
  25          3. Used GPIO Port H.5 as Liberty Type-C port0 interrupt pin, configured as "INPUT", active is low.
  26          4. UCSI notify OPM by calling interface "ucsi_ppm_notify_opm"
  27          5. Once EC received event from OPM, EC should copy all related data to data structure "ppm2bios" which has
             - been defined in ucsi.c.
  28          6. ANX7441_LIB.C will call all i2c_XXX_XXX_reg to access chip register space.
  29          7. All UCSI code takes ~15K memory size, XDATA takes around 600Bytes.
  30          
  31          v0.6.1
  32          1. Remove 50ms timer, add 10ms timer.
  33          2. Minor change for UCSI infrastructure.
  34          3. Resolve/Fix EC get unexpected voltage/current(0) while work as power sink.
  35          4. Resolve/Fix self-charging issue.
  36          5. Resolve/Fix EC will hang up if ANX7447 no OCM inside or ANX7447 damaged issue.
  37          6. Add OCM version for each port for BIOS checking.
  38          7. UCSI preliminary working, can properly receive PPM_RESET/NOTIFICATION_ENABLE/CONNECTOR_CAPABILITY/CAPAB
             -ILITY.
  39          
  40          v0.6.2
  41          1. Fix dead battery mode, system cannot power on with 40W type-c charger attached.
  42          2. PD Controller(ANX7447/ANX7411) will synchronize booting with EC (PD start to run after EC running).
  43          3. Add new interface to Re-driver (MUX) chip control for DP and USB3.X
  44          
  45          v0.6.3
  46          1. Add power/data role swap in the initial stage if OPM set fixed power/data role
  47          2. Fix error ack command didn't set "CommandCompletedIndicator" issue.
  48          3. Fix error command "Datalength" not 0x10 issue.
  49          4. Enlarge command timeout to 2.5s.
  50          
  51          v0.6.4
  52          1. Turn off DisplayPort Alt Mode support feature in sink identity & svid.
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 2   

  53          2. Add send source/sink capability interface.
  54          3. Add connector partner type checking in data role swap callback.
  55          4. Add connector power role checking in power role swap callback.
  56          5. Fix HLK "Get alt mode command" test item.
  57          6. Fix HLK "Connector status - Error" test item.
  58          7. Fix HLK "Connector status - fail connector reset in dead battery condition".
  59          
  60          v0.6.5
  61          1. Add battery out checking in "ppm_connector_reset" routing for UCSI "UCSI Get Connector Status - fail co
             -nnector reset in dead battery" test item.
  62          2. Fix JIRA LBT-215, Intel ID:1504599338 : GLK9(ANX7447 inside)+TAIKSEN adapter(HDMI+USB+Type-C charger)+A
             -OC I2267 HDMI monitor. Plug in the adapter, no video output on monitor.
  63          3. Fix USB TYPE-C ECR.
  64          
  65          v0.6.6
  66          1. support not calibrate chip, support AC chip.
  67          
  68          v0.6.7
  69          1.Fix apple dongle with Type-C charger attached, GLK cannot get high voltage charging.
  70          2.Set VSafe0V to 1.8V.
  71          
  72          v0.7.0
  73          1. FIX HLK test items.
  74          2. Add more UCSI connector capability.
  75          3. Add new send source capability interface.
  76          4. Adjust SET_UOR/SET_PDR swap timing control.
  77          
  78          v0.7.1
  79          1. Fix HLK test item, enlarge SET_PDR waiting time to 1.5s.
  80          
  81          v0.8.0
  82          1.Turn off Debug accessory support flag.
  83          2.Turn off Audio accessory support flag.
  84          3.Fix PD cannot power off/on, no action while attach/detach charger/dongle.
  85          4.Fix Mass interrupt issue.
  86          5.Release v0.8.0
  87          
  88          v0.8.1
  89          1. Fix not correctly clear PD interrupt issue.
  90          2. Fix power direction not correctly report issue.
  91          
  92          v0.8.2
  93          1. Checking UOM PDM flags while send source/sink caps, JIRA LBT-410.
  94          2. Send DP caps(source prefer) to firmware at chip initial stage, JIRA LBT-411.
  95          
  96          v0.8.3
  97          1. Fix JIRA:LBT-302(some kind of dongle cannot output 4K/60Hz video), Add PIN_ASSIGMENT_E support.
  98          2. Shrink SET_PDR waiting time to 750ms, JIRA: LBT-412.
  99          
 100          v0.8.4
 101          1. Fix several USB Type-C PD 2.0 CTS failed items, LBT-413.
 102          2. Fix initialization message(such as SVID, DP_CAPS) didn't send to OCM on time issue, LBT-414.
 103          
 104          v1.0.1
 105          Based on v0.8.4.
 106          
 107          v1.0.2
 108          Fix JIRA LBT-366, LBT-404, LBT-429
 109          
 110          v1.0.5
 111          1. Fix JIRA LBT-429
 112          2. Add PR_CONSUMER_GOT_POWER interrupt, JIRA LBT-539
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 3   

 113          3. Code clean up
 114          
 115          v1.0.6
 116          1. Fix JIRA LBT-501 PD 3.0 CTS
 117          
 118          v1.0.7
 119          1. Fix HLK item failed if the second Type-C port have no device attached.
 120          2. Add sending get_source_caps to request RDO control
 121          
 122          v1.0.8
 123          1. Disable SET_UOM feature
 124          
 125          v1.0.9
 126          1. Change the "Data Length" field in "GET_ALTERNATE_MODES" status from 4 times to 6 times.
 127          
 128          v1.0.a
 129          1. Add HPD/PIN ASSIGNMENT/CC STATUS/DETACH event callback interface, JIRA LBT-540
 130          
 131          v1.0.b
 132          1. remove OCM sending hardware reset event report, keep received, JIRA LBT-541.
 133          
 134          v1.0.c
 135          1.Enable SET_UOM feature, fix HLK failed item, JIRA LBT-552
 136          
 137          v1.1.1
 138          1. Change the version v1.0.c to v1.1.1.
 139          ******************************************************************************/
 140          #include <stdio.h>
 141          #include <string.h>
 142          
 143          #include <UCSI.H>
 144          #include <ANX7447_LIB.H>
 145          
 146          #define UCSI_baseaddr   0x0A00
 147          static enum UCSI_PPM_STATE ANXXDATA ucsi_ppm_state                 _at_ UCSI_baseaddr + 0x0;
 148          u8 ANXXDATA ucsi_errno                                             _at_ UCSI_baseaddr + 0x1;
 149          u8 ANXXDATA self_charging_error                                    _at_ UCSI_baseaddr + 0x5;
 150          static struct error_status_data ANXXDATA esd                       _at_ UCSI_baseaddr + 0x6;
 151          static u8 ANXXDATA connector_change_need_ack                       _at_ UCSI_baseaddr + 0x16;
 152          static u8 ANXXDATA error_need_ack                                  _at_ UCSI_baseaddr + 0x17;
 153          static u8 ANXXDATA command_complete_need_ack                       _at_ UCSI_baseaddr + 0x18;
 154          static u8 ANXXDATA need_ack_command                                _at_ UCSI_baseaddr + 0x19;
 155          u8 ANXXDATA random_data                                            _at_ UCSI_baseaddr + 0x1A;
 156          static u8 ANXXDATA registered_connector_index                      _at_ UCSI_baseaddr + 0x1B;
 157          u8 ANXXDATA timer1msCount                                          _at_ UCSI_baseaddr + 0x1c;
 158          u8 ANXXDATA i                                                      _at_ UCSI_baseaddr + 0x1F;
 159          u8 ANXXDATA j                                                      _at_ UCSI_baseaddr + 0x20;
 160          u8 ANXXDATA k                                                      _at_ UCSI_baseaddr + 0x21;
 161          u8 ANXXDATA l                                                      _at_ UCSI_baseaddr + 0x22;
 162          u8 ANXXDATA DataLength                                             _at_ UCSI_baseaddr + 0x23;
 163          u8 ANXXDATA wait_for_ack_back                                      _at_ UCSI_baseaddr + 0x24;
 164          /* reserved 0x25 ~ 0x27 */
 165          u8 current_pending_command_timeout                                 _at_ UCSI_baseaddr + 0x28;
 166          u16 ucsi_async_checking_timer                                      _at_ UCSI_baseaddr + 0x29;
 167          u8 ucsi_async_restore                                              _at_ UCSI_baseaddr + 0x2B;
 168          u8 ucsi_command_process_delay                                      _at_ UCSI_baseaddr + 0x2C;
 169          struct notification_enable_status ANXXDATA ne                      _at_ UCSI_baseaddr + 0x2F;
 170          /* reserved 0x38 ~ 0x76 */
 171          u8 ANXXDATA result                                                 _at_ UCSI_baseaddr + 0x77;
 172          u8 ANXXDATA port_index                                             _at_ UCSI_baseaddr + 0x78;
 173          u8 ANXXDATA ucsi_received_command                                  _at_ UCSI_baseaddr + 0x79;
 174          u8 ANXXDATA role                                                   _at_ UCSI_baseaddr + 0x7a;
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 4   

 175          u8 ANXXDATA c                                                      _at_ UCSI_baseaddr + 0x7b;
 176          u8 ANXXDATA len                                                    _at_ UCSI_baseaddr + 0x7c;
 177          u16 ANXXDATA count                                                 _at_ UCSI_baseaddr + 0x7d;
 178          u8 ANXXDATA port_id                                                _at_ UCSI_baseaddr + 0x7f;
 179          
 180          #define INTERFACE_SEND_BUF_SIZE 32
 181          #define INTERFACE_RECV_BUF_SIZE 32
 182          
 183          u8 InterfaceSendBuf[PD_MAX_INSTANCE][INTERFACE_SEND_BUF_SIZE]      _at_ UCSI_baseaddr + 0x80;
 184          u8 InterfaceRecvBuf[PD_MAX_INSTANCE][INTERFACE_RECV_BUF_SIZE]      _at_ UCSI_baseaddr + 0xc0;
 185          struct ppm_ucsi_parameters ANXXDATA pup                            _at_ UCSI_baseaddr + 0x1c0;
 186          
 187          //TF_008--      #define ANXLIB_baseaddr     0x0B00
 188          #define ANXLIB_baseaddr     0x0C00      //TF_008++      
 189          struct anx_context ANXXDATA context[PD_MAX_INSTANCE]               _at_ ANXLIB_baseaddr + 0x0;
 190          struct bios_share_msg ANXXDATA ppm2bios                            _at_ ANXLIB_baseaddr + 0x1b2;
 191          u8 ANXXDATA SWAP_BYTE                                              _at_ ANXLIB_baseaddr + 0x1e2;
 192          u8 ANXXDATA supply_1500ma_flag                                     _at_ ANXLIB_baseaddr + 0x1e3;
 193          u8 ANXXDATA supply_1500ma_port                                     _at_ ANXLIB_baseaddr + 0x1e4;
 194          u8 ANXXDATA request_src_caps_flag[2]                               _at_ ANXLIB_baseaddr + 0x1e5;
 195          u8 ANXXDATA change_int                                             _at_ ANXLIB_baseaddr + 0x1f0;
 196          u8 ANXXDATA change_status                                          _at_ ANXLIB_baseaddr + 0x1f1;
 197          u8 ANXXDATA intr_alert_0                                           _at_ ANXLIB_baseaddr + 0x1f2;
 198          u8 ANXXDATA intr_alert_1                                           _at_ ANXLIB_baseaddr + 0x1f3;
 199          u16 ANXXDATA pdo_h                                                 _at_ ANXLIB_baseaddr + 0x1f4;
 200          u16 ANXXDATA pdo_l                                                 _at_ ANXLIB_baseaddr + 0x1f6;
 201          u32 ANXXDATA pdo_max                                               _at_ ANXLIB_baseaddr + 0x1f8;
 202          u32 ANXXDATA pdo_max_tmp                                           _at_ ANXLIB_baseaddr + 0x1fc;
 203          
 204          extern code u32 snk_cap[];
 205          #define current_pending_command (ch->Command)
 206          
 207          #define msg    (&ppm2bios)
 208          #define cci    ((struct cci_status *)(&ppm2bios.CCI))
 209          #define sne    ((struct set_notification_enable *)(&ppm2bios.CONTROL))
 210          #define ch     ((struct control_header *)(&ppm2bios.CONTROL))
 211          #define cr     ((struct connector_reset *)(&ppm2bios.CONTROL))
 212          #define acc    ((struct ack_cc_ci*)(&ppm2bios.CONTROL))
 213          #define gcc    ((struct get_connector_capability *)(&ppm2bios.CONTROL))
 214          #define suor   ((struct set_uor *)(&ppm2bios.CONTROL))
 215          #define spdr   ((struct set_pdr *)(&ppm2bios.CONTROL))
 216          #define suom   ((struct set_uom *)(&ppm2bios.CONTROL))
 217          #define spdm   ((struct set_pdm *)(&ppm2bios.CONTROL))
 218          #define gcs    ((struct get_cam_supported *)(&ppm2bios.CONTROL))
 219          #define gcp    ((struct get_cable_property *)(&ppm2bios.CONTROL))
 220          #define gp     ((struct get_pdos *)(&ppm2bios.CONTROL))
 221          #define snc    ((struct set_new_cam *)(&ppm2bios.CONTROL))
 222          #define gam    ((struct get_alternate_modes *)(&ppm2bios.CONTROL))
 223          #define csd    ((struct connector_status_data *)(&ppm2bios.msgi))
 224          #define amd    ((struct alt_modes_data *)(&ppm2bios.msgi))
 225          #define pd     ((struct pdos_data *)(&ppm2bios.msgi))
 226          #define cpd    ((struct cable_property_data *)(&ppm2bios.msgi))
 227          #define cd     ((struct capability_data *)(&ppm2bios.msgi))
 228          #define ccd    ((struct connector_capability_data *)(&ppm2bios.msgi))
 229          
 230          
 231          #define DETECT_POWER_ON(port_index) \
 232              if (context[port_index].anx_power_status == 0) { \
 233                  ucsi_errno = ERR_INVALID; \
 234                  set_error_data(); \
 235                  return UCSI_COMMAND_FAIL; \
 236              }
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 5   

 237          
 238          #ifdef ANXDEBUG
              #define SET_STATE(X)    {\
                  ucsi_debug("%s:%d change state(%d) to state(%d).\n", \
                          __func__, __LINE__, \
                          (u16)ucsi_ppm_state, (u16)X); \
                  ucsi_ppm_state = X; \
              }
              #else
 246          #define SET_STATE(X)    {\
 247              ucsi_ppm_state = X; \
 248          }
 249          
 250          #endif
 251          
 252          #define GOTO_STATE(X)   SET_STATE(X)
 253          
 254          /*
 255           * @desc   : ucsi detect connector change
 256           * @param  :
 257           *           cci -> cci status structure
 258           * @return : void
 259           */
 260          void ucsi_ppm_connector_change_detect()
 261          {
 262   1          /* Connector change notification is disabled */
 263   1          if (ne.ConnectChange == 0)
 264   1              return;
 265   1      
 266   1          for (i = 0; i < PD_MAX_INSTANCE; i++)
 267   1              if ((context[i].csc.connector_change_indicator) != 0) {
 268   2                  cci->ConnectorChangeIndicator = i + 1;
 269   2                  break;
 270   2              }
 271   1      }
 272          
 273          /*
 274           * @desc   : SET_NOTIFICATION_ENABLE ACK setting
 275           * @param  :
 276           *           cci -> cci status structure
 277           *           result -> ACK success or fail
 278           * @return : void
 279           */
 280          static void set_notification_enable_ack()
 281          {
 282   1          S_CLEAR(cci, struct cci_status);
 283   1      
 284   1          ucsi_ppm_connector_change_detect();
 285   1      
 286   1          if (result == UCSI_COMMAND_SUCC)
 287   1              cci->ErrorIndicator = 0;
 288   1          else
 289   1              cci->ErrorIndicator = 1;
 290   1      
 291   1          cci->CommandCompletedIndicator = 1;
 292   1      }
 293          
 294          /*
 295           * @desc   : CANCEL ACK setting
 296           * @param  :
 297           *           cci -> cci status structure
 298           *           result -> ACK success or fail
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 6   

 299           * @return : void
 300           */
 301          static u8 cancel_ack()
 302          {
 303   1          S_CLEAR(cci, struct cci_status);
 304   1          
 305   1          ucsi_ppm_connector_change_detect();
 306   1      
 307   1          cci->CommandCompletedIndicator = 1;
 308   1      
 309   1          return UCSI_COMMAND_SUCC;
 310   1      }
 311          
 312          /*
 313           * @desc   : COMMAND BUSY ACK setting
 314           * @param  :
 315           *           cci -> cci status structure
 316           * @return : void
 317           */
 318          static void busy_ack()
 319          {
 320   1          S_CLEAR(cci, struct cci_status);
 321   1          cci->BusyIndicator = 1;
 322   1          cci->CommandCompletedIndicator = 1;
 323   1      }
 324          
 325          /*
 326           * @desc   : COMMAND ERROR ACK setting
 327           * @param  :
 328           *           cci -> cci status structure
 329           * @return : void
 330           */
 331          static void error_ack()
 332          {
 333   1          S_CLEAR(cci, struct cci_status);
 334   1          cci->ErrorIndicator = 1;
 335   1          cci->CommandCompletedIndicator = 1;
 336   1      }
 337          
 338          /*
 339           * @desc   : GET_CONNECTOR_RESET ACK setting
 340           * @param  :
 341           *           cci -> cci status structure
 342           *           result -> ACK success or fail
 343           * @return : void
 344           */
 345          static void connector_reset_ack()
 346          {
 347   1          S_CLEAR(cci, struct cci_status);
 348   1      
 349   1          ucsi_ppm_connector_change_detect();
 350   1      
 351   1          if (result != UCSI_COMMAND_SUCC)
 352   1              cci->ErrorIndicator = 1;
 353   1      
 354   1          cci->CommandCompletedIndicator = 1;
 355   1      }
 356          
 357          /*
 358           * @desc   : ACK_CC_CI ACK setting
 359           * @param  :
 360           *           cci -> cci status structure
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 7   

 361           *           result -> ACK success or fail
 362           * @return : void
 363           */
 364          static void ack_cc_ci_ack()
 365          {
 366   1          S_CLEAR(cci, struct cci_status);
 367   1          
 368   1          cci->AcknowledgeCommandIndicator = 1;
 369   1      }
 370          
 371          /*
 372           * @desc   : PPM_RESET ERROR ACK setting
 373           * @param  :
 374           *           cci -> cci status structure
 375           *           result -> ACK success or fail
 376           * @return : void
 377           */
 378          static void reset_ack()
 379          {
 380   1          S_CLEAR(cci, struct cci_status);
 381   1      
 382   1          if (result == UCSI_COMMAND_SUCC)
 383   1              cci->ResetCompletedIndicator = 1;
 384   1      }
 385          
 386          /*
 387           * @desc   : GET_CAPABILITY ACK setting
 388           * @param  :
 389           *           cci -> cci status structure
 390           *           result -> ACK success or fail
 391           * @return : void
 392           */
 393          static void get_capability_ack()
 394          {
 395   1          S_CLEAR(cci, struct cci_status);
 396   1      
 397   1          ucsi_ppm_connector_change_detect();
 398   1      
 399   1          if (result == UCSI_COMMAND_SUCC)
 400   1              cci->DataLength = 0x10;
 401   1          else
 402   1              cci->ErrorIndicator = 0x1;
 403   1      
 404   1          cci->CommandCompletedIndicator = 1;
 405   1      }
 406          
 407          /*
 408           * @desc   : GET_CONNECTOR_CAPABILITY ACK setting
 409           * @param  :
 410           *           cci -> cci status structure
 411           *           result -> ACK success or fail
 412           * @return : void
 413          */
 414          static void get_connector_capability_ack()
 415          {
 416   1          S_CLEAR(cci, struct cci_status);
 417   1      
 418   1          ucsi_ppm_connector_change_detect();
 419   1      
 420   1          if (result == UCSI_COMMAND_SUCC)
 421   1              cci->DataLength = 2;
 422   1          else
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 8   

 423   1              cci->ErrorIndicator = 1;
 424   1      
 425   1          cci->CommandCompletedIndicator = 1;
 426   1      }
 427          
 428          /*
 429           * @desc   : SET_UOR ACK setting
 430           * @param  :
 431           *           cci -> cci status structure
 432           *           result -> ACK success or fail
 433           * @return : void
 434           */
 435          static void set_uor_ack()
 436          {
 437   1          S_CLEAR(cci, struct cci_status);
 438   1      
 439   1          //ucsi_ppm_connector_change_detect();
 440   1      
 441   1          if (result == UCSI_COMMAND_FAIL)
 442   1              cci->ErrorIndicator = 1;
 443   1      
 444   1          cci->CommandCompletedIndicator = 1;
 445   1      }
 446          
 447          /*
 448           * @desc   : SET_PDR ACK setting
 449           * @param  :
 450           *           cci -> cci status structure
 451           *           result -> ACK success or fail
 452           * @return : void
 453           */
 454          static void set_pdr_ack()
 455          {
 456   1          S_CLEAR(cci, struct cci_status);
 457   1      
 458   1          //ucsi_ppm_connector_change_detect();
 459   1      
 460   1          if (result == UCSI_COMMAND_FAIL)
 461   1              cci->ErrorIndicator = 1;
 462   1      
 463   1          cci->CommandCompletedIndicator = 1;
 464   1      }
 465          
 466          /*
 467           * @desc   : GET_CONNECTOR_STATUS ACK setting
 468           * @param  :
 469           *           cci -> cci status structure
 470           *           result -> ACK success or fail
 471           * @return : void
 472           */
 473          static void get_connector_status_ack()
 474          {
 475   1          S_CLEAR(cci, struct cci_status);
 476   1      
 477   1          //ucsi_ppm_connector_change_detect();
 478   1      
 479   1          if (result == UCSI_COMMAND_SUCC)
 480   1              cci->DataLength = 0x09;
 481   1          else
 482   1              cci->ErrorIndicator = 1;
 483   1      
 484   1          cci->CommandCompletedIndicator = 1;
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 9   

 485   1      }
 486          
 487          /*
 488           * @desc   : GET_ERROR ACK setting
 489           * @param  :
 490           *           cci -> cci status structure
 491           *           result -> ACK success or fail
 492           * @return : void
 493           */
 494          static void get_error_status_ack()
 495          {
 496   1          S_CLEAR(cci, struct cci_status);
 497   1      
 498   1          //ucsi_ppm_connector_change_detect();
 499   1      
 500   1          if (result == UCSI_COMMAND_SUCC)
 501   1              //Currently, we do not support Vendor Defined Error Code
 502   1              cci->DataLength = 0x10;
 503   1          else
 504   1              cci->ErrorIndicator = 1;
 505   1      
 506   1          cci->CommandCompletedIndicator = 1;
 507   1      }
 508          
 509          /*
 510           * @desc   : GET_CABLE_PROPERTY ACK setting
 511           * @param  :
 512           *           cci -> cci status structure
 513           *           result -> ACK success or fail
 514           * @return : void
 515           */
 516          #if UCSI_CABLE_SUPPORT
 517          static void get_cable_property_ack()
 518          {
 519   1          S_CLEAR(cci, struct cci_status);
 520   1      
 521   1          ucsi_ppm_connector_change_detect();
 522   1      
 523   1          if (result == UCSI_COMMAND_SUCC)
 524   1              //Currently, we do not support Vendor Defined Error Code
 525   1              cci->DataLength = 0x05;
 526   1          else
 527   1              cci->ErrorIndicator = 1;
 528   1      
 529   1          cci->CommandCompletedIndicator = 1;
 530   1      }
 531          #endif
 532          
 533          /*
 534           * @desc   : GET_PDOS ACK setting
 535           * @param  :
 536           *           cci -> cci status structure
 537           *           result -> ACK success or fail
 538           *           DataLength -> message actually used byte
 539           * @return : void
 540           */
 541          #if UCSI_PDOS_SUPPORT
 542          static void get_pdos_ack()
 543          {
 544   1          S_CLEAR(cci, struct cci_status);
 545   1      
 546   1          //ucsi_ppm_connector_change_detect();
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 10  

 547   1      
 548   1          if (result == UCSI_COMMAND_SUCC) {
 549   2              cci->DataLength = DataLength;
 550   2          } else {
 551   2              cci->ErrorIndicator = 1;
 552   2          }
 553   1      
 554   1          cci->CommandCompletedIndicator = 1;
 555   1      }
 556          #endif
 557          
 558          /*
 559           * @desc   : SET_NEW_CAM ACK setting
 560           * @param  :
 561           *           cci -> cci status structure
 562           *           result -> ACK success or fail
 563           * @return : void
 564           */
 565          #if UCSI_ALT_OR_SUPPORT
 566          static void set_new_cam_ack()
 567          {
 568   1          S_CLEAR(cci, struct cci_status);
 569   1      
 570   1          ucsi_ppm_connector_change_detect();
 571   1      
 572   1          if (result == UCSI_COMMAND_SUCC) {
 573   2              cci->DataLength = 0;
 574   2          } else {
 575   2              cci->ErrorIndicator = 1;
 576   2          }
 577   1      
 578   1          cci->CommandCompletedIndicator = 1;
 579   1      }
 580          #endif
 581          
 582          /*
 583           * @desc   : GET_CURRENT_CAM ACK setting
 584           * @param  :
 585           *           cci -> cci status structure
 586           *           result -> ACK success or fail
 587           * @return : void
 588           */
 589          #if UCSI_ALT_SUPPORT
 590          static void get_current_cam_ack()
 591          {
 592   1          S_CLEAR(cci, struct cci_status);
 593   1      
 594   1          ucsi_ppm_connector_change_detect();
 595   1      
 596   1          if (result == UCSI_COMMAND_SUCC) {
 597   2              cci->DataLength = 1;
 598   2          } else {
 599   2              cci->ErrorIndicator = 1;
 600   2          }
 601   1      
 602   1          cci->CommandCompletedIndicator = 1;
 603   1      }
 604          #endif
 605          
 606          /*
 607           * @desc   : GET_CAM_SUPPORT ACK setting
 608           * @param  :
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 11  

 609           *           cci -> cci status structure
 610           *           result -> ACK success or fail
 611           *           DataLength -> message actually used byte
 612           * @return : void
 613           */
 614          #if UCSI_ALT_SUPPORT
 615          static void get_cam_supported_ack()
 616          {
 617   1          S_CLEAR(cci, struct cci_status);
 618   1      
 619   1          ucsi_ppm_connector_change_detect();
 620   1      
 621   1          if (result == UCSI_COMMAND_SUCC) {
 622   2              cci->DataLength = DataLength;
 623   2          } else {
 624   2              cci->ErrorIndicator = 1;
 625   2          }
 626   1      
 627   1          cci->CommandCompletedIndicator = 1;
 628   1      }
 629          #endif
 630          
 631          /*
 632           * @desc   : GET_ALT_MODES ACK setting
 633           * @param  :
 634           *           cci -> cci status structure
 635           *           result -> ACK success or fail
 636           *           DataLength -> message actually used byte
 637           * @return : void
 638           */
 639          #if UCSI_ALT_SUPPORT
 640          static void get_alt_modes_ack()
 641          {
 642   1          S_CLEAR(cci, struct cci_status);
 643   1      
 644   1          ucsi_ppm_connector_change_detect();
 645   1      
 646   1          if (result == UCSI_COMMAND_SUCC) {
 647   2              cci->DataLength = DataLength;
 648   2          } else {
 649   2              cci->ErrorIndicator = 1;
 650   2          }
 651   1      
 652   1          cci->CommandCompletedIndicator = 1;
 653   1      }
 654          #endif
 655          
 656          //-----------------------------------------------------------
 657          
 658          /*
 659           * @desc   : store error info in error status structure -> esd
 660           * @param  :
 661           *           cci -> cci status structure
 662           *           errno -> error number
 663           * @return : void
 664           */
 665          static void set_error_data()
 666          {
 667   1      
 668   1          S_CLEAR(&esd, struct error_status_data);
 669   1          esd.ErrorInformation = ucsi_errno;
 670   1          
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 12  

 671   1          error_ack();
 672   1      }
 673          
 674          /*
 675           * @desc   : process unrecognized command
 676           * @param  :
 677           *           cci -> cci status structure
 678           * @return : UCSI_COMMAND_SUCC
 679           */
 680          static u8 unsupport_command_process()
 681          {
 682   1          ucsi_errno = ERR_UNRECOGNIZED;
 683   1          set_error_data();
 684   1          cci->NotSupportedIndicator = 1;
 685   1          cci->CommandCompletedIndicator = 1;
 686   1      
 687   1          //Here we abused to use SUCCESS as return value
 688   1          return UCSI_COMMAND_SUCC;
 689   1      }
 690          
 691          #if 0
              /*
               * @desc   : checking the connector whether exist in PPM
               * @param  :
               *           cci -> cci status structure
               *           connectorId -> OPM passed
               * @return :
               *           UCSI_COMMAND_SUCC : success
               *           UCSI_COMMAND_FAIL : fail
               */
              static u8 check_connector_exist(struct cci_status *cci, u8 connectorId)
              {
                  u8 ret = UCSI_COMMAND_SUCC;
              
              #ifdef UCSI_SUPPORT_MORE_CONNECTOR
                  //Add more connector checking code here.
                  return ret;
              #else
                  if (connectorId != 1) {
                      ucsi_errno = ERR_NON_EXIST;
                      //set_error_data(cci, ERR_NON_EXIST);
                      ret = UCSI_COMMAND_FAIL;
                  }
              
                  return ret;
              #endif
              }
              #endif
 719          
 720          /*
 721           * @desc   : OPM get alt modes from PPM
 722           * @param  :
 723           *           msg -> shared message buffer between PPM and BIOS
 724           * @return :
 725           *           UCSI_COMMAND_SUCC : success
 726           *           UCSI_COMMAND_FAIL : fail
 727           */
 728          #if UCSI_ALT_SUPPORT
 729          static u8 ppm_get_alt_modes()
 730          {
 731   1          //u8 DataLength;
 732   1          //u8 i;
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 13  

 733   1          //u8 Offset, Altnum;
 734   1      
 735   1          if (gam->ConnectorNumber > PD_MAX_INSTANCE) {
 736   2              ucsi_errno = ERR_NON_EXIST;
 737   2              set_error_data();
 738   2              return UCSI_COMMAND_FAIL;
 739   2          }
 740   1      
 741   1          port_index = gam->ConnectorNumber - 1;
 742   1      
 743   1          //Offset = gam->AlternateModeOffset;
 744   1          //Altnum = gam->NumofAlternateMode;
 745   1          
 746   1          //if (gam->Recipient != R_CONNECTOR)
 747   1          //    DETECT_POWER_ON(port_index);
 748   1          if (gam->AlternateModeOffset > pup.alt_mode_support_num) {
 749   2              //ucsi_errno = ERR_INVALID;
 750   2              //set_error_data();
 751   2              DataLength = 0;
 752   2              goto out;;
 753   2          }
 754   1      
 755   1          if (gam->NumofAlternateMode > (pup.alt_mode_support_num - gam->AlternateModeOffset))
 756   1              gam->NumofAlternateMode = (pup.alt_mode_support_num - gam->AlternateModeOffset);
 757   1      
 758   1          /* Currently, we only support connector and SOP as recipient */
 759   1          switch (gam->Recipient) {
 760   2          case R_CONNECTOR:
 761   2              for (i = 0; i< gam->NumofAlternateMode; i++) {
 762   3                  amd[i] = pup.alt_mode[gam->AlternateModeOffset +i];
 763   3                  #ifdef EC_ANX_BIG_ENDIAN
 764   3                  SWAP_WORD(&amd[i].SVID0);
 765   3                  SWAP_DWORD(&amd[i].MID0);
 766   3                  SWAP_WORD(&amd[i].SVID1);
 767   3                  SWAP_DWORD(&amd[i].MID1);
 768   3                  #endif
 769   3              }
 770   2              DataLength = 6;
 771   2              break;
 772   2          case R_SOP1:
 773   2              DataLength = 0;
 774   2              switch (context[port_index].peer_svid_length) {
 775   3              case 4:
 776   3                  pup.alt_mode_support_bitmap = 1;
 777   3                  if (context[port_index].pd_capability & PD_HAS_SVID_MID) {
 778   4                      amd[0].SVID0 = context[port_index].ac[0].svid;
 779   4                      amd[0].MID0 = context[port_index].ac[0].mid;
 780   4                      #ifdef EC_ANX_BIG_ENDIAN
 781   4                      SWAP_WORD(&amd[0].SVID0);
 782   4                      //SWAP_DWORD(&amd[0].MID0);
 783   4                      #endif
 784   4                  } else {
 785   4                      amd[0].SVID0 = (context[port_index].peer_svid[3] << 8) | context[port_index].peer_svid[2];
 786   4                      amd[0].MID0 = 0x405;
 787   4                      #ifdef EC_ANX_BIG_ENDIAN
 788   4                      SWAP_WORD(&amd[0].SVID0);
 789   4                      SWAP_DWORD(&amd[0].MID0);
 790   4                      #endif
 791   4                  }
 792   3                  DataLength = 6;
 793   3                  break;
 794   3              case 8:
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 14  

 795   3                  pup.alt_mode_support_bitmap = 1;
 796   3                  if (context[port_index].pd_capability & PD_HAS_SVID_MID) {
 797   4                      amd[0].SVID0 = context[port_index].ac[0].svid;
 798   4                      amd[0].MID0 = context[port_index].ac[0].mid;
 799   4                      amd[0].SVID1 = context[port_index].ac[1].svid;
 800   4                      amd[0].MID1 = context[port_index].ac[1].mid;
 801   4                      #ifdef EC_ANX_BIG_ENDIAN
 802   4                      SWAP_WORD(&amd[i].SVID0);
 803   4                      //SWAP_DWORD(&amd[i].MID0);
 804   4                      SWAP_WORD(&amd[i].SVID1);
 805   4                      //SWAP_DWORD(&amd[i].MID1);
 806   4                      #endif
 807   4                  } else {
 808   4                      amd[0].SVID0 = (context[port_index].peer_svid[3] << 8) | context[port_index].peer_svid[2];
 809   4                      amd[0].MID0 = 0x405;
 810   4                      amd[0].SVID1 = (context[port_index].peer_svid[1] << 8) | context[port_index].peer_svid[0];
 811   4                      amd[0].MID1 = 0;
 812   4                      #ifdef EC_ANX_BIG_ENDIAN
 813   4                      SWAP_WORD(&amd[i].SVID0);
 814   4                      SWAP_DWORD(&amd[i].MID0);
 815   4                      SWAP_WORD(&amd[i].SVID1);
 816   4                      SWAP_DWORD(&amd[i].MID1);
 817   4                      #endif
 818   4                  }
 819   3                  DataLength = 12;
 820   3                  break;
 821   3              case 0:
 822   3              default:
 823   3                  DataLength = 0;
 824   3                  break;
 825   3              }
 826   2              break;
 827   2          default:
 828   2              for (i = 0; i < gam->NumofAlternateMode; i++) {
 829   3                  S_CLEAR(&amd[i], struct alt_modes_data);
 830   3              }
 831   2              DataLength = 0;
 832   2              break;
 833   2          }
 834   1      
 835   1      out:
 836   1          result = UCSI_COMMAND_SUCC;
 837   1          get_alt_modes_ack();
 838   1      
 839   1          return result;
 840   1      }
 841          #endif
 842          
 843          /*
 844           * @desc   : OPM get cam suported list from PPM
 845           * @param  :
 846           *           msg -> shared message buffer between PPM and BIOS
 847           * @return :
 848           *           UCSI_COMMAND_SUCC : success
 849           *           UCSI_COMMAND_FAIL : fail
 850           */
 851          #if UCSI_ALT_SUPPORT
 852          static u8 ppm_get_cam_supported()
 853          {
 854   1          //u8 DataLength;
 855   1      
 856   1          if (gcs->ConnectorNumber > PD_MAX_INSTANCE) {
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 15  

 857   2              ucsi_errno = ERR_NON_EXIST;
 858   2              set_error_data();
 859   2              return UCSI_COMMAND_FAIL;
 860   2          }
 861   1      
 862   1          if (context[gcs->ConnectorNumber].peer_svid_length == 0) {
 863   2              DataLength = 0;
 864   2              goto out;
 865   2          }
 866   1      
 867   1          *(char *)&msg->msgi = pup.alt_mode_support_bitmap;
 868   1      
 869   1          if (pup.alt_mode_support_bitmap)
 870   1              DataLength = (pup.alt_mode_support_num % 8) + 1;
 871   1          else
 872   1              DataLength = 0;
 873   1      
 874   1      out:
 875   1          result = UCSI_COMMAND_SUCC;
 876   1          get_cam_supported_ack();
 877   1      
 878   1          return result;
 879   1      }
 880          #endif
 881          
 882          /*
 883           * @desc   : OPM get current cam from PPM
 884           * @param  :
 885           *           msg -> shared message buffer between PPM and BIOS
 886           * @return :
 887           *           UCSI_COMMAND_SUCC : success
 888           *           UCSI_COMMAND_FAIL : fail
 889           */
 890          #if UCSI_ALT_SUPPORT
 891          static u8 ppm_get_current_cam()
 892          {
 893   1          if (gcc->ConnectorNumber > PD_MAX_INSTANCE) {
 894   2              ucsi_errno = ERR_NON_EXIST;
 895   2              set_error_data();
 896   2              return UCSI_COMMAND_FAIL;
 897   2          }
 898   1      
 899   1          if (context[gcc->ConnectorNumber].peer_svid_length == 0) {
 900   2              *(char *)&msg->msgi = 0;
 901   2              goto out;
 902   2          }
 903   1      
 904   1          *(char *)&msg->msgi = 1;
 905   1      out:
 906   1          result = UCSI_COMMAND_SUCC;
 907   1          get_current_cam_ack();
 908   1      
 909   1          return result;
 910   1      }
 911          #endif
 912          
 913          /*
 914           * @desc   : OPM set new cam for PPM
 915           * @param  :
 916           *           msg -> shared message buffer between PPM and BIOS
 917           * @return :
 918           *           UCSI_COMMAND_SUCC : success
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 16  

 919           *           UCSI_COMMAND_FAIL : fail
 920           */
 921          #if UCSI_ALT_OR_SUPPORT
 922          static u8 ppm_set_new_cam()
 923          {
 924   1          if (snc->ConnectorNumber > PD_MAX_INSTANCE) {
 925   2              ucsi_errno = ERR_NON_EXIST;
 926   2              set_error_data();
 927   2              return UCSI_COMMAND_FAIL;
 928   2          }
 929   1      
 930   1          if (context[gcc->ConnectorNumber].peer_svid_length == 0) {
 931   2              //*(char *)&msg->msgi = 0;
 932   2              goto out;
 933   2          }
 934   1      
 935   1          if (snc->EnterOrExit == 1) {
 936   2              dp_alt_enter_mode();
 937   2          } else {
 938   2              dp_alt_exit_mode();
 939   2          }
 940   1      
 941   1          //ucsi_errno = ERR_CMD_UNSUCCESS;
 942   1      out:
 943   1          result = UCSI_COMMAND_SUCC;
 944   1          set_new_cam_ack();
 945   1      
 946   1          return result;
 947   1      }
 948          #endif
 949          
 950          /*
 951           * @desc   : OPM get pdos from PPM
 952           * @param  :
 953           *           msg -> shared message buffer between PPM and BIOS
 954           * @return :
 955           *           UCSI_COMMAND_SUCC : success
 956           *           UCSI_COMMAND_FAIL : fail
 957           */
 958          #if UCSI_PDOS_SUPPORT
 959          static u8 ppm_get_pdos()
 960          {
 961   1          //u8 DataLength;
 962   1          //u8 pdo_index;
 963   1      
 964   1          if (gp->ConnectorNumber > PD_MAX_INSTANCE) {
 965   2              ucsi_errno = ERR_NON_EXIST;
 966   2              set_error_data();
 967   2              return UCSI_COMMAND_FAIL;
 968   2          }
 969   1      
 970   1          result = UCSI_COMMAND_FAIL;
 971   1          port_index = gp->ConnectorNumber - 1;
 972   1          //DETECT_POWER_ON(port_index);
 973   1      
 974   1      #ifdef ANXDEBUG
                  ucsi_debug("Get %s : %s PDOOffset (%.bx), numOfPDO(%.bx), partner_pdo_length is %.bx\n",
                      (gp->PartnerPDO == 0)?"connector":"partner", (gp->SourceOrSinkPDOs)?"source":"sink",
                      gp->PDOOffset, gp->NumberOfPDOs,
                      context[port_index].partner_pdo_length);
              #endif
 980   1          if (gp->PartnerPDO == 0) {
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 17  

 981   2              if (gp->SourceOrSinkPDOs == 1) {
 982   3                  switch (gp->SourceCapabilities) {
 983   4                  case SCTCURRENT_SUPPORTED_SOURCE_CAPABILITIES:
 984   4                  case SCTMAXIMUM_SUPPORTED_SOURCE_CAPABILITIES:
 985   4                  case SCTADVERTISED_CAPABILITIES:
 986   4                      if (gp->PDOOffset <= 1) {
 987   5                          memcpy(&pd->PDO[0], &context[port_index].pd_src_pdo[0], 4);
 988   5                          DataLength = 4;
 989   5                      } else {
 990   5                          pd->PDO[0] = 0;
 991   5                          pd->PDO[1] = 0;
 992   5                          pd->PDO[2] = 0;
 993   5                          pd->PDO[3] = 0;
 994   5                          DataLength = 0;
 995   5                      }
 996   4                      break;
 997   4                  default:
 998   4                      ucsi_errno = ERR_INVALID;
 999   4                      set_error_data();
1000   4                      break;
1001   4                  }
1002   3              } else {
1003   3                  if (gp->PDOOffset <= 1) {
1004   4                      memcpy(&pd->PDO[0], &context[port_id].pd_snk_pdo, 4);
1005   4                      //#ifdef EC_ANX_BIG_ENDIAN
1006   4                      //SWAP_DWORD(&pd->PDO[pdo_index]);
1007   4                      //#endif
1008   4                      DataLength = 4;
1009   4                  } else {
1010   4                      pd->PDO[0] = 0;
1011   4                      pd->PDO[1] = 0;
1012   4                      pd->PDO[2] = 0;
1013   4                      pd->PDO[3] = 0;
1014   4                      DataLength = 0;
1015   4                  }
1016   3              }
1017   2          } else {
1018   2              if (gp->PDOOffset * 4 < context[port_index].partner_pdo_length) {
1019   3                  
1020   3                  //memcpy((void *)&pd->PDO, &context[port_index].partner_pdo[4 * gp->PDOOffset],
1021   3                  //    min((gp->NumberOfPDOs + 1)*4,(context[port_index].partner_pdo_length - (gp->PDOOffset * 
             -4))));
1022   3                  //DataLength = min((gp->NumberOfPDOs + 1)*4,(context[port_index].partner_pdo_length - (gp->PDO
             -Offset * 4)));
1023   3                  memcpy((void *)&pd->PDO, &context[port_index].partner_pdo[0],
1024   3                      min((gp->NumberOfPDOs+1)*4,context[port_index].partner_pdo_length));
1025   3                  DataLength = min((gp->NumberOfPDOs+1)*4,context[port_index].partner_pdo_length);
1026   3                  
1027   3                  #ifdef ANXDEBUG
                          ucsi_debug("+++++++++++++++  executed to here, DataLength(%.bx).\n", DataLength);
                          #endif
1030   3              } else {
1031   3                  pd->PDO[0] = 0;
1032   3                  pd->PDO[1] = 0;
1033   3                  pd->PDO[2] = 0;
1034   3                  pd->PDO[3] = 0;
1035   3                  DataLength = 0;
1036   3              }
1037   2      
1038   2          }
1039   1      
1040   1          result = UCSI_COMMAND_SUCC;
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 18  

1041   1          #ifdef ANXDEBUG
                  ucsi_debug("***********   get PDO from OS : ");
                  for (i = 0; i < DataLength; i++) {
                      ucsi_debug("%.bx ", ((u8 *)&pd->PDO[0])[i]);
                  }
                  ucsi_debug("\n");
                  #endif
1048   1      out:
1049   1          get_pdos_ack();
1050   1      
1051   1          return result;
1052   1      }
1053          #endif
1054          
1055          /*
1056           * @desc   : OPM get cable property from PPM
1057           * @param  :
1058           *           msg -> shared message buffer between PPM and BIOS
1059           * @return :
1060           *           UCSI_COMMAND_SUCC : success
1061           *           UCSI_COMMAND_FAIL : fail
1062           */
1063          #if UCSI_CABLE_SUPPORT
1064          static u8 ppm_get_cable_property()
1065          {
1066   1          if (gcp->ConnectorNumber > PD_MAX_INSTANCE) {
1067   2              ucsi_errno = ERR_NON_EXIST;
1068   2              set_error_data();
1069   2              return UCSI_COMMAND_FAIL;
1070   2          }
1071   1      
1072   1          port_index = gcp->ConnectorNumber - 1;
1073   1          //ret = pop->ppm_cable_property(&pop->param, gcp->ConnectorNumber, (void *)&msg->msgi);
1074   1          S_CLEAR(cpd, struct cable_property_data);
1075   1      
1076   1          DETECT_POWER_ON(port_index);
1077   1          
1078   1          if ((context[port_index].pd_capability & PD_HAS_CABLE_VDO) &&
1079   1              (*(u32 *)&context[port_index].cv != 0)) {
1080   2              cpd->VBUSInCable = context[port_index].cv.vbus_thru_cable;
1081   2                  switch (context[port_index].cv.vbus_current) {
1082   3                  case VBUS_3A:
1083   3                      cpd->bCurrentCapability = 60;
1084   3                      break;
1085   3                  case VBUS_5A:
1086   3                      cpd->bCurrentCapability = 100;
1087   3                      break;
1088   3                  default:
1089   3                      cpd->bCurrentCapability = 0;
1090   3                      break;
1091   3                  }
1092   2          
1093   2                  cpd->CableType = 0; //Passive cable
1094   2                  cpd->ModeSupport = 0;
1095   2                  cpd->PlugEndType = context[port_index].cv.cable_type;
1096   2                  if (context[port_index].cv.SSTX1_sup || context[port_index].cv.SSTX2_sup ||
1097   2                      context[port_index].cv.SSRX1_sup || context[port_index].cv.SSRX2_sup)
1098   2                      cpd->Directionality = 1;
1099   2                  else
1100   2                      cpd->Directionality = 0;
1101   2          
1102   2                  //need more investigation
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 19  

1103   2                  cpd->bmSpeedSupported = 0;
1104   2                  switch (context[port_index].cv.supper_speed_signal) {
1105   3                  case SUPPER_SPEED_USB_2_0:
1106   3                      cpd->bmSpeedSupported = (480 << 2) | 2; //480Mbps
1107   3                      break;
1108   3                  case SUPPER_SPEED_USB_3_1:
1109   3                      cpd->bmSpeedSupported = (5 << 2) | 3; //5Gbps
1110   3                      break;
1111   3                  case SUPPER_SPEED_USB_3_1_2:
1112   3                      cpd->bmSpeedSupported = (10 << 2) | 3; //10Gbps
1113   3                      break;
1114   3                  default:
1115   3                      cpd->bmSpeedSupported = (12 << 2) | 2; //480Mbps
1116   3                      break;
1117   3                  }
1118   2                  cpd->Latency = context[port_index].cv.latency;
1119   2          
1120   2                  result = UCSI_COMMAND_SUCC;
1121   2                  goto out;
1122   2              }
1123   1          
1124   1              //Need firmware support
1125   1              switch (context[port_index].ct) {
1126   2              case CABLE_TYPE_A:
1127   2                  cpd->PlugEndType = PLUG_TYPEA;
1128   2                  break;
1129   2              case CABLE_TYPE_B:
1130   2                  cpd->PlugEndType = PLUG_TYPEB;
1131   2                  break;
1132   2              case CABLE_TYPE_C:
1133   2                  cpd->PlugEndType = PLUG_TYPEC;
1134   2                  break;
1135   2              default:
1136   2                  cpd->PlugEndType = PLUG_OTHER;
1137   2              }
1138   1          
1139   1              //Set default cable property
1140   1              cpd->bmSpeedSupported = (480 << 2) | 2;
1141   1              cpd->bCurrentCapability = 60; //3A
1142   1              cpd->VBUSInCable = 1;
1143   1              cpd->CableType = 0; //Passive cable
1144   1              cpd->Directionality = 0;
1145   1              cpd->ModeSupport = 0;
1146   1              cpd->Latency = 0x5; //40ns to 50ns ~5m
1147   1          
1148   1              result = UCSI_COMMAND_SUCC;
1149   1      out:
1150   1          #ifdef EC_ANX_BIG_ENDIAN
1151   1          SWAP_WORD(&cpd->bmSpeedSupported);
1152   1          #endif
1153   1      
1154   1          get_cable_property_ack();
1155   1      
1156   1          return result;
1157   1      }
1158          #endif
1159          
1160          /*
1161           * @desc   : OPM get specific error code from PPM
1162           * @param  :
1163           *           msg -> shared message buffer between PPM and BIOS
1164           * @return :
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 20  

1165           *           UCSI_COMMAND_SUCC : success
1166           *           UCSI_COMMAND_FAIL : fail
1167           */
1168          static u8 ppm_get_error_status()
1169          {
1170   1          if (*(u16 *)&(esd.ErrorInformation) != 0) {
1171   2              result = UCSI_COMMAND_SUCC;
1172   2              get_error_status_ack();
1173   2              *(struct error_status_data *)&msg->msgi = esd;
1174   2              #ifdef EC_ANX_BIG_ENDIAN
1175   2              SWAP_WORD(&msg->msgi);
1176   2              #endif
1177   2          } else {
1178   2              ucsi_errno = ERR_INVALID;
1179   2              result = UCSI_COMMAND_FAIL;
1180   2              get_error_status_ack();
1181   2          }
1182   1      
1183   1          return result;
1184   1      
1185   1      }
1186          
1187          /*
1188           * @desc   : OPM get get connector status from PPM
1189           * @param  :
1190           *           msg -> shared message buffer between PPM and BIOS
1191           * @return :
1192           *           UCSI_COMMAND_SUCC : success
1193           *           UCSI_COMMAND_FAIL : fail
1194           */
1195          static u8 ppm_get_connector_status()
1196          {
1197   1          #ifdef ANXDEBUG
                  ucsi_debug("********   connector number is %.bx **** \n", gcs->ConnectorNumber);
                  #endif
1200   1          if (gcs->ConnectorNumber > PD_MAX_INSTANCE) {
1201   2              //printf("didn't find connector .\n");
1202   2              #ifdef HLK_RS2
                      ucsi_errno = ERR_NON_EXIST;
                      set_error_data();
                      result = UCSI_COMMAND_SUCC;
                      get_connector_status_ack();
                      context[0].csc.csc.Error = 1;
                      ucsi_async_checking_timer = 250;
                      return result;
                      #else
1211   2              ucsi_errno = ERR_NON_EXIST;
1212   2              set_error_data();
1213   2              result = UCSI_COMMAND_FAIL;
1214   2              get_connector_status_ack();
1215   2              return result;
1216   2              #endif
1217   2          }
1218   1      
1219   1          port_index = gcs->ConnectorNumber - 1;
1220   1      
1221   1          csd->ConnectStatus = context[port_index].anx_power_status & context[port_index].enable_report_power_on
             -;
1222   1          if (csd->ConnectStatus) {
1223   2              csd->RequestDataObject = context[port_index].ucsi_partner_rdo;
1224   2              #ifdef EC_ANX_BIG_ENDIAN
1225   2              SWAP_DWORD(&csd->RequestDataObject);
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 21  

1226   2              #endif
1227   2      
1228   2              if (ne.ConnectorPartnerChange) {
1229   3                  if (context[port_index].ConnectorPartner)
1230   3                      csd->ConnectorPartner = context[port_index].ConnectorPartner;
1231   3                  else
1232   3                      csd->ConnectorPartner = 1;
1233   3      
1234   3                  switch (context[port_index].ucsi_connector_partner_type) {
1235   4                  case CPT_AUDIO_ACC:
1236   4                  case CPT_CAB_DEBUG_ACC:
1237   4                      break;
1238   4                  default:
1239   4                      role = get_data_role();
1240   4                      if (role == 0) {//UFP(DFP Attached)
1241   5                          context[port_id].ucsi_connector_partner_type = CPT_DFP_ATTACHED;
1242   5                      } else {//DFP(UFP Attached)
1243   5                          if (context[port_id].ucsi_connector_partner_type == CPT_DFP_ATTACHED)
1244   5                              context[port_id].ucsi_connector_partner_type = CPT_UFP_ATTACHED;
1245   5                      }
1246   4                      break;
1247   4                  }
1248   3                  csd->ConnectorPartnerType = context[port_index].ucsi_connector_partner_type;
1249   3                  #ifdef ANXDEBUG
                          ucsi_debug("-------  connectorPartner flag %.bx, type %.bx, drole %.bx.\n",
                              csd->ConnectorPartner, csd->ConnectorPartnerType, role);
                          #endif
1253   3              }
1254   2      
1255   2              if (ne.PowerDirectionChange) {
1256   3              #ifdef ANXDEBUG
                      ucsi_debug("======   port index(%.bx), anx_vbus_status is %.bx.\n",
                          port_index, context[port_index].anx_vbus_status);
                      #endif
1260   3              if (context[port_index].anx_power_role == 1)
1261   3                  csd->PowerDirection = PD_PROVIDER;
1262   3              else
1263   3                  csd->PowerDirection = PD_CONSUMER;
1264   3              }
1265   2              if (ne.BatteryChargingStatusChange) {
1266   3                  csd->BatteryChargingStatus = context[port_index].BatteryCharging;
1267   3              }
1268   2      
1269   2              if (context[port_index].ucsi_partner_rdo != 0)
1270   2                  csd->PowerOperationMode = PO_PD;
1271   2              else
1272   2                  csd->PowerOperationMode = context[port_id].power_op_mode;
1273   2          }
1274   1      
1275   1          if (ne.ConnectChange && context[port_index].csc.csc.Connect) {
1276   2              csd->csc.Connect = 1;
1277   2              context[port_index].csc.csc.Connect = 0;
1278   2              //csd->ConnectStatus = context[port_index].anx_power_status;
1279   2              goto out;
1280   2          }
1281   1      
1282   1          if (csd->ConnectStatus == 0)
1283   1              goto out;
1284   1      
1285   1          if (ne.SupportedProviderCapabilitiesChange && context[port_index].csc.csc.SupportedProviderCap) {
1286   2              context[port_index].csc.csc.SupportedProviderCap = 0;
1287   2              csd->csc.SupportedProviderCap = 1;
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 22  

1288   2              goto out;
1289   2          }
1290   1      
1291   1          if (ne.ExternalSupplyChange && context[port_index].csc.csc.ExternalSupply) {
1292   2                  context[port_index].csc.csc.ExternalSupply = 0;
1293   2                  csd->csc.ExternalSupply = 1;
1294   2              goto out;
1295   2          }
1296   1      
1297   1          if (ne.PowerDirectionChange && context[port_index].csc.csc.PowerDirection) {
1298   2              context[port_index].csc.csc.PowerDirection = 0;
1299   2              csd->csc.PowerDirection = 1;
1300   2              goto out;
1301   2          }
1302   1      
1303   1          if (ne.ConnectorPartnerChange && context[port_index].csc.csc.ConnectorPartner) {
1304   2              context[port_index].csc.csc.ConnectorPartner = 0;
1305   2              csd->csc.ConnectorPartner = 1;
1306   2              goto out;
1307   2          }
1308   1      
1309   1              if (ne.PowerOperationModeChange && context[port_index].csc.csc.PowerOperationMode) {
1310   2              context[port_index].csc.csc.PowerOperationMode = 0;
1311   2              csd->csc.PowerOperationMode = 1;
1312   2              goto out;
1313   2              }
1314   1      
1315   1          if (ne.PDResetComplete && context[port_index].csc.csc.PDResetComplete) {
1316   2              context[port_index].csc.csc.PDResetComplete = 0;
1317   2              csd->csc.PDResetComplete = 1;
1318   2              goto out;
1319   2          }
1320   1      
1321   1          if (ne.SupportedProviderCapabilitiesChange && context[port_index].csc.csc.SupportedProviderCap) {
1322   2              context[port_index].csc.csc.SupportedProviderCap = 0;
1323   2              csd->csc.SupportedProviderCap = 1;
1324   2              goto out;
1325   2          }
1326   1      
1327   1          if (ne.Error && context[port_index].csc.csc.Error) {
1328   2              context[port_index].csc.csc.Error = 0;
1329   2              csd->csc.Error = 1;
1330   2              goto out;
1331   2          }
1332   1      
1333   1          //Fix JIRA LBT-429
1334   1          if (ne.SupportedCAMChange && context[port_index].csc.csc.SupportedCAM) {
1335   2              context[port_index].csc.csc.SupportedCAM = 0;
1336   2              csd->csc.SupportedCAM = 1;
1337   2              goto out;
1338   2          }
1339   1      
1340   1          if (ne.BatteryChargingStatusChange && context[port_index].csc.csc.BatteryChargingStatus) {
1341   2              context[port_index].csc.csc.BatteryChargingStatus = 0;
1342   2              csd->csc.BatteryChargingStatus = 1;
1343   2              goto out;
1344   2          }
1345   1      
1346   1          if (ne.NegotiatedPowerLevelChange && context[port_index].csc.csc.NegotiatedPowerLevel) {
1347   2              context[port_index].csc.csc.NegotiatedPowerLevel = 0;
1348   2              csd->csc.NegotiatedPowerLevel = 1;
1349   2          }
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 23  

1350   1      
1351   1          if (context[port_index].csc.connector_change_indicator) {
1352   2              #ifdef ANXDEBUG
                      ucsi_debug("????   port index(%.bx), still have unsupported event pending %x, just ignore.\n",
                          port_index, context[port_index].csc.connector_change_indicator);
                      #endif
1356   2              context[port_index].csc.connector_change_indicator = 0;
1357   2          }
1358   1      
1359   1      out:
1360   1          result = UCSI_COMMAND_SUCC;
1361   1          get_connector_status_ack();
1362   1              if (context[port_index].csc.connector_change_indicator)
1363   1              //Fix JIRA LBT-429
1364   1                      ucsi_async_checking_timer = UCSI_CONNECTOR_REPORT_TIME;
1365   1      
1366   1          /* Fix JIRA LBT-429, waiting for system send GET_PDO command */
1367   1          if (csd->csc.Connect == 1)
1368   1              ucsi_async_checking_timer = 1000;
1369   1      
1370   1          return result;
1371   1      }
1372          
1373          #if UCSI_SET_PDM_SUPPORT
1374          /*
1375           * @desc   : OPM set power direction mode for PPM
1376           * @param  :
1377           *           msg -> shared message buffer between PPM and BIOS
1378           * @return :
1379           *           UCSI_COMMAND_SUCC : success
1380           *           UCSI_COMMAND_FAIL : fail
1381           */
1382          static u8 ppm_set_pdm()
1383          {
1384   1          #ifdef EC_ANX_BIG_ENDIAN
1385   1          SWAP_WORD((XBYTE *)spdm + 2);
1386   1          #endif
1387   1          if (spdm->ConnectorNumber > PD_MAX_INSTANCE) {
1388   2              ucsi_errno = ERR_NON_EXIST;
1389   2              set_error_data();
1390   2              return UCSI_COMMAND_FAIL;
1391   2          }
1392   1      
1393   1          port_index = spdm->ConnectorNumber - 1;
1394   1          if (context[port_index].dfp_only && spdm->PowerDirectionMode != PW_PROVIDER) {
1395   2              ucsi_errno = ERR_INVALID;
1396   2              set_error_data();
1397   2              return UCSI_COMMAND_FAIL;
1398   2          }
1399   1          context[port_index].power_operation_mode_pdm = 0;
1400   1      
1401   1          result = UCSI_COMMAND_SUCC;
1402   1          //context[port_index].power_operation_mode_pdm = (((((XBYTE *)spdm)[3])&0x80) >> 6) | (((((XBYTE *)spd
             -m)[2])&0x3) << 1);;
1403   1          if ((((XBYTE *)spdm)[3])&0x80)
1404   1              context[port_index].power_operation_mode_pdm |= PW_PROVIDER;
1405   1          if ((((XBYTE *)spdm)[2])&0x1)
1406   1              context[port_index].power_operation_mode_pdm |= PW_CONSUMER;
1407   1          if ((((XBYTE *)spdm)[2])&0x2)
1408   1              context[port_index].power_operation_mode_pdm |= PW_DRP;
1409   1      
1410   1          switch (context[port_index].power_operation_mode_pdm) {
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 24  

1411   2          case 1: //Provider
1412   2              context[port_index].trysrc_enable = 1;
1413   2              break;
1414   2          case 2: //Consumer
1415   2              context[port_index].trysnk_enable = 1;
1416   2              break;
1417   2          case 4: //Provider/Consumer
1418   2              context[port_index].trysrc_enable = 0;
1419   2              context[port_index].trysnk_enable = 0;
1420   2              break;
1421   2          case 5: //DUAL + Provider
1422   2              context[port_index].trysrc_enable = 1;
1423   2              break;
1424   2          case 6: //DUAL + Consumer
1425   2              context[port_index].trysnk_enable = 1;
1426   2              break;
1427   2          default:
1428   2              ucsi_errno = ERR_INVALID;
1429   2              set_error_data();
1430   2              result = UCSI_COMMAND_FAIL;
1431   2              break;
1432   2          }
1433   1      
1434   1          set_pdr_ack();
1435   1      
1436   1          return result;
1437   1      }
1438          #endif
1439          
1440          static u8 ppm_set_pdr_process()
1441          {
1442   1          u8 ret = UCSI_COMMAND_FAIL;
1443   1      
1444   1          if (ucsi_command_process_delay == UCSI_PDR_WAITING_TIME)
1445   1              send_pd_msg(TYPE_PSWAP_REQ, 0, 0, SOP_TYPE);
1446   1          if (ucsi_command_process_delay) {
1447   2              if (--ucsi_command_process_delay == 0) {
1448   3                  port_id = port_index;
1449   3                  switch(get_power_role()) {
1450   4                  case 1: //DFP
1451   4                      role = PW_PROVIDER;
1452   4                      break;
1453   4                  case 0: //UFP
1454   4                      role = PW_CONSUMER;
1455   4                      break;
1456   4                  }
1457   3                  if (context[port_index].power_operation_mode_pdr & role) {
1458   4                      set_uor_ack();
1459   4                      cancel_all_timer();
1460   4                      context[port_id].csc.connector_change_indicator = 0;
1461   4                      ret = UCSI_COMMAND_SUCC;
1462   4                  } else {
1463   4                      ucsi_errno = ERR_NEGOTIATION_FAIL;
1464   4                      set_error_data();
1465   4                      ret = UCSI_COMMAND_FAIL;
1466   4                  }
1467   3              } else {
1468   3                  ret = UCSI_COMMAND_CONTINUE;
1469   3              }
1470   2          }
1471   1          return ret;
1472   1      }
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 25  

1473          /*
1474           * @desc   : OPM set power direction role for PPM
1475           * @param  :
1476           *           msg -> shared message buffer between PPM and BIOS
1477           * @return :
1478           *           UCSI_COMMAND_SUCC : success
1479           *           UCSI_COMMAND_FAIL : fail
1480           */
1481          static u8 ppm_set_pdr()
1482          {
1483   1          #ifdef EC_ANX_BIG_ENDIAN
1484   1          SWAP_WORD((XBYTE *)spdr + 2);
1485   1          #endif
1486   1      
1487   1          if (spdr->ConnectorNumber > PD_MAX_INSTANCE) {
1488   2              ucsi_errno = ERR_NON_EXIST;
1489   2              set_error_data();
1490   2              return UCSI_COMMAND_FAIL;
1491   2          }
1492   1      
1493   1          port_index = spdr->ConnectorNumber - 1;
1494   1          DETECT_POWER_ON(port_index);
1495   1          context[port_index].power_operation_mode_pdr = 0;
1496   1              //context[port_index].power_operation_mode_pdr = (((((XBYTE *)spdr)[3])&0x80) >> 6) | (((((XBYTE *)spdr)[
             -2])&0x3) << 1);;
1497   1          if ((((XBYTE *)spdr)[3])&0x80)
1498   1              context[port_index].power_operation_mode_pdr |= PW_PROVIDER;
1499   1          if ((((XBYTE *)spdr)[2])&0x1)
1500   1              context[port_index].power_operation_mode_pdr |= PW_CONSUMER;
1501   1          if ((((XBYTE *)spdr)[2])&0x2)
1502   1              context[port_index].power_operation_mode_pdr |= PW_DRP;
1503   1      
1504   1          if (context[port_index].dfp_only && context[port_index].power_operation_mode_pdr != PW_PROVIDER) {
1505   2              ucsi_errno = ERR_INVALID;
1506   2              set_error_data();
1507   2              result = UCSI_COMMAND_FAIL;
1508   2              goto out;
1509   2          }
1510   1      
1511   1          port_id = port_index;
1512   1      
1513   1          send_source_sink_capability();
1514   1      
1515   1          switch(get_power_role()) {
1516   2          case 1: //DFP
1517   2              role = PW_PROVIDER;
1518   2              break;
1519   2          case 0: //UFP
1520   2              role = PW_CONSUMER;
1521   2              break;
1522   2          }
1523   1      
1524   1          #ifdef ANXDEBUG
                  ucsi_debug("___________ pdr  %.bx, %.bx, %.bx, role %.bx.\n", ((XBYTE *)spdr)[2], ((XBYTE *)spdr)[3],
                      context[port_index].power_operation_mode_pdr, role);
                  #endif
1528   1      
1529   1          result = UCSI_COMMAND_SUCC;
1530   1          switch (context[port_index].power_operation_mode_pdr) {
1531   2          case PW_PROVIDER:
1532   2              if (role == PW_CONSUMER) {
1533   3                  //send_pd_msg(TYPE_PSWAP_REQ, 0, 0, SOP_TYPE);
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 26  

1534   3                  if (!(context[port_index].pd_capability & PD_HAS_RETURN_STATUS)) {
1535   4                      send_pd_msg(TYPE_PSWAP_REQ, 0, 0, SOP_TYPE);
1536   4                      DelayXms(POWER_ROLE_SWAP_DELAY_MS);
1537   4                      port_id = port_index;
1538   4                      if (get_power_role() != 1) {
1539   5                          ucsi_errno = ERR_NEGOTIATION_FAIL;
1540   5                          set_error_data();
1541   5                          result = UCSI_COMMAND_FAIL;
1542   5                      }
1543   4                  } else {
1544   4                      //Fix JIRA LBT-412
1545   4                      ucsi_command_process_delay = UCSI_PDR_WAITING_TIME;
1546   4                      result = UCSI_COMMAND_CONTINUE;
1547   4                  }
1548   3              }
1549   2              break;
1550   2          case PW_CONSUMER:
1551   2              if (role == PW_PROVIDER) {
1552   3                  //send_pd_msg(TYPE_PSWAP_REQ, 0, 0, SOP_TYPE);
1553   3                  if (!(context[port_index].pd_capability & PD_HAS_RETURN_STATUS)) {
1554   4                      send_pd_msg(TYPE_PSWAP_REQ, 0, 0, SOP_TYPE);
1555   4                      DelayXms(POWER_ROLE_SWAP_DELAY_MS);
1556   4                      if (get_power_role() != 0) {
1557   5                          ucsi_errno = ERR_NEGOTIATION_FAIL;
1558   5                          set_error_data();
1559   5                          result = UCSI_COMMAND_FAIL;
1560   5                      }
1561   4                  } else {
1562   4                      //Fix JIRA LBT-412
1563   4                      ucsi_command_process_delay = UCSI_PDR_WAITING_TIME;
1564   4                      result = UCSI_COMMAND_CONTINUE;
1565   4                  }
1566   3              }
1567   2              break;
1568   2          case PW_DRP:
1569   2              //Do nothing
1570   2              result = UCSI_COMMAND_SUCC;
1571   2              break;
1572   2          case PW_DRP_CONSUMER:
1573   2              if (role == PW_PROVIDER) {
1574   3                  //send_pd_msg(TYPE_PSWAP_REQ, 0, 0, SOP_TYPE);
1575   3                  if (!(context[port_index].pd_capability & PD_HAS_RETURN_STATUS)) {
1576   4                      send_pd_msg(TYPE_PSWAP_REQ, 0, 0, SOP_TYPE);
1577   4                      DelayXms(POWER_ROLE_SWAP_DELAY_MS);
1578   4                      if (get_power_role() != 0) {
1579   5                          ucsi_errno = ERR_NEGOTIATION_FAIL;
1580   5                          set_error_data();
1581   5                          result = UCSI_COMMAND_FAIL;
1582   5                      }
1583   4                  } else {
1584   4                      //Fix JIRA LBT-412
1585   4                      ucsi_command_process_delay = UCSI_PDR_WAITING_TIME;
1586   4                      result = UCSI_COMMAND_CONTINUE;
1587   4                  }
1588   3              }
1589   2              break;
1590   2          case PW_DRP_PROVIDER:
1591   2              if (role == PW_CONSUMER) {
1592   3                  //send_pd_msg(TYPE_PSWAP_REQ, 0, 0, SOP_TYPE);
1593   3                  if (!(context[port_index].pd_capability & PD_HAS_RETURN_STATUS)) {
1594   4                      send_pd_msg(TYPE_PSWAP_REQ, 0, 0, SOP_TYPE);
1595   4                      DelayXms(POWER_ROLE_SWAP_DELAY_MS);
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 27  

1596   4                      port_id = port_index;
1597   4                      if (get_power_role() != 1) {
1598   5                          ucsi_errno = ERR_NEGOTIATION_FAIL;
1599   5                          set_error_data();
1600   5                          result = UCSI_COMMAND_FAIL;
1601   5                      }
1602   4                  } else {
1603   4                      ucsi_command_process_delay = UCSI_PDR_WAITING_TIME;
1604   4                      result = UCSI_COMMAND_CONTINUE;
1605   4                  }
1606   3              }
1607   2              break;
1608   2          default:
1609   2              ucsi_errno = ERR_UNRECOGNIZED;
1610   2                      result = UCSI_COMMAND_FAIL;
1611   2              break;
1612   2          }
1613   1      
1614   1      out:
1615   1          set_pdr_ack();
1616   1      
1617   1          return result;
1618   1      }
1619          
1620          #if UCSI_SET_UOM_SUPPORT
1621          /*
1622           * @desc   : OPM set usb operation mode for PPM
1623           * @param  :
1624           *           msg -> shared message buffer between PPM and BIOS
1625           * @return :
1626           *           UCSI_COMMAND_SUCC : success
1627           *           UCSI_COMMAND_FAIL : fail
1628           */
1629          static u8 ppm_set_uom()
1630          {
1631   1          #ifdef EC_ANX_BIG_ENDIAN
1632   1          SWAP_WORD((XBYTE *)suom + 2);
1633   1          #endif
1634   1      
1635   1          if (suom->ConnectorNumber > PD_MAX_INSTANCE) {
1636   2              ucsi_errno = ERR_NON_EXIST;
1637   2              set_error_data();
1638   2              return UCSI_COMMAND_FAIL;
1639   2          }
1640   1      
1641   1          port_index = suom->ConnectorNumber - 1;
1642   1      
1643   1          if (context[port_index].dfp_only && suom->USBOperationMode != OP_DFP) {
1644   2              ucsi_errno = ERR_INVALID;
1645   2              set_error_data();
1646   2              return UCSI_COMMAND_FAIL;
1647   2          }
1648   1          context[port_index].data_operation_mode_uom = 0;
1649   1      
1650   1          result = UCSI_COMMAND_SUCC;
1651   1          switch (suom->USBOperationMode) {
1652   2          case 1: //UFP
1653   2          case 2: //DRP
1654   2          case 4: //DRP
1655   2          case 5: //DRP + DFP
1656   2          case 6: //DRP + UFP
1657   2              context[port_index].data_operation_mode_uom = suom->USBOperationMode;
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 28  

1658   2              #ifdef ANXDEBUG
                      ucsi_debug("___________ 1  data operation mode is %.bx, %.bx.\n", suom->USBOperationMode,
                          context[port_index].data_operation_mode_uom);
                      if ((((XBYTE *)suom)[3])&0x80)
                          context[port_index].data_operation_mode_uom |= OP_DFP;
                      if ((((XBYTE *)suom)[2])&0x1)
                          context[port_index].data_operation_mode_uom |= OP_UFP;
                      if ((((XBYTE *)suom)[2])&0x2)
                          context[port_index].data_operation_mode_uom |= OP_DRP;
                      //context[port_index].data_operation_mode_uom = (((((XBYTE *)suom)[3])&0x80) >> 6) | (((((XBYTE *)
             -suom)[2])&0x3) << 1);
                      ucsi_debug("___________ 2  %.bx, %.bx, %.bx.\n", ((XBYTE *)suom)[2], ((XBYTE *)suom)[3],
                          context[port_index].data_operation_mode_uom);
                      #endif
1671   2              break;
1672   2          default:
1673   2              ucsi_errno = ERR_INVALID;
1674   2              set_error_data();
1675   2              result = UCSI_COMMAND_FAIL;
1676   2              break;
1677   2          }
1678   1      
1679   1          RamDebug(UCSI_COMMAND_UOM);
1680   1          RamDebug(context[port_index].data_operation_mode_uom);
1681   1          set_uor_ack();
1682   1          if ((result == UCSI_COMMAND_SUCC) && (context[port_index].anx_power_status == 0))
1683   1          {
1684   2              RamDebug(0xE5);
1685   2              chip_power_on(port_index);
1686   2          }
1687   1      
1688   1          return result;
1689   1      }
1690          #endif
1691          
1692          static u8 ppm_set_uor_process()
1693          {
1694   1          u8 ret = UCSI_COMMAND_FAIL;
1695   1      
1696   1          if (ucsi_command_process_delay == UCSI_UOR_WAITING_TIME)
1697   1              send_pd_msg(TYPE_DSWAP_REQ, 0, 0, SOP_TYPE);
1698   1          if (ucsi_command_process_delay) {
1699   2              if (--ucsi_command_process_delay == 0) {
1700   3                  port_id = port_index;
1701   3                  switch (get_data_role()) {
1702   4                  case 1: //DFP
1703   4                      role = OP_DFP;
1704   4                      context[port_id].ucsi_connector_partner_type = CPT_UFP_ATTACHED;
1705   4                      break;
1706   4                  case 0: //UFP
1707   4                      role = OP_UFP;
1708   4                      context[port_id].ucsi_connector_partner_type = CPT_DFP_ATTACHED;
1709   4                      break;
1710   4                  }
1711   3                  if (context[port_id].data_operation_mode_uor & role) {
1712   4                      if (context[port_id].csc.csc.PowerDirection == 1) {
1713   5                          context[port_id].csc.connector_change_indicator = 0;
1714   5                          context[port_id].csc.csc.PowerDirection = 1;
1715   5                      } else {
1716   5                          context[port_id].csc.connector_change_indicator = 0;
1717   5                          cancel_all_timer();
1718   5                      }
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 29  

1719   4                      set_uor_ack();
1720   4                      ret = UCSI_COMMAND_SUCC;
1721   4                  } else {
1722   4                      ucsi_errno = ERR_NEGOTIATION_FAIL;
1723   4                      set_error_data();
1724   4                      ret = UCSI_COMMAND_FAIL;
1725   4                  }
1726   3              } else {
1727   3                  ret = UCSI_COMMAND_CONTINUE;
1728   3              }
1729   2          }
1730   1          return ret;
1731   1      }
1732          /*
1733           * @desc   : OPM set usb operation role for PPM
1734           * @param  :
1735           *           msg -> shared message buffer between PPM and BIOS
1736           * @return :
1737           *           UCSI_COMMAND_SUCC : success
1738           *           UCSI_COMMAND_FAIL : fail
1739           */
1740          static u8 ppm_set_uor()
1741          {
1742   1          //u8 data_role = 0;
1743   1          #ifdef EC_ANX_BIG_ENDIAN
1744   1          SWAP_WORD((XBYTE *)suor + 2);
1745   1          #endif
1746   1      
1747   1          if (suor->ConnectorNumber > PD_MAX_INSTANCE) {
1748   2              ucsi_errno = ERR_NON_EXIST;
1749   2              set_error_data();
1750   2              return UCSI_COMMAND_FAIL;
1751   2          }
1752   1      
1753   1          port_index = suor->ConnectorNumber - 1;
1754   1          
1755   1          DETECT_POWER_ON(port_index);
1756   1          context[port_index].data_operation_mode_uor = 0;
1757   1      
1758   1          //context[port_index].data_operation_mode_uor = (((((XBYTE *)suor)[3])&0x80) >> 6) | (((((XBYTE *)suor
             -)[2])&0x3) << 1);
1759   1          if ((((XBYTE *)suor)[3])&0x80)
1760   1              context[port_index].data_operation_mode_uor |= OP_DFP;
1761   1          if ((((XBYTE *)suor)[2])&0x1)
1762   1              context[port_index].data_operation_mode_uor |= OP_UFP;
1763   1          if ((((XBYTE *)suor)[2])&0x2)
1764   1              context[port_index].data_operation_mode_uor |= OP_DRP;
1765   1      
1766   1          if (context[port_index].dfp_only && context[port_index].data_operation_mode_uor != OP_DFP) {
1767   2              ucsi_errno = ERR_INVALID;
1768   2              set_error_data();
1769   2              return UCSI_COMMAND_FAIL;
1770   2          }
1771   1          port_id = port_index;
1772   1          switch (get_data_role()) {
1773   2          case 1: //DFP
1774   2              role = OP_DFP;
1775   2              break;
1776   2          case 0: //UFP
1777   2              role = OP_UFP;
1778   2              break;
1779   2          }
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 30  

1780   1      
1781   1          result = UCSI_COMMAND_SUCC;
1782   1          port_id = port_index;
1783   1          #ifdef ANXDEBUG
                  ucsi_debug("___________ 3  %.bx, %.bx, %.bx, role %.bx.\n", ((XBYTE *)suor)[2], ((XBYTE *)suor)[3],
                      context[port_index].data_operation_mode_uor, role);
                  #endif
1787   1      
1788   1          send_source_sink_capability();
1789   1      
1790   1          switch (context[port_index].data_operation_mode_uor) {
1791   2          case OP_DFP:
1792   2              if (role == OP_UFP) {
1793   3                  //send_pd_msg(TYPE_DSWAP_REQ, 0, 0, SOP_TYPE);
1794   3                  if (!(context[port_index].pd_capability & PD_HAS_RETURN_STATUS)) {
1795   4                      send_pd_msg(TYPE_DSWAP_REQ, 0, 0, SOP_TYPE);
1796   4                      DelayXms(DATA_ROLE_SWAP_DELAY_MS);
1797   4      
1798   4                      if (get_data_role() != OP_DFP) {
1799   5                          ucsi_errno = ERR_NEGOTIATION_FAIL;
1800   5                          set_error_data();
1801   5                          result = UCSI_COMMAND_FAIL;
1802   5                      }
1803   4                  } else {
1804   4                      ucsi_command_process_delay = UCSI_UOR_WAITING_TIME;
1805   4                      result = UCSI_COMMAND_CONTINUE;
1806   4                  }
1807   3              } else
1808   2                  result = UCSI_COMMAND_SUCC;
1809   2              break;
1810   2          case OP_UFP:
1811   2              if (role == OP_DFP) {
1812   3                  //send_pd_msg(TYPE_DSWAP_REQ, 0, 0, SOP_TYPE);
1813   3                  if (!(context[port_index].pd_capability & PD_HAS_RETURN_STATUS)) {
1814   4                      send_pd_msg(TYPE_DSWAP_REQ, 0, 0, SOP_TYPE);
1815   4                      DelayXms(DATA_ROLE_SWAP_DELAY_MS);
1816   4      
1817   4                      if (get_data_role() != OP_UFP) {
1818   5                          ucsi_errno = ERR_NEGOTIATION_FAIL;
1819   5                          set_error_data();
1820   5                          result = UCSI_COMMAND_FAIL;
1821   5                      }
1822   4                  } else {
1823   4                      ucsi_command_process_delay = UCSI_UOR_WAITING_TIME;
1824   4                      result = UCSI_COMMAND_CONTINUE;
1825   4                  }
1826   3              } else
1827   2                  result = UCSI_COMMAND_SUCC;
1828   2              break;
1829   2          case OP_DRP:
1830   2              //Do nothing
1831   2              result = UCSI_COMMAND_SUCC;
1832   2              break;
1833   2          case OP_DRP_DFP:
1834   2              if (role == OP_UFP) {
1835   3                  //send_pd_msg(TYPE_DSWAP_REQ, 0, 0, SOP_TYPE);
1836   3                  if (!(context[port_index].pd_capability & PD_HAS_RETURN_STATUS)) {
1837   4                      send_pd_msg(TYPE_DSWAP_REQ, 0, 0, SOP_TYPE);
1838   4                      DelayXms(DATA_ROLE_SWAP_DELAY_MS);
1839   4                      if (get_data_role() != OP_DFP) {
1840   5                          ucsi_errno = ERR_NEGOTIATION_FAIL;
1841   5                          set_error_data();
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 31  

1842   5                          result = UCSI_COMMAND_FAIL;
1843   5                      }
1844   4                  } else {
1845   4                      ucsi_command_process_delay = UCSI_UOR_WAITING_TIME;
1846   4                      result = UCSI_COMMAND_CONTINUE;
1847   4                  }
1848   3              } else
1849   2              result = UCSI_COMMAND_SUCC;
1850   2              break;
1851   2          case OP_DRP_UFP:
1852   2              if (role == OP_DFP) {
1853   3                  //send_pd_msg(TYPE_DSWAP_REQ, 0, 0, SOP_TYPE);
1854   3                  if (!(context[port_index].pd_capability & PD_HAS_RETURN_STATUS)) {
1855   4                      send_pd_msg(TYPE_DSWAP_REQ, 0, 0, SOP_TYPE);
1856   4                      DelayXms(DATA_ROLE_SWAP_DELAY_MS);
1857   4                      if (get_data_role() != OP_UFP) {
1858   5                          ucsi_errno = ERR_NEGOTIATION_FAIL;
1859   5                          set_error_data();
1860   5                          result = UCSI_COMMAND_FAIL;
1861   5                      }
1862   4                  } else {
1863   4                      ucsi_command_process_delay = UCSI_UOR_WAITING_TIME;
1864   4                      result = UCSI_COMMAND_CONTINUE;
1865   4                  }
1866   3              } else
1867   2              result = UCSI_COMMAND_SUCC;
1868   2              break;
1869   2          }
1870   1      
1871   1          set_uor_ack();
1872   1      
1873   1          return result;
1874   1      }
1875          
1876          /*
1877           * @desc   : OPM get connector capability from PPM
1878           * @param  :
1879           *           msg -> shared message buffer between PPM and BIOS
1880           * @return :
1881           *           UCSI_COMMAND_SUCC : success
1882           *           UCSI_COMMAND_FAIL : fail
1883           */
1884          static u8 ppm_get_connector_capability()
1885          {
1886   1          if (gcc->ConnectorNumber > PD_MAX_INSTANCE) {
1887   2              ucsi_errno = ERR_NON_EXIST;
1888   2              set_error_data();
1889   2              return UCSI_COMMAND_FAIL;
1890   2          }
1891   1      
1892   1          port_index = gcc->ConnectorNumber - 1;
1893   1      
1894   1          S_CLEAR(ccd, struct connector_capability_data);
1895   1      
1896   1          //DETECT_POWER_ON(port_index);
1897   1      
1898   1          if (context[port_index].dfp_only)
1899   1              ccd->OperationMode = OM_DFP_ONLY | OM_USB2_SUP | OM_USB3_SUP |
1900   1                      OM_AUDIO_SUP | OM_DEBUG_ACC_SUP;
1901   1          else
1902   1              #if 0
                      ccd->OperationMode = OM_DRP | OM_DFP_ONLY | OM_UFP_ONLY |
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 32  

                              OM_DEBUG_ACC_SUP | OM_USB2_SUP | OM_AUDIO_SUP |
                              OM_USB3_SUP;
                      #else
1907   1              ccd->OperationMode = OM_DRP | OM_DFP_ONLY | OM_UFP_ONLY |
1908   1                  OM_USB2_SUP | OM_USB3_SUP;
1909   1              #endif
1910   1      
1911   1          #if UCSI_ALT_SUPPORT
1912   1          ccd->OperationMode |= OM_ALT_SUP;
1913   1          #endif
1914   1          ccd->Provider = 1;
1915   1          if (!context[port_index].dfp_only)
1916   1              ccd->Consumer = 1;
1917   1      
1918   1      
1919   1          result = UCSI_COMMAND_SUCC;
1920   1          get_connector_capability_ack();
1921   1      
1922   1          return result;
1923   1      }
1924          
1925          /*
1926           * @desc   : OPM get capability from PPM
1927           * @param  :
1928           *           msg -> shared message buffer between PPM and BIOS
1929           * @return :
1930           *           UCSI_COMMAND_SUCC : success
1931           *           UCSI_COMMAND_FAIL : fail
1932           */
1933          static u8 ppm_get_capability()
1934          {
1935   1          S_CLEAR(cci, struct cci_status);
1936   1          S_CLEAR(cd, struct capability_data);
1937   1      
1938   1          cd->bmAttributes.v1.DisabledStateSupport = 0;
1939   1          cd->bmAttributes.v1.BatteryChaging = 1;
1940   1          cd->bmAttributes.v1.USBPowerDelivery = 1;
1941   1          cd->bmAttributes.v1.USBTypeCCurrent = 1;
1942   1          cd->bmAttributes.v1.bmPowerSource.v1.UsesVBUS = 1;
1943   1          cd->bNumConnectors = PD_MAX_INSTANCE;
1944   1      
1945   1          cd->bmOptionalFeatures1 = CMD_OPTIONAL_SUPPORT;
1946   1      #if UCSI_ALT_SUPPORT
1947   1          //support 2 alt mode, usb 3.x, DP.
1948   1          cd->bNumAltModes = 2;
1949   1      #endif
1950   1          cd->bcdBCVersion = 0;
1951   1          cd->bcdPDVersion = PD_VERSION;
1952   1          cd->bcdUSBTypeCVersion = TYPEC_VERSION;
1953   1          #ifdef EC_ANX_BIG_ENDIAN
1954   1          SWAP_WORD(&cd->bcdPDVersion);
1955   1          SWAP_WORD(&cd->bcdUSBTypeCVersion);
1956   1          #endif
1957   1      
1958   1          result = UCSI_COMMAND_SUCC;
1959   1          get_capability_ack();
1960   1      
1961   1          return UCSI_COMMAND_SUCC;
1962   1      }
1963          
1964          static void ppm_init()
1965          {
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 33  

1966   1          for (i = 0; i < PD_MAX_INSTANCE; i++)
1967   1              {
1968   2                      RamDebug(0xE4);
1969   2              chip_power_on(i);
1970   2                      RamDebug(0xE8);
1971   2              S_CLEAR(&context[i].csc.csc, struct connector_status_change);
1972   2              context[i].power_operation_mode_pdm = PW_DRP;
1973   2              context[i].power_operation_mode_pdr = PW_DRP;
1974   2                      context[i].data_operation_mode_uom = OP_DRP;
1975   2              context[i].data_operation_mode_uor = OP_DRP;
1976   2                      RamDebug(0xE9);
1977   2          }
1978   1      }
1979          
1980          static void ppm_init_source_sink_capability()
1981          {
1982   1          for (port_id = 0; port_id < PD_MAX_INSTANCE; port_id++)
1983   1              if (context[port_id].anx_power_status == 1)
1984   1                  send_source_sink_capability();
1985   1      }
1986          
1987          /*
1988           * @desc   : OPM reset PPM
1989           * @param  :
1990           *           msg -> shared message buffer between PPM and BIOS
1991           * @return :
1992           *           UCSI_COMMAND_SUCC : success
1993           *           UCSI_COMMAND_FAIL : fail
1994           */
1995          static u8 ppm_reset()
1996          {
1997   1          S_CLEAR(&ne, struct notification_enable_status);
1998   1      
1999   1          cancel_all_timer();
2000   1          ppm_init();
2001   1          ppm_init_source_sink_capability();
2002   1          result = UCSI_COMMAND_SUCC;
2003   1          reset_ack();
2004   1          memcpy((XBYTE *)&xUCSI_DS_CCI0, (XBYTE *)cci, 4);   
2005   1          //PPM_RESET just need to to IDLE status
2006   1          //GOTO_STATE(PPM_IDLE_ND);
2007   1          return UCSI_COMMAND_SUCC;
2008   1      }
2009          
2010          /*
2011           * @desc   : OPM CANCEL command
2012           * @param  :
2013           *           msg -> shared message buffer between PPM and BIOS
2014           * @return :
2015           *           UCSI_COMMAND_SUCC : success
2016           *           UCSI_COMMAND_FAIL : fail
2017           */
2018          static u8 ppm_cancel()
2019          {
2020   1          if (current_pending_command) {
2021   2              result = UCSI_COMMAND_SUCC;
2022   2              cancel_ack();
2023   2          } else {
2024   2              result = UCSI_COMMAND_FAIL;
2025   2              cancel_ack();
2026   2              result = UCSI_COMMAND_NOT_NOTIFY;
2027   2          }
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 34  

2028   1      
2029   1          return result;
2030   1      }
2031          
2032          /*
2033           * @desc   : OPM ACK to PPM
2034           * @param  :
2035           *           msg -> shared message buffer between PPM and BIOS
2036           * @return :
2037           *           UCSI_COMMAND_SUCC : success
2038           *           UCSI_COMMAND_FAIL : fail
2039           */
2040          static u8 ppm_ack_cc_ci()
2041          {
2042   1      #ifdef ANXDEBUG
                  ucsi_debug("%s:%d ConnectorChangeAck(%.bx), CommandCompletedAck(%.bx).\n",
                          __func__, __LINE__,
                          acc->ConnectorChangeAcknowledge,
                          acc->CommandCompletedAcknowledge);
              #endif
2048   1          result = UCSI_COMMAND_SUCC;
2049   1          ack_cc_ci_ack();
2050   1      
2051   1          if (acc->ConnectorChangeAcknowledge)
2052   1              connector_change_need_ack = 0;
2053   1      
2054   1          if (acc->CommandCompletedAcknowledge)
2055   1              command_complete_need_ack = 0;
2056   1      
2057   1          return UCSI_COMMAND_SUCC;
2058   1      }
2059          static u8 ppm_connector_reset_process()
2060          {
2061   1          u8 ret = UCSI_COMMAND_FAIL;
2062   1          if (ucsi_command_process_delay) {
2063   2              if (--ucsi_command_process_delay == 0) {
2064   3                  if (context[port_index].csc.csc.PDResetComplete) {
2065   4                      connector_reset_ack();
2066   4                      ret = UCSI_COMMAND_SUCC;
2067   4                  } else {
2068   4                      ucsi_errno = ERR_UNRECOGNIZED;
2069   4                      set_error_data();
2070   4                      ret = UCSI_COMMAND_FAIL;
2071   4                  }
2072   3              } else {
2073   3                  ret = UCSI_COMMAND_CONTINUE;
2074   3              }
2075   2          }
2076   1          return ret;
2077   1      }
2078          
2079          /*
2080           * @desc   : OPM reset connector on PPM
2081           * @param  :
2082           *           msg -> shared message buffer between PPM and BIOS
2083           * @return :
2084           *           UCSI_COMMAND_SUCC : success
2085           *           UCSI_COMMAND_FAIL : fail
2086           */
2087          static u8 ppm_connector_reset()
2088          {
2089   1          port_index = cr->ConnectorNumber - 1;
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 35  

2090   1      
2091   1          if (cr->ConnectorNumber > PD_MAX_INSTANCE) {
2092   2              ucsi_errno = ERR_NON_EXIST;
2093   2              set_error_data();
2094   2              return UCSI_COMMAND_FAIL;
2095   2          }
2096   1          //DETECT_POWER_ON(port_index);
2097   1      
2098   1          if (IS_BATTERY1_OUT() || (IS_BATTERY1_IN() && BAT1_RSOC <= 3)) {
2099   2              ucsi_errno = ERR_CMD_UNSUCCESS_DUE_TO_DEAD_BATTERY;
2100   2              set_error_data();
2101   2              return UCSI_COMMAND_FAIL;
2102   2          }
2103   1      
2104   1          result = UCSI_COMMAND_SUCC;
2105   1              port_id = port_index;
2106   1      
2107   1          if (cr->HardReset)
2108   1              send_pd_msg(TYPE_HARD_RST, NULL, 0, SOP_TYPE);
2109   1          else
2110   1              send_pd_msg(TYPE_SOFT_RST, NULL, 0, SOP_TYPE);
2111   1      
2112   1          connector_reset_ack();
2113   1      
2114   1          return result;
2115   1      }
2116          
2117          /*
2118           * @desc   : OPM set notification enable on PPM
2119           * @param  :
2120           *           msg -> shared message buffer between PPM and BIOS
2121           * @return :
2122           *           UCSI_COMMAND_SUCC : success
2123           *           UCSI_COMMAND_FAIL : fail
2124           */
2125          static u8 ppm_set_notification_enable()
2126          {
2127   1          ne.CommandCompleted = sne->status.CommandCompleted;
2128   1          ne.ExternalSupplyChange = sne->status.ExternalSupplyChange;
2129   1          ne.PowerOperationModeChange = sne->status.PowerOperationModeChange ;
2130   1          ne.SupportedProviderCapabilitiesChange = sne->status.SupportedProviderCapabilitiesChange ;
2131   1          ne.NegotiatedPowerLevelChange = sne->status.NegotiatedPowerLevelChange ;
2132   1          ne.PDResetComplete = sne->status.PDResetComplete ;
2133   1          ne.SupportedCAMChange = sne->status.SupportedCAMChange ;
2134   1          ne.BatteryChargingStatusChange = sne->status.BatteryChargingStatusChange ;
2135   1          ne.ConnectorPartnerChange = sne->status.ConnectorPartnerChange ;
2136   1          ne.PowerDirectionChange = sne->status.PowerDirectionChange ;
2137   1          ne.ConnectChange = sne->status.ConnectChange ;
2138   1          ne.Error = sne->status.Error ;
2139   1      
2140   1          result = UCSI_COMMAND_SUCC;
2141   1          set_notification_enable_ack();
2142   1      
2143   1          return UCSI_COMMAND_SUCC;
2144   1      }
2145          
2146          static void ppm_alert(void)
2147          {
2148   1          #ifdef ANXDEBUG
                  ucsi_debug("%s:%d, ------------- PPM alert OPM, cci -> %.bx %.bx %.bx %.bx.\n", __func__, __LINE__,
                      xUCSI_DS_CCI0, xUCSI_DS_CCI1, xUCSI_DS_CCI2, xUCSI_DS_CCI3);
                  #endif
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 36  

2152   1          RamDebug(0xAA);
2153   1          RamDebug(0x77);
2154   1          ucsi_ppm_notify_opm();
2155   1      }
2156          static void ucsi_command_complete_notify_opm(void)
2157          {
2158   1          if (ne.CommandCompleted) {
2159   2             memcpy((XBYTE *)&xUCSI_DS_CCI0, (XBYTE *)cci, 4);
2160   2             memcpy((XBYTE *)&xUCSI_DS_MGI, (XBYTE *)msg->msgi, 16);
2161   2                 #ifdef ANXDEBUG
                     ucsi_debug("++++    CTRL message -> ");
                         for (i = 0; i < 16; i++) {
                             ucsi_debug("%.bx ", xUCSI_DS_MGI[i]);
                     }
                         ucsi_debug("\n");
                     #endif
2168   2             ppm_alert();
2169   2         }
2170   1      }
2171          static u8 ucsi_command_process_timeout_checking(void)
2172          {
2173   1          if (current_pending_command_timeout) {
2174   2              if (--current_pending_command_timeout == 0) {
2175   3              #ifdef ANXDEBUG
                          ucsi_debug("%s:%d command timeout, pending command(%.bx), state(%.bx).\n",
                              __func__, __LINE__, current_pending_command, ucsi_ppm_state);
                      #endif
2179   3                  ucsi_errno = ERR_UNRECOGNIZED;
2180   3                  set_error_data();
2181   3                  ucsi_command_complete_notify_opm();
2182   3                  return UCSI_COMMAND_SUCC;
2183   3              }
2184   2          }
2185   1          return UCSI_COMMAND_FAIL;
2186   1      }
2187          void cancel_all_timer()
2188          {
2189   1          ucsi_async_checking_timer = 0;
2190   1          ucsi_async_restore = 0;
2191   1      }
2192          static void async_notify_opm(void)
2193          {
2194   1          S_CLEAR(cci, struct cci_status);
2195   1          if ((ucsi_async_restore >= 5) && (ucsi_async_checking_timer == 0)) {
2196   2              ucsi_async_checking_timer = ucsi_async_restore;
2197   2              ucsi_async_restore = 0;
2198   2              #ifdef ANXDEBUG
                      ucsi_debug("%s:%d ucsi reset async timer as %.bx.\n",
                          __func__, __LINE__, ucsi_async_checking_timer);
                      #endif
2202   2          }
2203   1          if (ucsi_async_checking_timer) {
2204   2              if (--ucsi_async_checking_timer == 0) {
2205   3                  ucsi_ppm_connector_change_detect();
2206   3                  #ifdef ANXDEBUG
                          ucsi_debug("%s:%d ucsi connector change (%.bx) async notify opm.\n",
                              __func__, __LINE__, cci->ConnectorChangeIndicator);
                          #endif
2210   3                  if (cci->ConnectorChangeIndicator) {
2211   4                      ucsi_connector_change_notify_opm(0, cci->ConnectorChangeIndicator, 0);
2212   4                      #ifdef ANXDEBUG
                              #endif
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 37  

2214   4                  }
2215   3              }
2216   2          }
2217   1      }
2218          /*
2219           * @desc   : PPM IDLE processing
2220           * @param  :
2221           *           msg -> shared message buffer between PPM and BIOS
2222           * @return :
2223           *           UCSI_COMMAND_SUCC : success
2224           *           UCSI_COMMAND_FAIL : fail
2225           */
2226          static u8 ppm_nd_process(void)
2227          {
2228   1          u8 ret = UCSI_COMMAND_FAIL;
2229   1          switch (current_pending_command) {
2230   2          case UCSI_COMMAND_NOTIFICATION_ENABLE:
2231   2              ppm_set_notification_enable();
2232   2      
2233   2              if (ne.CommandCompleted) {
2234   3                  wait_for_ack_back = 250;
2235   3                  GOTO_STATE(PPM_WCCA);
2236   3                  ret = UCSI_COMMAND_SUCC;
2237   3              }
2238   2              break;
2239   2          case UCSI_COMMAND_PPM_RESET:
2240   2              ppm_reset();
2241   2              GOTO_STATE(PPM_IDLE_ND);
2242   2              break;
2243   2          case UCSI_COMMAND_RESERVED:
2244   2              return ret;
2245   2              break;
2246   2          default:
2247   2              break;
2248   2          }
2249   1      
2250   1          current_pending_command = 0;
2251   1      #ifdef ANXDEBUG
                  ucsi_debug("%s:%d UCSI state(ND), Command(%d).\n",
                          __func__, __LINE__, sne->header.Command);
              #endif
2255   1          if (ret == UCSI_COMMAND_SUCC)
2256   1              ucsi_command_complete_notify_opm();
2257   1          return ret;
2258   1      }
2259          
2260          /*
2261           * @desc   : PPM process state machine processing
2262           * @param  :
2263           *           msg -> shared message buffer between PPM and BIOS
2264           * @return :
2265           *           UCSI_COMMAND_SUCC : success
2266           *           UCSI_COMMAND_FAIL : fail
2267           */
2268          static void ppm_pc_process()
2269          {
2270   1          u8 ret = UCSI_COMMAND_FAIL;
2271   1      
2272   1          ret = ucsi_command_process_timeout_checking();
2273   1          if (ret == UCSI_COMMAND_SUCC) {
2274   2              current_pending_command = 0;
2275   2              wait_for_ack_back = 250;
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 38  

2276   2              GOTO_STATE(PPM_WCCA);
2277   2              return;
2278   2          }
2279   1          #ifdef ANXDEBUG
                      ucsi_debug("%s:%d ucsi pc process.\n",
                          __func__, __LINE__);
                  #endif
2283   1          switch (ch->Command) {
2284   2          default:
2285   2      #ifdef ANXDEBUG
                      ucsi_debug("%s:%d Warning: received unsupported command(0x%x)"
                              " at PPM_PC state.\n",
                              __func__, __LINE__, ch->Command);
              #endif
2290   2              ucsi_errno = ERR_UNRECOGNIZED;
2291   2              set_error_data();
2292   2              ret = UCSI_COMMAND_FAIL;
2293   2              break;
2294   2          case UCSI_COMMAND_CONNECTOR_RESET:
2295   2              ret = ppm_connector_reset_process();
2296   2              break;
2297   2          case UCSI_COMMAND_UOR:
2298   2              ret = ppm_set_uor_process();
2299   2              break;
2300   2          case UCSI_COMMAND_PDR:
2301   2              ret = ppm_set_pdr_process();
2302   2              break;
2303   2          }
2304   1      
2305   1          if (ret == UCSI_COMMAND_CONTINUE)
2306   1              return;
2307   1          current_pending_command = 0;
2308   1          ucsi_command_complete_notify_opm();
2309   1          wait_for_ack_back = 250;
2310   1          GOTO_STATE(PPM_WCCA);
2311   1      }
2312          
2313          /*
2314           * @desc   : PPM busy state machine processing
2315           * @param  :
2316           *           msg -> shared message buffer between PPM and BIOS
2317           * @return :
2318           *           UCSI_COMMAND_SUCC : success
2319           *           UCSI_COMMAND_FAIL : fail
2320           */
2321          static u8 ppm_busy_process(u8 Command)
2322          {
2323   1          u8 ret = UCSI_COMMAND_FAIL;
2324   1      
2325   1          S_CLEAR(cci, sizeof(struct cci_status));
2326   1          switch (Command) {
2327   2          default:
2328   2      #ifdef ANXDEBUG
                      ucsi_debug("%s:%d Warning: received unsupported command(0x%x)"
                              " from OPM at PPM_BUSY state.\n",
                              __func__, __LINE__, ch->Command);
              #endif
2333   2              busy_ack();
2334   2              ret = UCSI_COMMAND_SUCC;
2335   2              break;
2336   2          case UCSI_COMMAND_PPM_RESET:
2337   2              ppm_reset();
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 39  

2338   2              GOTO_STATE(PPM_IDLE_ND);
2339   2              ret = UCSI_COMMAND_NOT_NOTIFY;
2340   2              current_pending_command = 0;
2341   2              break;
2342   2          case UCSI_COMMAND_ACK_CC_CI:
2343   2              ret = ppm_ack_cc_ci();
2344   2              break;
2345   2          case UCSI_COMMAND_CANCEL:
2346   2              ret = ppm_cancel();
2347   2              GOTO_STATE(PPM_IDLE_NE);
2348   2              current_pending_command = 0;
2349   2              break;
2350   2          }
2351   1          if (ret != UCSI_COMMAND_NOT_NOTIFY)
2352   1              ucsi_command_complete_notify_opm();
2353   1      
2354   1          return ret;
2355   1      }
2356          
2357          /*
2358           * @desc   : ASYNC event wait for OPM ACK state machine processing
2359           * @param  :
2360           *           msg -> shared message buffer between PPM and BIOS
2361           * @return :
2362           *           UCSI_COMMAND_SUCC : success
2363           *           UCSI_COMMAND_FAIL : fail
2364           */
2365          static u8 ppm_waea_process()
2366          {
2367   1          u8 ret = UCSI_COMMAND_FAIL;
2368   1      
2369   1          switch (ch->Command) {
2370   2          case UCSI_COMMAND_ACK_CC_CI:
2371   2              ret = ppm_ack_cc_ci();
2372   2              GOTO_STATE(PPM_IDLE_NE);
2373   2              break;
2374   2          case UCSI_COMMAND_PPM_RESET:
2375   2              ppm_reset();
2376   2              ret = UCSI_COMMAND_NOT_NOTIFY;
2377   2              GOTO_STATE(PPM_IDLE_ND);
2378   2              break;
2379   2          case UCSI_COMMAND_GET_CONNECTOR_STATUS:
2380   2              ret = ppm_get_connector_status();
2381   2              GOTO_STATE(PPM_IDLE_NE);
2382   2              break;
2383   2          default:
2384   2      #ifdef ANXDEBUG
                      ucsi_debug("%s:%d, recevied not ACK_CC_CI command, continue waiting.\n",
                              __func__, __LINE__);
              #endif
2388   2              break;
2389   2          }
2390   1      
2391   1          current_pending_command = 0;
2392   1          if (UCSI_COMMAND_SUCC)
2393   1              ucsi_command_complete_notify_opm();
2394   1          return ret;
2395   1      }
2396          
2397          
2398          /*
2399           * @desc   : PPM wait for OPM ACK state machine processing
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 40  

2400           * @param  :
2401           *           msg -> shared message buffer between PPM and BIOS
2402           * @return :
2403           *           UCSI_COMMAND_SUCC : success
2404           *           UCSI_COMMAND_FAIL : fail
2405           */
2406          static u8 ppm_wcca_process()
2407          {
2408   1          u8 ret = UCSI_COMMAND_FAIL;
2409   1      
2410   1          current_pending_command_timeout = 0;
2411   1          switch (ch->Command) {
2412   2          case UCSI_COMMAND_ACK_CC_CI:
2413   2              ret = ppm_ack_cc_ci();
2414   2              GOTO_STATE(PPM_IDLE_NE);
2415   2              break;
2416   2          case UCSI_COMMAND_PPM_RESET:
2417   2              ret = ppm_reset();
2418   2              GOTO_STATE(PPM_IDLE_ND);
2419   2              break;
2420   2          default:
2421   2              wait_for_ack_back--;
2422   2              if ((wait_for_ack_back == 120) || (wait_for_ack_back == 1)) {
2423   3                  #ifdef ANXDEBUG
                          ucsi_debug(" ack timeout, re-notify OPM.\n");
                          #endif
2426   3                  ucsi_command_complete_notify_opm();
2427   3              } else if (wait_for_ack_back == 0) {
2428   3                  #ifdef ANXDEBUG
                          ucsi_debug(" ack timeout, goto idle notification enable status.\n");
                          #endif
2431   3                  GOTO_STATE(PPM_IDLE_NE);
2432   3              }
2433   2              return ret;
2434   2      #ifdef ANXDEBUG
                      ucsi_debug("%s:%d, recevied not ACK_CC_CI command, continue waiting.\n",
                              __func__, __LINE__);
              #endif
2438   2              break;
2439   2          }
2440   1      
2441   1          current_pending_command = 0;
2442   1          if (UCSI_COMMAND_SUCC)
2443   1              ucsi_command_complete_notify_opm();
2444   1          return ret;
2445   1      }
2446          
2447          /*
2448           * @desc   : PPM main process
2449           *           PPM finish all required command processing here
2450           * @param  :
2451           *           msg -> shared message buffer between PPM and BIOS
2452           * @return :
2453           *           UCSI_COMMAND_SUCC : success
2454           *           UCSI_COMMAND_FAIL : fail
2455           */
2456          static u8 ppm_ne_process()
2457          {
2458   1          u8 ret = UCSI_COMMAND_FAIL;
2459   1      
2460   1      
2461   1      
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 41  

2462   1          switch (ch->Command) {
2463   2          case UCSI_COMMAND_PPM_RESET:
2464   2              ppm_reset();
2465   2              GOTO_STATE(PPM_IDLE_ND);
2466   2              ret = UCSI_COMMAND_NOT_NOTIFY;
2467   2              break;
2468   2          case UCSI_COMMAND_CANCEL:
2469   2              //Just drop CANCEL command
2470   2              ret = UCSI_COMMAND_NOT_NOTIFY;
2471   2              //ret = cancel_ack(cci, UCSI_COMMAND_SUCC);
2472   2              break;
2473   2          case UCSI_COMMAND_CONNECTOR_RESET:
2474   2              ret = ppm_connector_reset();
2475   2              break;
2476   2          case UCSI_COMMAND_ACK_CC_CI:
2477   2              ret = ppm_ack_cc_ci();
2478   2              break;
2479   2          case UCSI_COMMAND_NOTIFICATION_ENABLE:
2480   2              ret = ppm_set_notification_enable();
2481   2              break;
2482   2          case UCSI_COMMAND_CAPABILITY:
2483   2              ret = ppm_get_capability();
2484   2              break;
2485   2          case UCSI_COMMAND_CONNECTOR_CAPABILITY:
2486   2              ret = ppm_get_connector_capability();
2487   2              break;
2488   2      #if UCSI_SET_UOM_SUPPORT
2489   2          case UCSI_COMMAND_UOM:
2490   2              ret = ppm_set_uom();
2491   2              break;
2492   2      #endif
2493   2          case UCSI_COMMAND_UOR:
2494   2              ret = ppm_set_uor();
2495   2              break;
2496   2      #if UCSI_SET_PDM_SUPPORT
2497   2          case UCSI_COMMAND_PDM:
2498   2              ret = ppm_set_pdm();
2499   2              break;
2500   2      #endif
2501   2          case UCSI_COMMAND_PDR:
2502   2              ret = ppm_set_pdr();
2503   2              break;
2504   2      #if UCSI_ALT_SUPPORT
2505   2          case UCSI_COMMAND_GET_ALTERNATE_MODES:
2506   2              ret = ppm_get_alt_modes();
2507   2              break;
2508   2      #endif
2509   2      #if UCSI_ALT_SUPPORT
2510   2          case UCSI_COMMAND_GET_CAM_SUPPORTED:
2511   2              ret = ppm_get_cam_supported();
2512   2              break;
2513   2      #endif
2514   2      #if UCSI_ALT_SUPPORT
2515   2          case UCSI_COMMAND_GET_CURRENT_CAM:
2516   2              ret = ppm_get_current_cam();
2517   2              break;
2518   2      #endif
2519   2      #if UCSI_ALT_OR_SUPPORT
2520   2          case UCSI_COMMAND_SET_NEW_CAM:
2521   2              ret = ppm_set_new_cam();
2522   2              break;
2523   2      #endif
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 42  

2524   2      #if UCSI_PDOS_SUPPORT
2525   2          case UCSI_COMMAND_GET_PDOS:
2526   2              ret = ppm_get_pdos();
2527   2              break;
2528   2      #endif
2529   2      #if UCSI_CABLE_SUPPORT
2530   2          case UCSI_COMMAND_GET_CABLE_PROPERTY:
2531   2              ret = ppm_get_cable_property();
2532   2              break;
2533   2      #endif
2534   2          case UCSI_COMMAND_GET_CONNECTOR_STATUS:
2535   2              ret = ppm_get_connector_status();
2536   2              break;
2537   2          case UCSI_COMMAND_GET_ERROR_STATUS:
2538   2              ret = ppm_get_error_status();
2539   2              break;
2540   2          case UCSI_COMMAND_RESERVED:
2541   2              async_notify_opm();
2542   2              return ret;
2543   2              break;
2544   2          default:
2545   2              ret = unsupport_command_process();
2546   2      #ifdef ANXDEBUG
                      ucsi_debug("%s:%d Cannot support command(0x%x) from OPM.\n",
                          __func__, __LINE__, ch->Command);
              #endif
2550   2              break;
2551   2          }
2552   1      
2553   1          switch (ret) {
2554   2          case UCSI_COMMAND_NOT_NOTIFY:
2555   2              current_pending_command = 0;
2556   2              break;
2557   2          case UCSI_COMMAND_CONTINUE:
2558   2              #if UCSI_COMMAND_RETURN_BUSY_ACK
2559   2              //busy_ack();
2560   2              //ucsi_command_complete_notify_opm();
2561   2      #endif
2562   2              GOTO_STATE(PPM_PC);
2563   2              break;
2564   2          //case UCSI_COMMAND_BUSY:
2565   2          case UCSI_COMMAND_SUCC:
2566   2          case UCSI_COMMAND_FAIL:
2567   2              wait_for_ack_back = 250;
2568   2              GOTO_STATE(PPM_WCCA);
2569   2              current_pending_command = 0;
2570   2              ucsi_command_complete_notify_opm();
2571   2              break;
2572   2          }
2573   1      
2574   1      
2575   1          return ret;
2576   1      }
2577          
2578          /*
2579           * @desc   : UCSI connector change notify function
2580           *           PPM call this after detecting USB Type-C connector status calling
2581           * @param  :
2582           *           ack : Command Completed Indicator setting
2583           *           connector_index : registered Connector ID
2584           *           wait_for_ack : Change state machine to PPM_WCCA
2585           * @return :
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 43  

2586           *           UCSI_COMMAND_SUCC : success
2587           *           UCSI_COMMAND_FAIL : fail
2588           */
2589          u8 ucsi_connector_change_notify_opm(u8 ack, u8 connector_index, u8 wait_for_ack)
2590          {
2591   1          u8 invalid = 1;
2592   1      
2593   1          //Ignore notify OPM under NOTIFICATION DISABLE STAE
2594   1          if (ucsi_ppm_state == PPM_IDLE_ND)
2595   1              return UCSI_COMMAND_FAIL;
2596   1      
2597   1          //If current PPM is not under PPM_IDLE_NE, no need notify OPM.
2598   1          if ((ack == 0) && (wait_for_ack == 0) &&
2599   1              (ucsi_ppm_state != PPM_IDLE_NE))
2600   1              return UCSI_COMMAND_SUCC;
2601   1      
2602   1          S_CLEAR(cci, struct cci_status);
2603   1          S_CLEAR_L((void *)&msg->msgi, 16);
2604   1      
2605   1          if ((connector_index) && (ne.ConnectChange == 1)) {
2606   2              cci->ConnectorChangeIndicator = connector_index;
2607   2              invalid = 0;
2608   2          }
2609   1      
2610   1          if (ack && ne.CommandCompleted) {
2611   2              invalid = 0;
2612   2              cci->CommandCompletedIndicator = 1;
2613   2          }
2614   1      
2615   1          if (invalid)
2616   1              return UCSI_COMMAND_FAIL;
2617   1      
2618   1          if (ne.CommandCompleted) {
2619   2      
2620   2              memcpy((XBYTE *)&xUCSI_DS_CCI0, (XBYTE *)cci, 4);
2621   2              ppm_alert();
2622   2          }
2623   1      
2624   1          return UCSI_COMMAND_SUCC;
2625   1      }
2626          
2627          
2628          /*
2629           * @desc   : UCSI PPM handler, EC should call this handler after received
2630           *           event from OPM/BIOS
2631           * @param  : none
2632           * @return :
2633           *           UCSI_COMMAND_SUCC : success
2634           *           UCSI_COMMAND_FAIL : fail
2635           */
2636          void checking_opm_command(void)
2637          {
2638   1          if (ucsi_received_command == 1) {
2639   2              ucsi_received_command = 0;
2640   2      
2641   2              RamDebug(0xAA);
2642   2              
2643   2              if (current_pending_command == 0) {
2644   3                  memcpy((void *)&msg->CONTROL, (XBYTE *)&xUCSI_COMMAND, 8);
2645   3                              RamDebug(current_pending_command);
2646   3                  #ifdef ANXDEBUG
                          ucsi_debug("%s:%d received command %.bx.\n", __func__, __LINE__, current_pending_command);
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 44  

                          #endif
2649   3                  current_pending_command_timeout = 250;
2650   3                  ucsi_errno = 0;
2651   3                  S_CLEAR_L((void *)&msg->msgi, 16);
2652   3              } else {
2653   3                  #ifdef ANXDEBUG
                          ucsi_debug("%s:%d, received command %.bx at busy state.\n", __func__, __LINE__, xUCSI_COMMAND)
             -;
                          #endif
2656   3                  ppm_busy_process(xUCSI_COMMAND);
2657   3          }
2658   2      
2659   2      
2660   2          }
2661   1      
2662   1      }
2663          
2664          #ifdef ANXDEBUG
              #define assert(x)   {\
                  if (!x) {\
                      ucsi_debug("%s:%d assert failed: %s.\n", __FILE__, __LINE__, #x);\
                      while (1) ;\
                  }\
              }
              
              void ucsi_structure_size_assert(void)
              {
                  assert(sizeof(struct bios_share_msg) == 48);
                  assert(sizeof(struct cci_status) == 4);
                  assert(sizeof(struct control_header) == 2);
              
                  /* Checking all command structure */
                  assert(sizeof(struct reset) == 8);
                  assert(sizeof(struct cancel) == 8);
                  assert(sizeof(struct connector_reset) == 8);
                  assert(sizeof(struct ack_cc_ci) == 8);
                  assert(sizeof(struct set_notification_enable) == 8);
                  assert(sizeof(struct get_capability) == 8);
                  assert(sizeof(struct get_connector_capability) == 8);
                  assert(sizeof(struct set_uom) == 8);
                  assert(sizeof(struct set_uor) == 8);
                  assert(sizeof(struct set_pdm) == 8);
                  assert(sizeof(struct set_pdr) == 8);
                  assert(sizeof(struct get_alternate_modes) == 8);
                  assert(sizeof(struct get_cam_supported) == 8);
                  assert(sizeof(struct get_current_cam) == 8);
                  assert(sizeof(struct set_new_cam) == 8);
                  assert(sizeof(struct get_pdos) == 8);
                  assert(sizeof(struct get_cable_property) == 8);
                  assert(sizeof(struct get_connector_status) == 8);
                  assert(sizeof(struct get_error_status) == 8);
              
                  /* Checking specific data structure */
                  assert(sizeof(struct capability_data) == 16);
                  assert(sizeof(struct connector_capability_data) == 2);
                  assert(sizeof(struct alt_modes_data) == 12);
                  assert(sizeof(struct cable_property_data) == 5);
                  assert(sizeof(struct connector_status_data) == 9);
                  assert(sizeof(struct error_status_data) == 16);
              
                  return;
              }
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 45  

              
              #endif
2711          
2712          /*
2713           * @desc   : EC should call this function to initial UCSI framework
2714           * @param  :
2715           *           msg -> shared message buffer between PPM and BIOS
2716           *           notify_callbak -> UCSI use this callbak function to notify BIOS
2717           * @return :
2718           *           UCSI_COMMAND_SUCC : success
2719           *           UCSI_COMMAND_FAIL : fail
2720           */
2721          u8 ucsi_init()
2722          {
2723   1      #ifdef ANXDEBUG
                  ucsi_debug("%s:%d ucsi initialization, ", __func__, __LINE__);
                  ucsi_debug("ANX ucsi version is %.bx.%.bx.%.bx\n",
                      ANX_UCSI_VERSION_MAJOR,
                      ANX_UCSI_VERSION_MINOR,
                      ANX_UCSI_VERSION_REV);
                  ucsi_structure_size_assert();
              #endif
2731   1      
2732   1      //EVB only
2733   1      #ifdef ITE_EC_EVB_PORT1_TEST
              #message "ANX INIT on EVB"
              
                  /*Initial GPIO, H6->Liberty 0, H7->Liberty 1*/
                  GPCRH5 = INPUT;
                  GPCRH6 = INPUT;
                  GPCRH7 = MaxD;
              
              #else
2742   1      #message "ANX INIT on MRD"
*** MESSAGE C320 IN LINE 2742 OF Code\Oem\UCSI.C: "ANX INIT on MRD"
2743   1      
2744   1      #endif
2745   1          timer1msCount = 0;
2746   1              
2747   1          request_src_caps_flag[0] = 1;
2748   1          request_src_caps_flag[1] = 1;
2749   1          ucsi_ppm_state = PPM_IDLE_ND;
2750   1          connector_change_need_ack = 0;
2751   1          command_complete_need_ack = 0;
2752   1          need_ack_command = 0;
2753   1          current_pending_command = 0;
2754   1          self_charging_error = 0;
2755   1          supply_1500ma_flag = 0;
2756   1          
2757   1          msg->version = UCSI_COMPLIANT_VERSION;
2758   1          #ifdef EC_ANX_BIG_ENDIAN
2759   1          SWAP_WORD(&msg->version);
2760   1          memcpy((XBYTE *)&xUCSI_DS_VERSION, &msg->version, 2);
2761   1          #endif
2762   1      
2763   1              RamDebug(0xE6);
2764   1          ppm_init();
2765   1              RamDebug(0xE7);
2766   1          cancel_all_timer(); 
2767   1              RamDebug(0xEB);
2768   1          anx7447_ucsi_init();        
2769   1              RamDebug(0xEC);
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 46  

2770   1          anx_dead_battery_checking_1();    
2771   1              RamDebug(0xED);
2772   1          GOTO_STATE(PPM_IDLE_ND);    
2773   1              RamDebug(0xEE);
2774   1      #ifdef ANXDEBUG
                  ucsi_debug("\n\n");
              #endif
2777   1      
2778   1      
2779   1      #ifndef ITE_EC_EVB_PORT1_TEST
2780   1          //save UCSI version to memory
2781   1          xEC_UCSIMajorVersion = ANX_UCSI_VERSION_MAJOR;
2782   1          xEC_UCSIMinorVersion = ANX_UCSI_VERSION_MINOR;
2783   1          xEC_UCSIRevVersion = ANX_UCSI_VERSION_REV;
2784   1      #endif
2785   1      
2786   1          return UCSI_COMMAND_SUCC;
2787   1              RamDebug(0xEA);
2788   1      }
2789          
2790          
2791          /*
2792           * @desc   : ANX context data structure initialization
2793           * @param  :
2794           *           param : anx platform context parameters
2795           * @return : none
2796           */
2797          void anx_initial_context(u8 port_index)
2798          {
2799   1          context[port_index].ucsi_connector_partner_type = 0;
2800   1          context[port_index].peer_svid_length = 0;
2801   1          context[port_index].downstream_pd_cap = 0;
2802   1          context[port_index].ucsi_partner_rdo = 0;
2803   1          context[port_index].power_op_mode = 0;
2804   1          context[port_index].anx_current_in_50ma = 0;
2805   1          context[port_index].anx_voltage_in_100mv = 0;
2806   1          context[port_index].power_role_swap_flag = 0;
2807   1          context[port_index].partner_pdo_length = 0;
2808   1          context[port_index].partner_pdo_sink_or_source = 0;
2809   1          context[port_index].sys_sta_bak = 0;
2810   1          context[port_index].anx_vbus_status = 0;
2811   1          context[port_index].pbuf_rx_front = 0;
2812   1          context[port_index].pbuf_tx_rear = 0;
2813   1          context[port_index].anx_power_role = 1;
2814   1              context[port_index].anx_data_role = 0;
2815   1          context[port_index].anx_initial_status = 0;
2816   1          //context->hard_reset_done = 0;
2817   1          //context->soft_reset_done = 0;
2818   1          context[port_index].enable_report_power_on = 0;
2819   1          S_CLEAR(&context[port_index].cv, struct cable_vdo);
2820   1          context[port_index].ct = CABLE_TYPE_A;
2821   1          //context[port_index].connector_index = 0;
2822   1          self_charging_error = 0;
2823   1          context[port_index].trysnk_enable = 0;
2824   1          context[port_index].trysrc_enable = 0;
2825   1          context[port_index].ConnectorPartner = CP_USB;
2826   1          context[port_index].BatteryCharging = 0;
2827   1          context[port_index].data_operation_mode_uor = OP_DRP;
2828   1          context[port_index].power_operation_mode_pdr = PW_DRP;
2829   1          context[port_index].hpd_status = 0;
2830   1          S_CLEAR(&context[port_index].csc.csc, struct connector_status_change);
2831   1          if (context[port_index].pd_capability & PD_HAS_REDRIVER)
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 47  

2832   1              context[port_index].mux_mode = NO_CONNECT;
2833   1          if (port_index == supply_1500ma_port && supply_1500ma_flag == 1) {
2834   2              supply_1500ma_port = 0;
2835   2              supply_1500ma_flag = 0;
2836   2          }
2837   1          
2838   1      }
2839          
2840          static void pd_initialization(void)
2841          {
2842   1          for (i = 0; i < PD_MAX_INSTANCE; i++) {
2843   2              if (context[i].anx_power_status == 1 && context[i].anx_initial_status) {
2844   3                              RamDebug(0x67);
2845   3                  port_id = i;
2846   3                  send_initialized_setting();
2847   3              }
2848   2          }
2849   1      }
2850          
2851          void ucsi_async_notify_raise_up(u8 ms)
2852          {
2853   1          switch (ucsi_ppm_state) {
2854   2          case PPM_IDLE_ND:
2855   2              break;
2856   2          case PPM_IDLE_NE:
2857   2              ucsi_async_checking_timer = ms;
2858   2              break;
2859   2          default:
2860   2              ucsi_async_restore = ms;
2861   2              break;
2862   2          }
2863   1      }
2864          
2865          /*
2866           * @desc   : UCSI PPM handler, EC should call this handler after received
2867           *           event from OPM/BIOS
2868           * @param  : none
2869           * @return :
2870           *           UCSI_COMMAND_SUCC : success
2871           *           UCSI_COMMAND_FAIL : fail
2872           */
2873          void ucsi_opm_handler(void)
2874          {
2875   1          switch (ucsi_ppm_state) {
2876   2              case PPM_IDLE_ND:
2877   2                  ppm_nd_process();
2878   2                  break;
2879   2              case PPM_IDLE_NE:
2880   2                  ppm_ne_process();
2881   2                  break;
2882   2              case PPM_PC:
2883   2                  ppm_pc_process();
2884   2                  break;
2885   2              case PPM_BUSY:
2886   2                  break;
2887   2              case PPM_WCCA:
2888   2                  ppm_wcca_process();
2889   2                  break;
2890   2          }
2891   1      }
2892          
2893          void ANX_HOOK_10ms(void)
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 48  

2894          {
2895   1          pd_initialization();
2896   1          checking_opm_command();
2897   1          ucsi_opm_handler();
2898   1      }
2899          void ANX_HOOK_1ms(void)
2900          {
2901   1          timer1msCount++;
2902   1      #if Two_PD_Chip
                  port_id = 1;        
              #ifdef ITE_EC_EVB_PORT1_TEST
              #message "ANX INTR on EVB Configuration"
                  if ((GPDRH & BIT6) == 0)
              #else
                  if (IS_USBPD2_INT_N_LO()) 
              #endif
                  {
                              RamDebug(0xCC);
                      if (context[port_id].error_count < 100)
                      {
                                      RamDebug(0xCF);
                          anx_alert_message_isr();
                          ++context[port_id].error_count;
                      } else {
                          if (timer1msCount == 200) {
                                              RamDebug(0xFD);
                          }
                      }
                  }
                  else
                  {
                      context[port_id].error_count = 0;
                  }
              #endif
2928   1          port_id = 0;
2929   1      #ifdef ITE_EC_EVB_PORT1_TEST
              #message "ANX INTR on EVB Configuration"
                  if ((GPDRH & BIT5) == 0)
              #else
2933   1          if (IS_USBPD1_INT_N_LO()) 
2934   1      #endif
2935   1          {
2936   2                      //RamDebug(0xBB);
2937   2              if (context[port_id].error_count < 100)
2938   2              {
2939   3                              RamDebug(0xBC);
2940   3                  anx_alert_message_isr();
2941   3                              RamDebug(0xBD);
2942   3                  ++context[port_id].error_count;
2943   3              }
2944   2              else {
2945   3                  if (timer1msCount == 200){
2946   4                  }
2947   3                              //RamDebug(0xED);
2948   3              }
2949   2          }
2950   1          else
2951   1          {
2952   2              context[port_id].error_count = 0;
2953   2          }
2954   1      }
2955          
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 49  

2956          /*
2957           * @desc   : anx_request_voltage_in_100mv, EC should call this to check the
2958           *           voltage while Type-C connector work as power sink.
2959           * @param  : port_id -> port id number (0 or 1)
2960           * @return :
2961           *           0 : Type-C connector work as power source.
2962           *           other : voltage, unit is 100mv.
2963           */
2964          u8 anx_request_voltage_in_100mv(u8 port_id)
2965          {
2966   1          u8 vol = 0;
2967   1              //anx_dead_battery_checking();
2968   1          if (self_charging_error == 1)
2969   1              return vol;
2970   1          if (context[port_id].anx_power_status == 0 || context[port_id].anx_power_role == 1)
2971   1              return 0;
2972   1      
2973   1          vol = (context[port_id].anx_voltage_in_100mv == 0) ? 50 : context[port_id].anx_voltage_in_100mv;
2974   1          #ifdef ANXDEBUG
                  //ucsi_debug("     +++++++++  voltage : %x, in 100mv   +++++++++\n", (u16)vol);
                  #endif
2977   1          return vol;
2978   1      }
2979          
2980          /*
2981           * @desc   : anx_request_current_in_50ma, EC should call this to check the
2982           *           current while Type-C connector work as power sink.
2983           * @param  : port_id -> port id number (0 or 1)
2984           * @return :
2985           *           0 : Type-C connector work as power source.
2986           *           other : current, unit is 50ma.
2987           */
2988          u8 anx_request_current_in_50ma(u8 port_id)
2989          {
2990   1          u8 cur = 0;
2991   1          //anx_dead_battery_checking();
2992   1          if (self_charging_error == 1)
2993   1              return cur;
2994   1          if (context[port_id].anx_power_status == 0 || context[port_id].anx_power_role == 1)
2995   1              return cur;
2996   1      
2997   1              cur = context[port_id].anx_current_in_50ma;
2998   1          #ifdef ANXDEBUG
                  //ucsi_debug("     +++++++++  current : %x, in 50ma   +++++++++\n", (u16)cur);
                  #endif
3001   1      
3002   1          return cur;
3003   1      }
3004          
3005          /*
3006           * @desc   : anx_connector_power_status, EC should call this to check whether
3007           *           the PD chip is power provider or consumer
3008           * @param  : port_id -> port id number (0 or 1)
3009           * @return :
3010           *           0 : power provider or PD standby
3011           *           other : power consumer
3012           */
3013          u8 anx_connector_power_status(u8 port_id)
3014          {
3015   1              //anx_dead_battery_checking();
3016   1          return (context[port_id].anx_power_role == 0);
3017   1      }
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 50  

3018          
3019          
3020          void anx_ucsi_command_received(void)
3021          {
3022   1          ucsi_received_command = 1;
3023   1      }
3024          
3025          /* LBT-540 */
3026          /*
3027           * @desc   : anx_ucsi_cc_status_event, EC may need add cc status event processing
3028           * @param  : port_id -> port id number (0 or 1)
3029           *                 cc_status      ->  cc status
3030           * @return : none
3031           */
3032          void anx_ucsi_cc_status_event(u8 port_id, u8 cc_status)
3033          {
3034   1          if (cc_status == 0)
3035   1              return;
3036   1      
3037   1          //customer add interrupt processing.
3038   1          //cc direction -> context[port_id].cc_orientation
3039   1          //  value :   CC1_CONNECTED or CC2_CONNECTED
3040   1      }
3041          
3042          /*
3043           * @desc   : anx_ucsi_pin_assignment_event, EC may add pin assignment event processing
3044           * @param  : port_id -> port id number (0 or 1)
3045           *                 pin_assignment      ->  pin assignment
3046                                               SELECT_PIN_ASSIGMENT_C, SELECT_PIN_ASSIGMENT_D
3047                                               SELECT_PIN_ASSIGMENT_E,  SELECT_PIN_ASSIGMENT_U
3048           * @return : none
3049           */
3050          void anx_ucsi_pin_assignment_event(u8 port_id, u8 pin_assignment)
3051          {
3052   1          //customer add interrupt processing.
3053   1          switch (pin_assignment) {
3054   2          case SELECT_PIN_ASSIGMENT_U:
3055   2              //default 2 line USB 3.1
3056   2              break;
3057   2          case SELECT_PIN_ASSIGMENT_C:
3058   2          case SELECT_PIN_ASSIGMENT_E:
3059   2              // 4 line DP
3060   2              break;
3061   2          case SELECT_PIN_ASSIGMENT_D:
3062   2              // 2 line DP, 2 line USB
3063   2              break;
3064   2          }
3065   1      }
3066          
3067          /*
3068           * @desc   : anx_ucsi_hpd_event, EC may add HPD event processing
3069           * @param  : port_id -> port id number (0 or 1)
3070           *                 hpd      -> 1:HPD high, 0 HPD low
3071           * @return : none
3072           */
3073          void anx_ucsi_hpd_event(u8 port_id, u8 hpd)
3074          {
3075   1          //customer may add event processing.
3076   1      }
3077          
3078          /*
3079           * @desc   : anx_ucsi_detach_event, EC may add detach event processing
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 51  

3080           * @param  : port_id -> port id number (0 or 1)
3081           * @return : none
3082           */
3083          void anx_ucsi_detach_event(u8 port_id)
3084          {
3085   1          // customer may add detach event processing, include reset MUX/HPD
3086   1      }
3087          
3088          /*
3089           * @desc   : anx_ucsi_renotify_OPM, EC may call it at reboot stage
3090           * @param  : port_id -> port id number (0 or 1)
3091           * @return : none
3092           */
3093          void anx_ucsi_renotify_OPM(u8 port_id)
3094          {
3095   1          // customer may add detach event processing, include reset MUX/HPD
3096   1          if (context[port_id].anx_power_status == 1) {
3097   2              #ifdef ANXDEBUG
                      ucsi_debug("re-notify OPM at reboot stage.\n");
                      #endif
3100   2              context[port_id].csc.csc.Connect = 1;
3101   2              context[port_id].csc.csc.ConnectorPartner = 1;
3102   2              context[port_id].csc.csc.BatteryChargingStatus = 1;
3103   2              if (context[port_id].ucsi_partner_rdo) {
3104   3                  #ifdef ReportNegotiatedPowerLevel
3105   3                  context[port_id].csc.csc.NegotiatedPowerLevel = 1;
3106   3                  #endif
3107   3                  #ifdef ReportSupportedProviderCap
3108   3                  context[port_id].csc.csc.SupportedProviderCap = 1;
3109   3                  #endif
3110   3              }
3111   2              ucsi_async_notify_raise_up(250);
3112   2          }
3113   1      }
3114          
3115          
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 52  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com026B (BEGIN)
0000         L?0620:
0000 7B01              MOV     R3,#01H
0002 7A0D              MOV     R2,#HIGH ppm2bios+010H
0004 79C2              MOV     R1,#LOW ppm2bios+010H
0006 900A1F            MOV     DPTR,#i
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B 75F00C            MOV     B,#0CH
000E A4                MUL     AB
000F F582              MOV     DPL,A
0011 85F083            MOV     DPH,B
0014 120000      E     LCALL   ?C?CLDOPTR
0017 FE                MOV     R6,A
0018 900DE2            MOV     DPTR,#SWAP_BYTE
001B F0                MOVX    @DPTR,A
001C 7A0D              MOV     R2,#HIGH ppm2bios+011H
001E 09                INC     R1
001F 75F00C            MOV     B,#0CH
0022 EF                MOV     A,R7
0023 A4                MUL     AB
0024 F582              MOV     DPL,A
0026 85F083            MOV     DPH,B
0029 120000      E     LCALL   ?C?CLDOPTR
002C FF                MOV     R7,A
002D 7A0D              MOV     R2,#HIGH ppm2bios+010H
002F 19                DEC     R1
0030 900A1F            MOV     DPTR,#i
0033 E0                MOVX    A,@DPTR
0034 FD                MOV     R5,A
0035 75F00C            MOV     B,#0CH
0038 A4                MUL     AB
0039 F582              MOV     DPL,A
003B 85F083            MOV     DPH,B
003E EF                MOV     A,R7
003F 120000      E     LCALL   ?C?CSTOPTR
0042 7A0D              MOV     R2,#HIGH ppm2bios+011H
0044 09                INC     R1
0045 75F00C            MOV     B,#0CH
0048 ED                MOV     A,R5
0049 A4                MUL     AB
004A F582              MOV     DPL,A
004C 85F083            MOV     DPH,B
004F EE                MOV     A,R6
0050 120000      E     LCALL   ?C?CSTOPTR
0053 7A0D              MOV     R2,#HIGH ppm2bios+012H
0055 09                INC     R1
0056 75F00C            MOV     B,#0CH
0059 ED                MOV     A,R5
005A A4                MUL     AB
005B F582              MOV     DPL,A
005D 85F083            MOV     DPH,B
0060 120000      E     LCALL   ?C?CLDOPTR
0063 FF                MOV     R7,A
0064 900DE2            MOV     DPTR,#SWAP_BYTE
0067 F0                MOVX    @DPTR,A
0068 7A0D              MOV     R2,#HIGH ppm2bios+015H
006A 79C7              MOV     R1,#LOW ppm2bios+015H
006C 75F00C            MOV     B,#0CH
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 53  

006F ED                MOV     A,R5
0070 A4                MUL     AB
0071 F582              MOV     DPL,A
0073 85F083            MOV     DPH,B
0076 120000      E     LCALL   ?C?CLDOPTR
0079 FE                MOV     R6,A
007A 7A0D              MOV     R2,#HIGH ppm2bios+012H
007C 79C4              MOV     R1,#LOW ppm2bios+012H
007E 75F00C            MOV     B,#0CH
0081 ED                MOV     A,R5
0082 A4                MUL     AB
0083 F582              MOV     DPL,A
0085 85F083            MOV     DPH,B
0088 EE                MOV     A,R6
0089 120000      E     LCALL   ?C?CSTOPTR
008C 7A0D              MOV     R2,#HIGH ppm2bios+015H
008E 79C7              MOV     R1,#LOW ppm2bios+015H
0090 75F00C            MOV     B,#0CH
0093 ED                MOV     A,R5
0094 A4                MUL     AB
0095 F582              MOV     DPL,A
0097 85F083            MOV     DPH,B
009A EF                MOV     A,R7
009B 120000      E     LCALL   ?C?CSTOPTR
009E 7A0D              MOV     R2,#HIGH ppm2bios+013H
00A0 79C5              MOV     R1,#LOW ppm2bios+013H
00A2 75F00C            MOV     B,#0CH
00A5 ED                MOV     A,R5
00A6 A4                MUL     AB
00A7 F582              MOV     DPL,A
00A9 85F083            MOV     DPH,B
00AC 120000      E     LCALL   ?C?CLDOPTR
00AF FF                MOV     R7,A
00B0 900DE2            MOV     DPTR,#SWAP_BYTE
00B3 F0                MOVX    @DPTR,A
00B4 7A0D              MOV     R2,#HIGH ppm2bios+014H
00B6 09                INC     R1
00B7 75F00C            MOV     B,#0CH
00BA ED                MOV     A,R5
00BB A4                MUL     AB
00BC F582              MOV     DPL,A
00BE 85F083            MOV     DPH,B
00C1 120000      E     LCALL   ?C?CLDOPTR
00C4 FE                MOV     R6,A
00C5 7A0D              MOV     R2,#HIGH ppm2bios+013H
00C7 19                DEC     R1
00C8 75F00C            MOV     B,#0CH
00CB ED                MOV     A,R5
00CC A4                MUL     AB
00CD F582              MOV     DPL,A
00CF 85F083            MOV     DPH,B
00D2 EE                MOV     A,R6
00D3 120000      E     LCALL   ?C?CSTOPTR
00D6 7A0D              MOV     R2,#HIGH ppm2bios+014H
00D8 09                INC     R1
00D9 75F00C            MOV     B,#0CH
00DC ED                MOV     A,R5
00DD A4                MUL     AB
00DE F582              MOV     DPL,A
00E0 85F083            MOV     DPH,B
00E3 EF                MOV     A,R7
00E4 120000      E     LCALL   ?C?CSTOPTR
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 54  

00E7 7A0D              MOV     R2,#HIGH ppm2bios+016H
00E9 79C8              MOV     R1,#LOW ppm2bios+016H
00EB 75F00C            MOV     B,#0CH
00EE ED                MOV     A,R5
00EF A4                MUL     AB
00F0 F582              MOV     DPL,A
00F2 85F083            MOV     DPH,B
00F5 120000      E     LCALL   ?C?CLDOPTR
00F8 FF                MOV     R7,A
00F9 900DE2            MOV     DPTR,#SWAP_BYTE
00FC F0                MOVX    @DPTR,A
00FD 7A0D              MOV     R2,#HIGH ppm2bios+017H
00FF 09                INC     R1
0100 75F00C            MOV     B,#0CH
0103 ED                MOV     A,R5
0104 A4                MUL     AB
0105 F582              MOV     DPL,A
0107 85F083            MOV     DPH,B
010A 120000      E     LCALL   ?C?CLDOPTR
010D FE                MOV     R6,A
010E 7A0D              MOV     R2,#HIGH ppm2bios+016H
0110 19                DEC     R1
0111 75F00C            MOV     B,#0CH
0114 ED                MOV     A,R5
0115 A4                MUL     AB
0116 F582              MOV     DPL,A
0118 85F083            MOV     DPH,B
011B EE                MOV     A,R6
011C 120000      E     LCALL   ?C?CSTOPTR
011F 7A0D              MOV     R2,#HIGH ppm2bios+017H
0121 09                INC     R1
0122 75F00C            MOV     B,#0CH
0125 ED                MOV     A,R5
0126 A4                MUL     AB
0127 F582              MOV     DPL,A
0129 85F083            MOV     DPH,B
012C EF                MOV     A,R7
012D 120000      E     LCALL   ?C?CSTOPTR
0130 7A0D              MOV     R2,#HIGH ppm2bios+018H
0132 09                INC     R1
0133 75F00C            MOV     B,#0CH
0136 ED                MOV     A,R5
0137 A4                MUL     AB
0138 F582              MOV     DPL,A
013A 85F083            MOV     DPH,B
013D 120000      E     LCALL   ?C?CLDOPTR
0140 FF                MOV     R7,A
0141 900DE2            MOV     DPTR,#SWAP_BYTE
0144 F0                MOVX    @DPTR,A
0145 7A0D              MOV     R2,#HIGH ppm2bios+01BH
0147 79CD              MOV     R1,#LOW ppm2bios+01BH
0149 75F00C            MOV     B,#0CH
014C ED                MOV     A,R5
014D A4                MUL     AB
014E F582              MOV     DPL,A
0150 85F083            MOV     DPH,B
0153 120000      E     LCALL   ?C?CLDOPTR
0156 FE                MOV     R6,A
0157 7A0D              MOV     R2,#HIGH ppm2bios+018H
0159 79CA              MOV     R1,#LOW ppm2bios+018H
015B 75F00C            MOV     B,#0CH
015E ED                MOV     A,R5
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 55  

015F A4                MUL     AB
0160 F582              MOV     DPL,A
0162 85F083            MOV     DPH,B
0165 EE                MOV     A,R6
0166 120000      E     LCALL   ?C?CSTOPTR
0169 7A0D              MOV     R2,#HIGH ppm2bios+01BH
016B 79CD              MOV     R1,#LOW ppm2bios+01BH
016D 75F00C            MOV     B,#0CH
0170 ED                MOV     A,R5
0171 A4                MUL     AB
0172 F582              MOV     DPL,A
0174 85F083            MOV     DPH,B
0177 EF                MOV     A,R7
0178 120000      E     LCALL   ?C?CSTOPTR
017B 7A0D              MOV     R2,#HIGH ppm2bios+019H
017D 79CB              MOV     R1,#LOW ppm2bios+019H
017F 75F00C            MOV     B,#0CH
0182 ED                MOV     A,R5
0183 A4                MUL     AB
0184 F582              MOV     DPL,A
0186 85F083            MOV     DPH,B
0189 120000      E     LCALL   ?C?CLDOPTR
018C FF                MOV     R7,A
018D 900DE2            MOV     DPTR,#SWAP_BYTE
0190 F0                MOVX    @DPTR,A
0191 7A0D              MOV     R2,#HIGH ppm2bios+01AH
0193 09                INC     R1
0194 75F00C            MOV     B,#0CH
0197 ED                MOV     A,R5
0198 A4                MUL     AB
0199 F582              MOV     DPL,A
019B 85F083            MOV     DPH,B
019E 120000      E     LCALL   ?C?CLDOPTR
01A1 7A0D              MOV     R2,#HIGH ppm2bios+019H
01A3         L?0621:
01A3 FE                MOV     R6,A
01A4 19                DEC     R1
01A5         L?0622:
01A5 ED                MOV     A,R5
01A6         L?0623:
01A6 75F00C            MOV     B,#0CH
01A9 A4                MUL     AB
01AA F582              MOV     DPL,A
01AC 85F083            MOV     DPH,B
01AF 22                RET     
01B0         L?0624:
01B0         L?0625:
01B0 7F04              MOV     R7,#04H
01B2         L?0626:
01B2 7E00              MOV     R6,#00H
01B4 7A0D              MOV     R2,#HIGH ppm2bios+04H
01B6 79B6              MOV     R1,#LOW ppm2bios+04H
01B8         L?0627:
01B8 7D00              MOV     R5,#00H
01BA 7B01              MOV     R3,#01H
01BC 020000      E     LJMP    ?C?MEMSET
01BF         L?0628:
01BF         L?0629:
01BF 900A78            MOV     DPTR,#port_index
01C2         L?0630:
01C2 E0                MOVX    A,@DPTR
01C3 FF                MOV     R7,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 56  

01C4         L?0631:
01C4 75F0BB            MOV     B,#0BBH
01C7 A4                MUL     AB
01C8 24A2              ADD     A,#LOW context+0A2H
01CA F582              MOV     DPL,A
01CC E4                CLR     A
01CD 340C              ADDC    A,#HIGH context+0A2H
01CF F583              MOV     DPH,A
01D1 22                RET     
01D2         L?0632:
01D2         L?0633:
01D2 900A78            MOV     DPTR,#port_index
01D5 E0                MOVX    A,@DPTR
01D6 FF                MOV     R7,A
01D7         L?0634:
01D7 75F0BB            MOV     B,#0BBH
01DA A4                MUL     AB
01DB 24A3              ADD     A,#LOW context+0A3H
01DD F582              MOV     DPL,A
01DF E4                CLR     A
01E0 340C              ADDC    A,#HIGH context+0A3H
01E2 F583              MOV     DPH,A
01E4 22                RET     
01E5         L?0635:
01E5 7E00              MOV     R6,#00H
01E7 7D00              MOV     R5,#00H
01E9 7B01              MOV     R3,#01H
01EB 7A0D              MOV     R2,#HIGH ppm2bios+010H
01ED 79C2              MOV     R1,#LOW ppm2bios+010H
01EF 120000      E     LCALL   ?C?MEMSET
01F2         L?0636:
01F2 900A78            MOV     DPTR,#port_index
01F5 E0                MOVX    A,@DPTR
01F6 75F0BB            MOV     B,#0BBH
01F9 A4                MUL     AB
01FA 22                RET     
01FB         L?0637:
01FB 75F0BB            MOV     B,#0BBH
01FE A4                MUL     AB
01FF 24B0              ADD     A,#LOW context+0B0H
0201 F582              MOV     DPL,A
0203 E4                CLR     A
0204 340C              ADDC    A,#HIGH context+0B0H
0206         L?0638:
0206 F583              MOV     DPH,A
0208 E4                CLR     A
0209         L?0639:
0209 F0                MOVX    @DPTR,A
020A EF                MOV     A,R7
020B 75F0BB            MOV     B,#0BBH
020E A4                MUL     AB
020F 22                RET     
0210         L?0640:
0210 900DBD            MOV     DPTR,#ppm2bios+0BH
0213 E0                MOVX    A,@DPTR
0214 547F              ANL     A,#07FH
0216 14                DEC     A
0217 900A78            MOV     DPTR,#port_index
021A F0                MOVX    @DPTR,A
021B         L?0641:
021B 75F0BB            MOV     B,#0BBH
021E A4                MUL     AB
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 57  

021F         L?0642:
021F 2400              ADD     A,#LOW context
0221 F582              MOV     DPL,A
0223 E4                CLR     A
0224 340C              ADDC    A,#HIGH context
0226 F583              MOV     DPH,A
0228 E0                MOVX    A,@DPTR
0229 22                RET     
022A         L?0643:
022A         L?0644:
022A 7B00              MOV     R3,#00H
022C 7A00              MOV     R2,#00H
022E 7900              MOV     R1,#00H
0230         L?0645:
0230 E4                CLR     A
0231 900000      E     MOV     DPTR,#?_send_pd_msg?BYTE+04H
0234 F0                MOVX    @DPTR,A
0235 A3                INC     DPTR
0236 F0                MOVX    @DPTR,A
0237 22                RET     
0238         L?0646:
0238 F0                MOVX    @DPTR,A
0239         L?0647:
0239 900A78            MOV     DPTR,#port_index
023C         L?0648:
023C E0                MOVX    A,@DPTR
023D FF                MOV     R7,A
023E 75F0BB            MOV     B,#0BBH
0241 A4                MUL     AB
0242 22                RET     
0243         L?0649:
0243         L?0650:
0243 900DBC            MOV     DPTR,#ppm2bios+0AH
0246 E0                MOVX    A,@DPTR
0247 FF                MOV     R7,A
0248 900DE2            MOV     DPTR,#SWAP_BYTE
024B F0                MOVX    @DPTR,A
024C 900DBD            MOV     DPTR,#ppm2bios+0BH
024F E0                MOVX    A,@DPTR
0250 900DBC            MOV     DPTR,#ppm2bios+0AH
0253 F0                MOVX    @DPTR,A
0254 A3                INC     DPTR
0255 EF                MOV     A,R7
0256 F0                MOVX    @DPTR,A
0257         L?0651:
0257 E0                MOVX    A,@DPTR
0258 547F              ANL     A,#07FH
025A D3                SETB    C
025B 9401              SUBB    A,#01H
025D 22                RET     
025E         L?0652:
025E EF                MOV     A,R7
025F 75F0BB            MOV     B,#0BBH
0262 A4                MUL     AB
0263         L?0653:
0263 24B1              ADD     A,#LOW context+0B1H
0265 F582              MOV     DPL,A
0267 E4                CLR     A
0268 340C              ADDC    A,#HIGH context+0B1H
026A F583              MOV     DPH,A
026C E0                MOVX    A,@DPTR
026D 22                RET     
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 58  

026E         L?0657:
026E         L?0658:
026E 900DB9            MOV     DPTR,#ppm2bios+07H
0271 E0                MOVX    A,@DPTR
0272 4480              ORL     A,#080H
0274 F0                MOVX    @DPTR,A
0275 22                RET     
0276         L?0659:
0276 900A7A            MOV     DPTR,#role
0279 F0                MOVX    @DPTR,A
027A         L?0660:
027A 900A7F            MOV     DPTR,#port_id
027D E0                MOVX    A,@DPTR
027E         L?0661:
027E 75F0BB            MOV     B,#0BBH
0281 A4                MUL     AB
0282         L?0662:
0282 2472              ADD     A,#LOW context+072H
0284 F582              MOV     DPL,A
0286 E4                CLR     A
0287 340C              ADDC    A,#HIGH context+072H
0289 F583              MOV     DPH,A
028B 22                RET     
028C         L?0663:
028C         L?0664:
028C F0                MOVX    @DPTR,A
028D         L?0665:
028D 900A77            MOV     DPTR,#result
0290 7401              MOV     A,#01H
0292 F0                MOVX    @DPTR,A
0293 22                RET     
0294         L?0666:
0294 EF                MOV     A,R7
0295 75F0BB            MOV     B,#0BBH
0298 A4                MUL     AB
0299         L?0667:
0299 24A0              ADD     A,#LOW context+0A0H
029B F582              MOV     DPL,A
029D E4                CLR     A
029E 340C              ADDC    A,#HIGH context+0A0H
02A0 F583              MOV     DPH,A
02A2 22                RET     
02A3         L?0668:
02A3 EF                MOV     A,R7
02A4 75F0BB            MOV     B,#0BBH
02A7 A4                MUL     AB
02A8         L?0669:
02A8 249F              ADD     A,#LOW context+09FH
02AA F582              MOV     DPL,A
02AC E4                CLR     A
02AD 340C              ADDC    A,#HIGH context+09FH
02AF F583              MOV     DPH,A
02B1 22                RET     
02B2         L?0670:
02B2         L?0671:
02B2 900DB9            MOV     DPTR,#ppm2bios+07H
02B5 E0                MOVX    A,@DPTR
02B6 4440              ORL     A,#040H
02B8 F0                MOVX    @DPTR,A
02B9 22                RET     
02BA         L?0672:
02BA E0                MOVX    A,@DPTR
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 59  

02BB FD                MOV     R5,A
02BC 75F0BB            MOV     B,#0BBH
02BF A4                MUL     AB
02C0 2446              ADD     A,#LOW context+046H
02C2 F582              MOV     DPL,A
02C4 E4                CLR     A
02C5 340C              ADDC    A,#HIGH context+046H
02C7 F583              MOV     DPH,A
02C9 E0                MOVX    A,@DPTR
02CA FE                MOV     R6,A
02CB ED                MOV     A,R5
02CC 75F0BB            MOV     B,#0BBH
02CF A4                MUL     AB
02D0 2445              ADD     A,#LOW context+045H
02D2 F582              MOV     DPL,A
02D4 E4                CLR     A
02D5 340C              ADDC    A,#HIGH context+045H
02D7 F583              MOV     DPH,A
02D9 E0                MOVX    A,@DPTR
02DA 900DC2            MOV     DPTR,#ppm2bios+010H
02DD         L?0673:
02DD FD                MOV     R5,A
02DE ED                MOV     A,R5
02DF FF                MOV     R7,A
02E0 EE                MOV     A,R6
02E1 F0                MOVX    @DPTR,A
02E2 A3                INC     DPTR
02E3 EF                MOV     A,R7
02E4 F0                MOVX    @DPTR,A
02E5 A3                INC     DPTR
02E6 22                RET     
02E7         L?0674:
02E7 900DBC            MOV     DPTR,#ppm2bios+0AH
02EA E0                MOVX    A,@DPTR
02EB FE                MOV     R6,A
02EC A3                INC     DPTR
02ED E0                MOVX    A,@DPTR
02EE FF                MOV     R7,A
02EF 547F              ANL     A,#07FH
02F1 14                DEC     A
02F2 900A78            MOV     DPTR,#port_index
02F5 F0                MOVX    @DPTR,A
02F6 75F0BB            MOV     B,#0BBH
02F9 A4                MUL     AB
02FA         L?0675:
02FA 247C              ADD     A,#LOW context+07CH
02FC F582              MOV     DPL,A
02FE E4                CLR     A
02FF 340C              ADDC    A,#HIGH context+07CH
0301 F583              MOV     DPH,A
0303 E0                MOVX    A,@DPTR
0304 22                RET     
0305         L?0676:
0305         L?0677:
0305 900DC2            MOV     DPTR,#ppm2bios+010H
0308         L?0678:
0308 E0                MOVX    A,@DPTR
0309 FF                MOV     R7,A
030A 900DE2            MOV     DPTR,#SWAP_BYTE
030D F0                MOVX    @DPTR,A
030E 22                RET     
030F         L?0679:
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 60  

030F 7404              MOV     A,#04H
0311         L?0680:
0311 900A01            MOV     DPTR,#ucsi_errno
0314         L?0681:
0314 F0                MOVX    @DPTR,A
0315 120000      R     LCALL   set_error_data
0318         L?0682:
0318 900A77            MOV     DPTR,#result
031B 7402              MOV     A,#02H
031D F0                MOVX    @DPTR,A
031E 22                RET     
031F         L?0683:
031F 900DBC            MOV     DPTR,#ppm2bios+0AH
0322 E0                MOVX    A,@DPTR
0323         L?0684:
0323 547F              ANL     A,#07FH
0325 75F0BB            MOV     B,#0BBH
0328 A4                MUL     AB
0329         L?0685:
0329 2453              ADD     A,#LOW context+053H
032B F582              MOV     DPL,A
032D E4                CLR     A
032E 340C              ADDC    A,#HIGH context+053H
0330 F583              MOV     DPH,A
0332 E0                MOVX    A,@DPTR
0333 22                RET     
0334         L?0686:
0334         L?0687:
0334 EF                MOV     A,R7
0335 75F0BB            MOV     B,#0BBH
0338 A4                MUL     AB
0339         L?0688:
0339 2401              ADD     A,#LOW context+01H
033B F582              MOV     DPL,A
033D E4                CLR     A
033E 340C              ADDC    A,#HIGH context+01H
0340 F583              MOV     DPH,A
0342 22                RET     
0343         L?0690:
0343         L?0691:
0343 120000      R     LCALL   ucsi_ppm_connector_change_detect
0346 900A77            MOV     DPTR,#result
0349 E0                MOVX    A,@DPTR
034A 22                RET     
034B         L?0692:
034B         L?0693:
034B 249E              ADD     A,#LOW context+09EH
034D F582              MOV     DPL,A
034F E4                CLR     A
0350 340C              ADDC    A,#HIGH context+09EH
0352 F583              MOV     DPH,A
0354 22                RET     
0355         L?0694:
0355         L?0695:
0355 900A7F            MOV     DPTR,#port_id
0358 E0                MOVX    A,@DPTR
0359 75F0BB            MOV     B,#0BBH
035C A4                MUL     AB
035D 24BA              ADD     A,#LOW context+0BAH
035F F582              MOV     DPL,A
0361 E4                CLR     A
0362 340C              ADDC    A,#HIGH context+0BAH
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 61  

0364 F583              MOV     DPH,A
0366 22                RET     
0367         L?0696:
0367 E0                MOVX    A,@DPTR
0368 FE                MOV     R6,A
0369         L?0697:
0369 C4                SWAP    A
036A 13                RRC     A
036B 13                RRC     A
036C 13                RRC     A
036D 5401              ANL     A,#01H
036F 22                RET     
0370         L?0698:
0370 900A01            MOV     DPTR,#ucsi_errno
0373 7401              MOV     A,#01H
0375         L?0699:
0375 F0                MOVX    @DPTR,A
0376 120000      R     LCALL   set_error_data
0379 7F02              MOV     R7,#02H
037B 22                RET     
037C         L?0700:
037C         L?0701:
037C 900DBC            MOV     DPTR,#ppm2bios+0AH
037F         L?0702:
037F E0                MOVX    A,@DPTR
0380         L?0703:
0380 547F              ANL     A,#07FH
0382 14                DEC     A
0383 900A78            MOV     DPTR,#port_index
0386 F0                MOVX    @DPTR,A
0387 22                RET     
0388         L?0704:
0388         L?0705:
0388 900A78            MOV     DPTR,#port_index
038B E0                MOVX    A,@DPTR
038C 900A7F            MOV     DPTR,#port_id
038F F0                MOVX    @DPTR,A
0390 22                RET     
0391         L?0706:
0391 75F0BB            MOV     B,#0BBH
0394 A4                MUL     AB
0395         L?0707:
0395 249D              ADD     A,#LOW context+09DH
0397 F582              MOV     DPL,A
0399 E4                CLR     A
039A 340C              ADDC    A,#HIGH context+09DH
039C F583              MOV     DPH,A
039E 22                RET     
039F         L?0709:
039F 75F0BB            MOV     B,#0BBH
03A2 A4                MUL     AB
03A3         L?0710:
03A3 2440              ADD     A,#LOW context+040H
03A5 F582              MOV     DPL,A
03A7 E4                CLR     A
03A8 340C              ADDC    A,#HIGH context+040H
03AA F583              MOV     DPH,A
03AC E0                MOVX    A,@DPTR
03AD 22                RET     
03AE         L?0711:
03AE         L?0712:
03AE 2475              ADD     A,#LOW context+075H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 62  

03B0 F582              MOV     DPL,A
03B2 E4                CLR     A
03B3 340C              ADDC    A,#HIGH context+075H
03B5 F583              MOV     DPH,A
03B7 22                RET     
03B8         L?0713:
03B8 7F10              MOV     R7,#010H
03BA 7A0D              MOV     R2,#HIGH ppm2bios+010H
03BC 79C2              MOV     R1,#LOW ppm2bios+010H
03BE         L?0714:
03BE 7E00              MOV     R6,#00H
03C0 7D00              MOV     R5,#00H
03C2 7B01              MOV     R3,#01H
03C4 020000      E     LJMP    ?C?MEMSET
03C7         L?0715:
03C7         L?0716:
03C7 900A24            MOV     DPTR,#wait_for_ack_back
03CA 74FA              MOV     A,#0FAH
03CC F0                MOVX    @DPTR,A
03CD 900A00            MOV     DPTR,#ucsi_ppm_state
03D0 7405              MOV     A,#05H
03D2 F0                MOVX    @DPTR,A
03D3 22                RET     
03D4         L?0717:
03D4 2433              ADD     A,#LOW context+033H
03D6 F582              MOV     DPL,A
03D8 E4                CLR     A
03D9 340C              ADDC    A,#HIGH context+033H
03DB F583              MOV     DPH,A
03DD E0                MOVX    A,@DPTR
03DE FD                MOV     R5,A
03DF A3                INC     DPTR
03E0 E0                MOVX    A,@DPTR
03E1 900DC2            MOV     DPTR,#ppm2bios+010H
03E4 CD                XCH     A,R5
03E5 F0                MOVX    @DPTR,A
03E6 A3                INC     DPTR
03E7 ED                MOV     A,R5
03E8 22                RET     
03E9         L?0718:
03E9 FF                MOV     R7,A
03EA 5401              ANL     A,#01H
03EC FE                MOV     R6,A
03ED E0                MOVX    A,@DPTR
03EE 54FE              ANL     A,#0FEH
03F0 4E                ORL     A,R6
03F1 FE                MOV     R6,A
03F2 F0                MOVX    @DPTR,A
03F3 EF                MOV     A,R7
03F4 5402              ANL     A,#02H
03F6 FF                MOV     R7,A
03F7 EE                MOV     A,R6
03F8 54FD              ANL     A,#0FDH
03FA 4F                ORL     A,R7
03FB FF                MOV     R7,A
03FC F0                MOVX    @DPTR,A
03FD 22                RET     
03FE         L?0719:
03FE         L?0720:
03FE 900DC3            MOV     DPTR,#ppm2bios+011H
0401 E0                MOVX    A,@DPTR
0402 900DC2            MOV     DPTR,#ppm2bios+010H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 63  

0405 F0                MOVX    @DPTR,A
0406 A3                INC     DPTR
0407 EF                MOV     A,R7
0408 F0                MOVX    @DPTR,A
0409 22                RET     
040A         L?0721:
040A 2435              ADD     A,#LOW context+035H
040C F582              MOV     DPL,A
040E E4                CLR     A
040F 340C              ADDC    A,#HIGH context+035H
0411 F583              MOV     DPH,A
0413 120000      E     LCALL   ?C?LLDXDATA
0416 900DC4            MOV     DPTR,#ppm2bios+012H
0419 020000      E     LJMP    ?C?LSTXDATA
041C         L?0722:
041C FE                MOV     R6,A
041D 5440              ANL     A,#040H
041F FD                MOV     R5,A
0420 EF                MOV     A,R7
0421 54BF              ANL     A,#0BFH
0423 4D                ORL     A,R5
0424 FF                MOV     R7,A
0425 F0                MOVX    @DPTR,A
0426 EE                MOV     A,R6
0427 5480              ANL     A,#080H
0429 FE                MOV     R6,A
042A EF                MOV     A,R7
042B 547F              ANL     A,#07FH
042D 4E                ORL     A,R6
042E 22                RET     
042F         L?0723:
042F         L?0724:
042F 247B              ADD     A,#LOW context+07BH
0431 F582              MOV     DPL,A
0433 E4                CLR     A
0434 340C              ADDC    A,#HIGH context+07BH
0436 F583              MOV     DPH,A
0438 E0                MOVX    A,@DPTR
0439 22                RET     
043A         L?0725:
043A         L?0726:
043A 2442              ADD     A,#LOW context+042H
043C F582              MOV     DPL,A
043E E4                CLR     A
043F 340C              ADDC    A,#HIGH context+042H
0441 F583              MOV     DPH,A
0443 E0                MOVX    A,@DPTR
0444 22                RET     
0445         L?0727:
0445 7440              MOV     A,#040H
0447         L?0728:
0447 900A01            MOV     DPTR,#ucsi_errno
044A F0                MOVX    @DPTR,A
044B 020000      R     LJMP    set_error_data
044E         L?0729:
044E 7D00              MOV     R5,#00H
0450 E0                MOVX    A,@DPTR
0451 75F0BB            MOV     B,#0BBH
0454 A4                MUL     AB
0455 24A2              ADD     A,#LOW context+0A2H
0457 F9                MOV     R1,A
0458 740C              MOV     A,#HIGH context+0A2H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 64  

045A 35F0              ADDC    A,B
045C FA                MOV     R2,A
045D 7B01              MOV     R3,#01H
045F 22                RET     
0460         L?0730:
0460 900DBE            MOV     DPTR,#ppm2bios+0CH
0463 E0                MOVX    A,@DPTR
0464 5403              ANL     A,#03H
0466 F9                MOV     R1,A
0467 2401              ADD     A,#01H
0469 FF                MOV     R7,A
046A E4                CLR     A
046B 33                RLC     A
046C FE                MOV     R6,A
046D EF                MOV     A,R7
046E 7802              MOV     R0,#02H
0470 22                RET     
0471         L?0731:
0471         L?0732:
0471 7F04              MOV     R7,#04H
0473         L?0733:
0473 FA                MOV     R2,A
0474 7E00              MOV     R6,#00H
0476 020000      E     LJMP    ?C?COPY
0479         L?0734:
0479 F0                MOVX    @DPTR,A
047A         L?0735:
047A 900A00            MOV     DPTR,#ucsi_ppm_state
047D 7401              MOV     A,#01H
047F F0                MOVX    @DPTR,A
0480 22                RET     
0481         L?0736:
0481 900A30            MOV     DPTR,#ne+01H
0484         L?0737:
0484 E0                MOVX    A,@DPTR
0485 C4                SWAP    A
0486 13                RRC     A
0487 13                RRC     A
0488 5403              ANL     A,#03H
048A 22                RET     
048B         L?0738:
048B         L?0739:
048B 900A1F            MOV     DPTR,#i
048E E0                MOVX    A,@DPTR
048F 04                INC     A
0490 F0                MOVX    @DPTR,A
0491 22                RET     
0492         L?0740:
0492 900DBF            MOV     DPTR,#ppm2bios+0DH
0495 E0                MOVX    A,@DPTR
0496 5403              ANL     A,#03H
0498 FF                MOV     R7,A
0499 900A1F            MOV     DPTR,#i
049C E0                MOVX    A,@DPTR
049D FE                MOV     R6,A
049E C3                CLR     C
049F 9F                SUBB    A,R7
04A0 22                RET     
04A1         L?0741:
04A1 35F0              ADDC    A,B
04A3 FA                MOV     R2,A
04A4 7B01              MOV     R3,#01H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 65  

04A6         L?0742:
04A6 78C2              MOV     R0,#LOW ppm2bios+010H
04A8 7C0D              MOV     R4,#HIGH ppm2bios+010H
04AA 7D01              MOV     R5,#01H
04AC 22                RET     
04AD         L?0744:
04AD 547F              ANL     A,#07FH
04AF 25E0              ADD     A,ACC
04B1 FF                MOV     R7,A
04B2 900DB6            MOV     DPTR,#ppm2bios+04H
04B5 E0                MOVX    A,@DPTR
04B6 5401              ANL     A,#01H
04B8 4F                ORL     A,R7
04B9 F0                MOVX    @DPTR,A
04BA 22                RET     
04BB         L?0745:
04BB         L?0746:
04BB 900A23            MOV     DPTR,#DataLength
04BE E0                MOVX    A,@DPTR
04BF 900DB7            MOV     DPTR,#ppm2bios+05H
04C2 F0                MOVX    @DPTR,A
04C3 22                RET     
04C4         L?0747:
04C4 5407              ANL     A,#07H
04C6 C4                SWAP    A
04C7 33                RLC     A
04C8 54E0              ANL     A,#0E0H
04CA FF                MOV     R7,A
04CB E0                MOVX    A,@DPTR
04CC 541F              ANL     A,#01FH
04CE 22                RET     
04CF         L?0748:
04CF 120000      E     LCALL   ?C?LLDXDATA
04D2 E4                CLR     A
04D3 FB                MOV     R3,A
04D4 FA                MOV     R2,A
04D5 F9                MOV     R1,A
04D6 F8                MOV     R0,A
04D7 C3                CLR     C
04D8 020000      E     LJMP    ?C?ULCMP
04DB         L?0749:
04DB         L?0750:
04DB 900A7A            MOV     DPTR,#role
04DE E0                MOVX    A,@DPTR
04DF 6402              XRL     A,#02H
04E1 22                RET     
04E2         L?0751:
04E2         L?0752:
04E2 900A7A            MOV     DPTR,#role
04E5 E0                MOVX    A,@DPTR
04E6 6401              XRL     A,#01H
04E8 22                RET     
04E9         L?0753:
04E9         L?0754:
04E9 E0                MOVX    A,@DPTR
04EA FF                MOV     R7,A
04EB 13                RRC     A
04EC 13                RRC     A
04ED 13                RRC     A
04EE 541F              ANL     A,#01FH
04F0 22                RET     
04F1         L?0755:
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 66  

04F1         L?0756:
04F1 24AF              ADD     A,#LOW context+0AFH
04F3 F582              MOV     DPL,A
04F5 E4                CLR     A
04F6 340C              ADDC    A,#HIGH context+0AFH
04F8 22                RET     
04F9         L?0757:
04F9         L?0758:
04F9 7A0D              MOV     R2,#HIGH ppm2bios+04H
04FB 79B6              MOV     R1,#LOW ppm2bios+04H
04FD 7B01              MOV     R3,#01H
04FF EA                MOV     A,R2
0500 22                RET     
0501         L?0759:
0501         L?0760:
0501 7402              MOV     A,#02H
0503 F0                MOVX    @DPTR,A
0504 900DBA            MOV     DPTR,#ppm2bios+08H
0507 E0                MOVX    A,@DPTR
0508 22                RET     
0509         L?0761:
0509         L?0762:
0509 EF                MOV     A,R7
050A F0                MOVX    @DPTR,A
050B 900A00            MOV     DPTR,#ucsi_ppm_state
050E 7402              MOV     A,#02H
0510 22                RET     
0511         L?0763:
0511 900DC2            MOV     DPTR,#ppm2bios+010H
0514 7407              MOV     A,#07H
0516 F0                MOVX    @DPTR,A
0517 A3                INC     DPTR
0518 7482              MOV     A,#082H
051A F0                MOVX    @DPTR,A
051B 22                RET     
051C         L?0764:
051C E4                CLR     A
051D         L?0765:
051D F0                MOVX    @DPTR,A
051E 900A77            MOV     DPTR,#result
0521 04                INC     A
0522 F0                MOVX    @DPTR,A
0523 22                RET     
0524         L?0766:
0524 900A2C            MOV     DPTR,#ucsi_command_process_delay
0527 F0                MOVX    @DPTR,A
0528 900A77            MOV     DPTR,#result
052B 7405              MOV     A,#05H
052D F0                MOVX    @DPTR,A
052E 22                RET     
052F         L?0768:
052F 900A78            MOV     DPTR,#port_index
0532 E0                MOVX    A,@DPTR
0533 FB                MOV     R3,A
0534 75F0BB            MOV     B,#0BBH
0537 A4                MUL     AB
0538 22                RET     
0539         L?0769:
0539         L?0770:
0539 900DC2            MOV     DPTR,#ppm2bios+010H
053C E4                CLR     A
053D F0                MOVX    @DPTR,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 67  

053E A3                INC     DPTR
053F 22                RET     
0540         L?0771:
0540 2471              ADD     A,#LOW context+071H
0542 F582              MOV     DPL,A
0544 E4                CLR     A
0545 340C              ADDC    A,#HIGH context+071H
0547 F583              MOV     DPH,A
0549 22                RET     
054A         L?0772:
054A         L?0773:
054A 900DC5            MOV     DPTR,#ppm2bios+013H
054D E0                MOVX    A,@DPTR
054E 54E7              ANL     A,#0E7H
0550 22                RET     
0551         L?0774:
0551 249C              ADD     A,#LOW context+09CH
0553 F582              MOV     DPL,A
0555 E4                CLR     A
0556 340C              ADDC    A,#HIGH context+09CH
0558 F583              MOV     DPH,A
055A 22                RET     
055B         L?0775:
055B 2473              ADD     A,#LOW context+073H
055D F582              MOV     DPL,A
055F E4                CLR     A
0560 340C              ADDC    A,#HIGH context+073H
0562 F583              MOV     DPH,A
0564 22                RET     
0565         L?0776:
0565         L?0777:
0565 900A7A            MOV     DPTR,#role
0568 7401              MOV     A,#01H
056A F0                MOVX    @DPTR,A
056B 22                RET     
056C         L?0778:
056C         L?0779:
056C 900A7A            MOV     DPTR,#role
056F 7402              MOV     A,#02H
0571 F0                MOVX    @DPTR,A
0572 22                RET     
0573         L?0780:
0573         L?0781:
0573 7800        E     MOV     R0,#LOW xUCSI_DS_CCI0
0575 7C00        E     MOV     R4,#HIGH xUCSI_DS_CCI0
0577 7D01              MOV     R5,#01H
0579 22                RET     
             ; FUNCTION Com026B (END)

             ; FUNCTION ucsi_ppm_connector_change_detect (BEGIN)
                                           ; SOURCE LINE # 260
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 263
0000 120000      R     LCALL   L?0736
0003 30E028            JNB     ACC.0,?C0002
0006         ?C0001:
                                           ; SOURCE LINE # 266
0006 E4                CLR     A
0007 900A1F            MOV     DPTR,#i
000A F0                MOVX    @DPTR,A
000B         ?C0003:
000B 900A1F            MOV     DPTR,#i
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 68  

000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 C3                CLR     C
0011 9401              SUBB    A,#01H
0013 5019              JNC     ?C0002
                                           ; SOURCE LINE # 267
0015 EF                MOV     A,R7
0016 120000      R     LCALL   L?0631
0019 E0                MOVX    A,@DPTR
001A FE                MOV     R6,A
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D 4E                ORL     A,R6
001E 6009              JZ      ?C0005
                                           ; SOURCE LINE # 268
0020 900A1F            MOV     DPTR,#i
0023 E0                MOVX    A,@DPTR
0024 04                INC     A
0025 120000      R     LCALL   L?0744
                                           ; SOURCE LINE # 269
0028 22                RET     
                                           ; SOURCE LINE # 270
0029         ?C0005:
0029 120000      R     LCALL   L?0738
002C 80DD              SJMP    ?C0003
                                           ; SOURCE LINE # 271
002E         ?C0002:
002E 22                RET     
             ; FUNCTION ucsi_ppm_connector_change_detect (END)

             ; FUNCTION set_notification_enable_ack (BEGIN)
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 282
0000 120000      R     LCALL   L?0624
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 286
0003 120000      R     LCALL   L?0690
0006 900DB9            MOV     DPTR,#ppm2bios+07H
0009 B40106            CJNE    A,#01H,?C0007
                                           ; SOURCE LINE # 287
000C E0                MOVX    A,@DPTR
000D 54BF              ANL     A,#0BFH
000F F0                MOVX    @DPTR,A
0010 8004              SJMP    ?C0008
0012         ?C0007:
                                           ; SOURCE LINE # 289
0012 E0                MOVX    A,@DPTR
0013 4440              ORL     A,#040H
0015 F0                MOVX    @DPTR,A
0016         ?C0008:
                                           ; SOURCE LINE # 291
0016 120000      R     LCALL   L?0657
                                           ; SOURCE LINE # 292
0019 22                RET     
             ; FUNCTION set_notification_enable_ack (END)

             ; FUNCTION cancel_ack (BEGIN)
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 303
0000 120000      R     LCALL   L?0624
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 69  

                                           ; SOURCE LINE # 305
0003 120000      R     LCALL   ucsi_ppm_connector_change_detect
                                           ; SOURCE LINE # 307
0006 120000      R     LCALL   L?0657
                                           ; SOURCE LINE # 309
0009 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 310
000B         ?C0010:
000B 22                RET     
             ; FUNCTION cancel_ack (END)

             ; FUNCTION busy_ack (BEGIN)
                                           ; SOURCE LINE # 318
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 320
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 321
0003 900DB9            MOV     DPTR,#ppm2bios+07H
0006 E0                MOVX    A,@DPTR
0007 4410              ORL     A,#010H
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 322
000A 4480              ORL     A,#080H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 323
000D 22                RET     
             ; FUNCTION busy_ack (END)

             ; FUNCTION error_ack (BEGIN)
                                           ; SOURCE LINE # 331
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 334
0003 120000      R     LCALL   L?0670
                                           ; SOURCE LINE # 335
0006 4480              ORL     A,#080H
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 336
0009 22                RET     
             ; FUNCTION error_ack (END)

             ; FUNCTION connector_reset_ack (BEGIN)
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 347
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 351
0003 120000      R     LCALL   L?0690
0006 6401              XRL     A,#01H
0008 6003              JZ      ?C0013
                                           ; SOURCE LINE # 352
000A 120000      R     LCALL   L?0670
000D         ?C0013:
                                           ; SOURCE LINE # 354
000D 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 355
0010 22                RET     
             ; FUNCTION connector_reset_ack (END)

             ; FUNCTION ack_cc_ci_ack (BEGIN)
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 70  

                                           ; SOURCE LINE # 364
                                           ; SOURCE LINE # 365
                                           ; SOURCE LINE # 366
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 368
0003 900DB9            MOV     DPTR,#ppm2bios+07H
0006 E0                MOVX    A,@DPTR
0007 4420              ORL     A,#020H
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 369
000A 22                RET     
             ; FUNCTION ack_cc_ci_ack (END)

             ; FUNCTION reset_ack (BEGIN)
                                           ; SOURCE LINE # 378
                                           ; SOURCE LINE # 379
                                           ; SOURCE LINE # 380
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 382
0003 900A77            MOV     DPTR,#result
0006 E0                MOVX    A,@DPTR
0007 B40107            CJNE    A,#01H,?C0017
                                           ; SOURCE LINE # 383
000A 900DB9            MOV     DPTR,#ppm2bios+07H
000D E0                MOVX    A,@DPTR
000E 4408              ORL     A,#08H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 384
0011         ?C0017:
0011 22                RET     
             ; FUNCTION reset_ack (END)

             ; FUNCTION get_capability_ack (BEGIN)
                                           ; SOURCE LINE # 393
                                           ; SOURCE LINE # 394
                                           ; SOURCE LINE # 395
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 397
                                           ; SOURCE LINE # 399
0003 120000      R     LCALL   L?0691
0006 B40108            CJNE    A,#01H,?C0018
                                           ; SOURCE LINE # 400
0009 900DB7            MOV     DPTR,#ppm2bios+05H
000C 7410              MOV     A,#010H
000E F0                MOVX    @DPTR,A
000F 8003              SJMP    ?C0019
0011         ?C0018:
                                           ; SOURCE LINE # 402
0011 120000      R     LCALL   L?0671
0014         ?C0019:
                                           ; SOURCE LINE # 404
0014 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 405
0017 22                RET     
             ; FUNCTION get_capability_ack (END)

             ; FUNCTION get_connector_capability_ack (BEGIN)
                                           ; SOURCE LINE # 414
                                           ; SOURCE LINE # 415
                                           ; SOURCE LINE # 416
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 418
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 71  

                                           ; SOURCE LINE # 420
0003 120000      R     LCALL   L?0691
0006 B40108            CJNE    A,#01H,?C0021
                                           ; SOURCE LINE # 421
0009 900DB7            MOV     DPTR,#ppm2bios+05H
000C 7402              MOV     A,#02H
000E F0                MOVX    @DPTR,A
000F 8003              SJMP    ?C0022
0011         ?C0021:
                                           ; SOURCE LINE # 423
0011 120000      R     LCALL   L?0671
0014         ?C0022:
                                           ; SOURCE LINE # 425
0014 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 426
0017 22                RET     
             ; FUNCTION get_connector_capability_ack (END)

             ; FUNCTION set_uor_ack (BEGIN)
                                           ; SOURCE LINE # 435
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 437
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 441
0003 900A77            MOV     DPTR,#result
0006 E0                MOVX    A,@DPTR
0007 B40203            CJNE    A,#02H,?C0024
                                           ; SOURCE LINE # 442
000A 120000      R     LCALL   L?0671
000D         ?C0024:
                                           ; SOURCE LINE # 444
000D 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 445
0010 22                RET     
             ; FUNCTION set_uor_ack (END)

             ; FUNCTION set_pdr_ack (BEGIN)
                                           ; SOURCE LINE # 454
                                           ; SOURCE LINE # 455
                                           ; SOURCE LINE # 456
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 460
0003 900A77            MOV     DPTR,#result
0006 E0                MOVX    A,@DPTR
0007 B40203            CJNE    A,#02H,?C0026
                                           ; SOURCE LINE # 461
000A 120000      R     LCALL   L?0671
000D         ?C0026:
                                           ; SOURCE LINE # 463
000D 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 464
0010 22                RET     
             ; FUNCTION set_pdr_ack (END)

             ; FUNCTION get_connector_status_ack (BEGIN)
                                           ; SOURCE LINE # 473
                                           ; SOURCE LINE # 474
                                           ; SOURCE LINE # 475
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 479
0003 900A77            MOV     DPTR,#result
0006 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 72  

0007 B40108            CJNE    A,#01H,?C0028
                                           ; SOURCE LINE # 480
000A 900DB7            MOV     DPTR,#ppm2bios+05H
000D 7409              MOV     A,#09H
000F F0                MOVX    @DPTR,A
0010 8003              SJMP    ?C0029
0012         ?C0028:
                                           ; SOURCE LINE # 482
0012 120000      R     LCALL   L?0671
0015         ?C0029:
                                           ; SOURCE LINE # 484
0015 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 485
0018 22                RET     
             ; FUNCTION get_connector_status_ack (END)

             ; FUNCTION get_error_status_ack (BEGIN)
                                           ; SOURCE LINE # 494
                                           ; SOURCE LINE # 495
                                           ; SOURCE LINE # 496
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 500
0003 900A77            MOV     DPTR,#result
0006 E0                MOVX    A,@DPTR
0007 B40108            CJNE    A,#01H,?C0031
                                           ; SOURCE LINE # 502
000A 900DB7            MOV     DPTR,#ppm2bios+05H
000D 7410              MOV     A,#010H
000F F0                MOVX    @DPTR,A
0010 8003              SJMP    ?C0032
0012         ?C0031:
                                           ; SOURCE LINE # 504
0012 120000      R     LCALL   L?0671
0015         ?C0032:
                                           ; SOURCE LINE # 506
0015 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 507
0018 22                RET     
             ; FUNCTION get_error_status_ack (END)

             ; FUNCTION get_cable_property_ack (BEGIN)
                                           ; SOURCE LINE # 517
                                           ; SOURCE LINE # 518
                                           ; SOURCE LINE # 519
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 521
                                           ; SOURCE LINE # 523
0003 120000      R     LCALL   L?0691
0006 B40108            CJNE    A,#01H,?C0034
                                           ; SOURCE LINE # 525
0009 900DB7            MOV     DPTR,#ppm2bios+05H
000C 7405              MOV     A,#05H
000E F0                MOVX    @DPTR,A
000F 8003              SJMP    ?C0035
0011         ?C0034:
                                           ; SOURCE LINE # 527
0011 120000      R     LCALL   L?0671
0014         ?C0035:
                                           ; SOURCE LINE # 529
0014 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 530
0017 22                RET     
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 73  

             ; FUNCTION get_cable_property_ack (END)

             ; FUNCTION get_pdos_ack (BEGIN)
                                           ; SOURCE LINE # 542
                                           ; SOURCE LINE # 543
                                           ; SOURCE LINE # 544
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 548
0003 900A77            MOV     DPTR,#result
0006 E0                MOVX    A,@DPTR
0007 B40105            CJNE    A,#01H,?C0037
                                           ; SOURCE LINE # 549
000A 120000      R     LCALL   L?0745
                                           ; SOURCE LINE # 550
000D 8003              SJMP    ?C0038
000F         ?C0037:
                                           ; SOURCE LINE # 551
000F 120000      R     LCALL   L?0671
                                           ; SOURCE LINE # 552
0012         ?C0038:
                                           ; SOURCE LINE # 554
0012 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 555
0015 22                RET     
             ; FUNCTION get_pdos_ack (END)

             ; FUNCTION set_new_cam_ack (BEGIN)
                                           ; SOURCE LINE # 566
                                           ; SOURCE LINE # 567
                                           ; SOURCE LINE # 568
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 570
                                           ; SOURCE LINE # 572
0003 120000      R     LCALL   L?0691
0006 B40107            CJNE    A,#01H,?C0040
                                           ; SOURCE LINE # 573
0009 E4                CLR     A
000A 900DB7            MOV     DPTR,#ppm2bios+05H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 574
000E 8003              SJMP    ?C0041
0010         ?C0040:
                                           ; SOURCE LINE # 575
0010 120000      R     LCALL   L?0671
                                           ; SOURCE LINE # 576
0013         ?C0041:
                                           ; SOURCE LINE # 578
0013 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 579
0016 22                RET     
             ; FUNCTION set_new_cam_ack (END)

             ; FUNCTION get_current_cam_ack (BEGIN)
                                           ; SOURCE LINE # 590
                                           ; SOURCE LINE # 591
                                           ; SOURCE LINE # 592
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 594
                                           ; SOURCE LINE # 596
0003 120000      R     LCALL   L?0691
0006 B40108            CJNE    A,#01H,?C0043
                                           ; SOURCE LINE # 597
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 74  

0009 900DB7            MOV     DPTR,#ppm2bios+05H
000C 7401              MOV     A,#01H
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 598
000F 8003              SJMP    ?C0044
0011         ?C0043:
                                           ; SOURCE LINE # 599
0011 120000      R     LCALL   L?0671
                                           ; SOURCE LINE # 600
0014         ?C0044:
                                           ; SOURCE LINE # 602
0014 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 603
0017 22                RET     
             ; FUNCTION get_current_cam_ack (END)

             ; FUNCTION get_cam_supported_ack (BEGIN)
                                           ; SOURCE LINE # 615
                                           ; SOURCE LINE # 616
                                           ; SOURCE LINE # 617
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 619
                                           ; SOURCE LINE # 621
0003 120000      R     LCALL   L?0691
0006 B40105            CJNE    A,#01H,?C0046
                                           ; SOURCE LINE # 622
0009 120000      R     LCALL   L?0745
                                           ; SOURCE LINE # 623
000C 8003              SJMP    ?C0047
000E         ?C0046:
                                           ; SOURCE LINE # 624
000E 120000      R     LCALL   L?0671
                                           ; SOURCE LINE # 625
0011         ?C0047:
                                           ; SOURCE LINE # 627
0011 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 628
0014 22                RET     
             ; FUNCTION get_cam_supported_ack (END)

             ; FUNCTION get_alt_modes_ack (BEGIN)
                                           ; SOURCE LINE # 640
                                           ; SOURCE LINE # 641
                                           ; SOURCE LINE # 642
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 644
                                           ; SOURCE LINE # 646
0003 120000      R     LCALL   L?0691
0006 B40105            CJNE    A,#01H,?C0049
                                           ; SOURCE LINE # 647
0009 120000      R     LCALL   L?0746
                                           ; SOURCE LINE # 648
000C 8003              SJMP    ?C0050
000E         ?C0049:
                                           ; SOURCE LINE # 649
000E 120000      R     LCALL   L?0671
                                           ; SOURCE LINE # 650
0011         ?C0050:
                                           ; SOURCE LINE # 652
0011 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 653
0014 22                RET     
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 75  

             ; FUNCTION get_alt_modes_ack (END)

             ; FUNCTION L?0654 (BEGIN)
0000         L?0655:
0000 7402              MOV     A,#02H
0002         L?0656:
0002 900A01            MOV     DPTR,#ucsi_errno
0005 F0                MOVX    @DPTR,A
             ; FUNCTION set_error_data (BEGIN)
                                           ; SOURCE LINE # 665
                                           ; SOURCE LINE # 666
                                           ; SOURCE LINE # 668
0006 7E00              MOV     R6,#00H
0008 7F10              MOV     R7,#010H
000A 7A0A              MOV     R2,#HIGH esd
000C 7906              MOV     R1,#LOW esd
000E 120000      R     LCALL   L?0627
                                           ; SOURCE LINE # 669
0011 900A01            MOV     DPTR,#ucsi_errno
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 900A06            MOV     DPTR,#esd
0019 E4                CLR     A
001A F0                MOVX    @DPTR,A
001B A3                INC     DPTR
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 671
001E 020000      R     LJMP    error_ack
             ; FUNCTION set_error_data (END)

             ; FUNCTION unsupport_command_process (BEGIN)
                                           ; SOURCE LINE # 680
                                           ; SOURCE LINE # 681
                                           ; SOURCE LINE # 682
0000 7401              MOV     A,#01H
                                           ; SOURCE LINE # 683
0002 120000      R     LCALL   L?0656
                                           ; SOURCE LINE # 684
0005 900DB9            MOV     DPTR,#ppm2bios+07H
0008 E0                MOVX    A,@DPTR
0009 4402              ORL     A,#02H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 685
000C 4480              ORL     A,#080H
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 688
000F 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 689
0011         ?C0053:
0011 22                RET     
             ; FUNCTION unsupport_command_process (END)

             ; FUNCTION ppm_get_alt_modes (BEGIN)
                                           ; SOURCE LINE # 729
                                           ; SOURCE LINE # 730
                                           ; SOURCE LINE # 735
0000 900DBD            MOV     DPTR,#ppm2bios+0BH
0003 120000      R     LCALL   L?0651
0006 4006              JC      ?C0054
                                           ; SOURCE LINE # 736
                                           ; SOURCE LINE # 737
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 76  

0008 120000      R     LCALL   L?0654
                                           ; SOURCE LINE # 738
000B 7F02              MOV     R7,#02H
000D 22                RET     
                                           ; SOURCE LINE # 739
000E         ?C0054:
                                           ; SOURCE LINE # 741
000E 900DBD            MOV     DPTR,#ppm2bios+0BH
0011 120000      R     LCALL   L?0702
                                           ; SOURCE LINE # 748
0014 900BCD            MOV     DPTR,#pup+0DH
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 900DBE            MOV     DPTR,#ppm2bios+0CH
001C E0                MOVX    A,@DPTR
001D FE                MOV     R6,A
001E D3                SETB    C
001F 9F                SUBB    A,R7
0020 4003              JC      ?C0056
                                           ; SOURCE LINE # 751
                                           ; SOURCE LINE # 752
0022 020000      R     LJMP    ?C0556
                                           ; SOURCE LINE # 753
0025         ?C0056:
                                           ; SOURCE LINE # 755
0025 C3                CLR     C
0026 EF                MOV     A,R7
0027 9E                SUBB    A,R6
0028 FF                MOV     R7,A
0029 900DBF            MOV     DPTR,#ppm2bios+0DH
002C E0                MOVX    A,@DPTR
002D FE                MOV     R6,A
002E 5403              ANL     A,#03H
0030 D3                SETB    C
0031 9F                SUBB    A,R7
0032 4015              JC      ?C0058
                                           ; SOURCE LINE # 756
0034 900DBE            MOV     DPTR,#ppm2bios+0CH
0037 E0                MOVX    A,@DPTR
0038 FF                MOV     R7,A
0039 900BCD            MOV     DPTR,#pup+0DH
003C E0                MOVX    A,@DPTR
003D 9F                SUBB    A,R7
003E 5403              ANL     A,#03H
0040 FF                MOV     R7,A
0041 EE                MOV     A,R6
0042 54FC              ANL     A,#0FCH
0044 4F                ORL     A,R7
0045 900DBF            MOV     DPTR,#ppm2bios+0DH
0048 F0                MOVX    @DPTR,A
0049         ?C0058:
                                           ; SOURCE LINE # 759
0049 900DBC            MOV     DPTR,#ppm2bios+0AH
004C E0                MOVX    A,@DPTR
004D 5407              ANL     A,#07H
004F 14                DEC     A
0050 6067              JZ      ?C0076
0052 04                INC     A
0053 6003              JZ      $ + 5H
0055 020000      R     LJMP    ?C0113
                                           ; SOURCE LINE # 760
0058         ?C0060:
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 77  

                                           ; SOURCE LINE # 761
0058 E4                CLR     A
0059 900A1F            MOV     DPTR,#i
005C F0                MOVX    @DPTR,A
005D         ?C0061:
005D 120000      R     LCALL   L?0740
0060 4003              JC      $ + 5H
0062 020000      R     LJMP    ?C0555
                                           ; SOURCE LINE # 762
0065 900DBE            MOV     DPTR,#ppm2bios+0CH
0068 E0                MOVX    A,@DPTR
0069 FF                MOV     R7,A
006A EE                MOV     A,R6
006B 2F                ADD     A,R7
006C 75F00C            MOV     B,#0CH
006F A4                MUL     AB
0070 24C0              ADD     A,#LOW pup
0072 F9                MOV     R1,A
0073 740B              MOV     A,#HIGH pup
0075 35F0              ADDC    A,B
0077 FA                MOV     R2,A
0078 7B01              MOV     R3,#01H
007A EA                MOV     A,R2
007B C0E0              PUSH    ACC
007D E9                MOV     A,R1
007E C0E0              PUSH    ACC
0080 900A1F            MOV     DPTR,#i
0083 E0                MOVX    A,@DPTR
0084 75F00C            MOV     B,#0CH
0087 A4                MUL     AB
0088 24C2              ADD     A,#LOW ppm2bios+010H
008A F9                MOV     R1,A
008B 740D              MOV     A,#HIGH ppm2bios+010H
008D 35F0              ADDC    A,B
008F C8                XCH     A,R0
0090 E9                MOV     A,R1
0091 C8                XCH     A,R0
0092 FC                MOV     R4,A
0093 7D01              MOV     R5,#01H
0095 D0E0              POP     ACC
0097 F9                MOV     R1,A
0098 D0E0              POP     ACC
009A FA                MOV     R2,A
009B 7E00              MOV     R6,#00H
009D 7F0C              MOV     R7,#0CH
009F 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 764
                                           ; SOURCE LINE # 765
                                           ; SOURCE LINE # 766
                                           ; SOURCE LINE # 767
00A2 120000      R     LCALL   L?0620
00A5 EE                MOV     A,R6
00A6 120000      E     LCALL   ?C?CSTOPTR
00A9 7A0D              MOV     R2,#HIGH ppm2bios+01AH
00AB 09                INC     R1
00AC 120000      R     LCALL   L?0622
00AF EF                MOV     A,R7
00B0 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 769
00B3 120000      R     LCALL   L?0738
00B6 020000      R     LJMP    ?C0061
                                           ; SOURCE LINE # 772
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 78  

00B9         ?C0076:
                                           ; SOURCE LINE # 773
00B9 E4                CLR     A
00BA 900A23            MOV     DPTR,#DataLength
                                           ; SOURCE LINE # 774
00BD 120000      R     LCALL   L?0646
00C0 120000      R     LCALL   L?0685
00C3 24F8              ADD     A,#0F8H
00C5 606B              JZ      ?C0090
00C7 2404              ADD     A,#04H
00C9 6003              JZ      $ + 5H
00CB 020000      R     LJMP    ?C0112
                                           ; SOURCE LINE # 775
00CE         ?C0078:
                                           ; SOURCE LINE # 776
00CE 900BCC            MOV     DPTR,#pup+0CH
00D1 7401              MOV     A,#01H
                                           ; SOURCE LINE # 777
00D3 120000      R     LCALL   L?0639
00D6 120000      R     LCALL   L?0653
00D9 900A78            MOV     DPTR,#port_index
00DC 30E118            JNB     ACC.1,?C0079
                                           ; SOURCE LINE # 778
00DF 120000      R     LCALL   L?0648
00E2 120000      R     LCALL   L?0717
                                           ; SOURCE LINE # 779
00E5 120000      R     LCALL   L?0639
00E8 120000      R     LCALL   L?0721
                                           ; SOURCE LINE # 781
00EB 120000      R     LCALL   L?0676
00EE 900DC3            MOV     DPTR,#ppm2bios+011H
00F1 E0                MOVX    A,@DPTR
00F2 900DC2            MOV     DPTR,#ppm2bios+010H
                                           ; SOURCE LINE # 784
00F5 802E              SJMP    ?C0552
00F7         ?C0079:
                                           ; SOURCE LINE # 785
                                           ; SOURCE LINE # 786
00F7 120000      R     LCALL   L?0672
00FA 120000      E     LCALL   ?C?LSTKXDATA
00FD 00                DB      00H
00FE 00                DB      00H
00FF 04                DB      04H
0100 05                DB      05H
                                           ; SOURCE LINE # 788
0101 120000      R     LCALL   L?0676
0104 120000      R     LCALL   L?0719
                                           ; SOURCE LINE # 789
0107 A3                INC     DPTR
0108 120000      R     LCALL   L?0678
010B 900DC7            MOV     DPTR,#ppm2bios+015H
010E E0                MOVX    A,@DPTR
010F 900DC4            MOV     DPTR,#ppm2bios+012H
0112 F0                MOVX    @DPTR,A
0113 900DC7            MOV     DPTR,#ppm2bios+015H
0116 EF                MOV     A,R7
0117 F0                MOVX    @DPTR,A
0118 900DC5            MOV     DPTR,#ppm2bios+013H
011B 120000      R     LCALL   L?0678
011E 900DC6            MOV     DPTR,#ppm2bios+014H
0121 E0                MOVX    A,@DPTR
0122 900DC5            MOV     DPTR,#ppm2bios+013H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 79  

0125         ?C0552:
0125 F0                MOVX    @DPTR,A
0126 A3                INC     DPTR
0127 EF                MOV     A,R7
0128 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 791
0129         ?C0083:
                                           ; SOURCE LINE # 792
0129         ?C0555:
0129 900A23            MOV     DPTR,#DataLength
012C 7406              MOV     A,#06H
012E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 793
012F 020000      R     LJMP    out
                                           ; SOURCE LINE # 794
0132         ?C0090:
                                           ; SOURCE LINE # 795
0132 900BCC            MOV     DPTR,#pup+0CH
0135 7401              MOV     A,#01H
0137 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 796
0138 120000      R     LCALL   L?0636
013B 120000      R     LCALL   L?0653
013E 900A78            MOV     DPTR,#port_index
0141 20E103            JB      ACC.1,$ + 6H
0144 020000      R     LJMP    ?C0091
                                           ; SOURCE LINE # 797
0147 120000      R     LCALL   L?0648
014A 120000      R     LCALL   L?0717
                                           ; SOURCE LINE # 798
014D 120000      R     LCALL   L?0639
0150 120000      R     LCALL   L?0721
                                           ; SOURCE LINE # 799
0153 120000      R     LCALL   L?0647
0156 2439              ADD     A,#LOW context+039H
0158 F582              MOV     DPL,A
015A E4                CLR     A
015B 340C              ADDC    A,#HIGH context+039H
015D F583              MOV     DPH,A
015F E0                MOVX    A,@DPTR
0160 FD                MOV     R5,A
0161 A3                INC     DPTR
0162 E0                MOVX    A,@DPTR
0163 900DC8            MOV     DPTR,#ppm2bios+016H
0166 CD                XCH     A,R5
0167 F0                MOVX    @DPTR,A
0168 A3                INC     DPTR
0169 ED                MOV     A,R5
                                           ; SOURCE LINE # 800
016A 120000      R     LCALL   L?0639
016D 243B              ADD     A,#LOW context+03BH
016F F582              MOV     DPL,A
0171 E4                CLR     A
0172 340C              ADDC    A,#HIGH context+03BH
0174 F583              MOV     DPH,A
0176 120000      E     LCALL   ?C?LLDXDATA
0179 900DCA            MOV     DPTR,#ppm2bios+018H
017C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 802
017F 7B01              MOV     R3,#01H
0181 7A0D              MOV     R2,#HIGH ppm2bios+010H
0183 79C2              MOV     R1,#LOW ppm2bios+010H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 80  

0185 900A1F            MOV     DPTR,#i
0188 E0                MOVX    A,@DPTR
0189 FF                MOV     R7,A
018A 120000      R     LCALL   L?0623
018D 120000      E     LCALL   ?C?CLDOPTR
0190 FE                MOV     R6,A
0191 900DE2            MOV     DPTR,#SWAP_BYTE
0194 F0                MOVX    @DPTR,A
0195 7A0D              MOV     R2,#HIGH ppm2bios+011H
0197 09                INC     R1
0198 EF                MOV     A,R7
0199 120000      R     LCALL   L?0623
019C 120000      E     LCALL   ?C?CLDOPTR
019F FF                MOV     R7,A
01A0 7A0D              MOV     R2,#HIGH ppm2bios+010H
01A2 19                DEC     R1
01A3 900A1F            MOV     DPTR,#i
01A6 E0                MOVX    A,@DPTR
01A7 FD                MOV     R5,A
01A8 120000      R     LCALL   L?0623
01AB EF                MOV     A,R7
01AC 120000      E     LCALL   ?C?CSTOPTR
01AF 7A0D              MOV     R2,#HIGH ppm2bios+011H
01B1 09                INC     R1
01B2 120000      R     LCALL   L?0622
01B5 EE                MOV     A,R6
01B6 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 804
01B9 7A0D              MOV     R2,#HIGH ppm2bios+016H
01BB 79C8              MOV     R1,#LOW ppm2bios+016H
01BD 120000      R     LCALL   L?0622
01C0 120000      E     LCALL   ?C?CLDOPTR
01C3 FF                MOV     R7,A
01C4 900DE2            MOV     DPTR,#SWAP_BYTE
01C7 F0                MOVX    @DPTR,A
01C8 7A0D              MOV     R2,#HIGH ppm2bios+017H
01CA 09                INC     R1
01CB 120000      R     LCALL   L?0622
01CE 120000      E     LCALL   ?C?CLDOPTR
01D1 7A0D              MOV     R2,#HIGH ppm2bios+016H
01D3 120000      R     LCALL   L?0621
01D6 EE                MOV     A,R6
01D7 120000      E     LCALL   ?C?CSTOPTR
01DA 7A0D              MOV     R2,#HIGH ppm2bios+017H
                                           ; SOURCE LINE # 807
01DC 020000      R     LJMP    ?C0553
01DF         ?C0091:
                                           ; SOURCE LINE # 808
                                           ; SOURCE LINE # 809
01DF 120000      R     LCALL   L?0672
01E2 120000      E     LCALL   ?C?LSTKXDATA
01E5 00                DB      00H
01E6 00                DB      00H
01E7 04                DB      04H
01E8 05                DB      05H
                                           ; SOURCE LINE # 810
01E9 900A78            MOV     DPTR,#port_index
01EC E0                MOVX    A,@DPTR
01ED FD                MOV     R5,A
01EE 75F0BB            MOV     B,#0BBH
01F1 A4                MUL     AB
01F2 2444              ADD     A,#LOW context+044H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 81  

01F4 F582              MOV     DPL,A
01F6 E4                CLR     A
01F7 340C              ADDC    A,#HIGH context+044H
01F9 F583              MOV     DPH,A
01FB E0                MOVX    A,@DPTR
01FC FE                MOV     R6,A
01FD ED                MOV     A,R5
01FE 75F0BB            MOV     B,#0BBH
0201 A4                MUL     AB
0202 2443              ADD     A,#LOW context+043H
0204 F582              MOV     DPL,A
0206 E4                CLR     A
0207 340C              ADDC    A,#HIGH context+043H
0209 F583              MOV     DPH,A
020B E0                MOVX    A,@DPTR
020C 900DC8            MOV     DPTR,#ppm2bios+016H
                                           ; SOURCE LINE # 811
020F 120000      R     LCALL   L?0673
0212 120000      E     LCALL   ?C?LSTKXDATA
0215 00                DB      00H
0216 00                DB      00H
0217 00                DB      00H
0218 00                DB      00H
                                           ; SOURCE LINE # 813
                                           ; SOURCE LINE # 814
                                           ; SOURCE LINE # 815
                                           ; SOURCE LINE # 816
0219 120000      R     LCALL   L?0620
021C EE                MOV     A,R6
021D 120000      E     LCALL   ?C?CSTOPTR
0220 7A0D              MOV     R2,#HIGH ppm2bios+01AH
0222         ?C0553:
0222 09                INC     R1
0223 120000      R     LCALL   L?0622
0226 EF                MOV     A,R7
0227 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 818
022A         ?C0098:
                                           ; SOURCE LINE # 819
022A 900A23            MOV     DPTR,#DataLength
022D 740C              MOV     A,#0CH
022F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 820
0230 8037              SJMP    out
                                           ; SOURCE LINE # 821
                                           ; SOURCE LINE # 822
0232         ?C0112:
                                           ; SOURCE LINE # 823
0232         ?C0554:
                                           ; SOURCE LINE # 824
0232 8030              SJMP    ?C0556
                                           ; SOURCE LINE # 825
                                           ; SOURCE LINE # 826
                                           ; SOURCE LINE # 827
0234         ?C0113:
                                           ; SOURCE LINE # 828
0234 E4                CLR     A
0235 900A1F            MOV     DPTR,#i
0238 F0                MOVX    @DPTR,A
0239         ?C0114:
0239 120000      R     LCALL   L?0740
023C 5026              JNC     ?C0115
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 82  

                                           ; SOURCE LINE # 829
023E 90000C            MOV     DPTR,#0CH
0241 C083              PUSH    DPH
0243 C082              PUSH    DPL
0245 7D00              MOV     R5,#00H
0247 EE                MOV     A,R6
0248 75F00C            MOV     B,#0CH
024B A4                MUL     AB
024C 7B01              MOV     R3,#01H
024E 24C2              ADD     A,#LOW ppm2bios+010H
0250 F9                MOV     R1,A
0251 740D              MOV     A,#HIGH ppm2bios+010H
0253 35F0              ADDC    A,B
0255 FA                MOV     R2,A
0256 D0E0              POP     ACC
0258 FF                MOV     R7,A
0259 D0E0              POP     ACC
025B FE                MOV     R6,A
025C 120000      E     LCALL   ?C?MEMSET
                                           ; SOURCE LINE # 830
025F 120000      R     LCALL   L?0739
0262 80D5              SJMP    ?C0114
0264         ?C0115:
                                           ; SOURCE LINE # 831
0264         ?C0556:
0264 E4                CLR     A
0265 900A23            MOV     DPTR,#DataLength
0268 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 832
                                           ; SOURCE LINE # 833
                                           ; SOURCE LINE # 835
0269         out:
                                           ; SOURCE LINE # 836
0269 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 837
026C 120000      R     LCALL   get_alt_modes_ack
                                           ; SOURCE LINE # 839
026F 900A77            MOV     DPTR,#result
0272 E0                MOVX    A,@DPTR
0273 FF                MOV     R7,A
                                           ; SOURCE LINE # 840
0274         ?C0055:
0274 22                RET     
             ; FUNCTION ppm_get_alt_modes (END)

             ; FUNCTION ppm_get_cam_supported (BEGIN)
                                           ; SOURCE LINE # 852
                                           ; SOURCE LINE # 853
                                           ; SOURCE LINE # 856
0000 900DBC            MOV     DPTR,#ppm2bios+0AH
0003 120000      R     LCALL   L?0651
0006 4006              JC      ?C0117
                                           ; SOURCE LINE # 857
                                           ; SOURCE LINE # 858
0008 120000      R     LCALL   L?0654
                                           ; SOURCE LINE # 859
000B 7F02              MOV     R7,#02H
000D 22                RET     
                                           ; SOURCE LINE # 860
000E         ?C0117:
                                           ; SOURCE LINE # 862
000E 120000      R     LCALL   L?0683
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 83  

0011 7002              JNZ     ?C0119
                                           ; SOURCE LINE # 863
                                           ; SOURCE LINE # 864
0013 8014              SJMP    ?C0558
                                           ; SOURCE LINE # 865
0015         ?C0119:
                                           ; SOURCE LINE # 867
0015 900BCC            MOV     DPTR,#pup+0CH
0018 E0                MOVX    A,@DPTR
0019 900DC2            MOV     DPTR,#ppm2bios+010H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 869
001D 6009              JZ      ?C0121
                                           ; SOURCE LINE # 870
001F 900BCD            MOV     DPTR,#pup+0DH
0022 E0                MOVX    A,@DPTR
0023 5407              ANL     A,#07H
0025 04                INC     A
0026 8001              SJMP    out
0028         ?C0121:
                                           ; SOURCE LINE # 872
0028 E4                CLR     A
0029         ?C0557:
0029         ?C0558:
0029 900A23            MOV     DPTR,#DataLength
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 874
002D         out:
                                           ; SOURCE LINE # 875
002D 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 876
0030 120000      R     LCALL   get_cam_supported_ack
                                           ; SOURCE LINE # 878
0033 900A77            MOV     DPTR,#result
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
                                           ; SOURCE LINE # 879
0038         ?C0118:
0038 22                RET     
             ; FUNCTION ppm_get_cam_supported (END)

             ; FUNCTION ppm_get_current_cam (BEGIN)
                                           ; SOURCE LINE # 891
                                           ; SOURCE LINE # 892
                                           ; SOURCE LINE # 893
0000 900DBC            MOV     DPTR,#ppm2bios+0AH
0003 120000      R     LCALL   L?0651
0006 4006              JC      ?C0123
                                           ; SOURCE LINE # 894
                                           ; SOURCE LINE # 895
0008 120000      R     LCALL   L?0655
                                           ; SOURCE LINE # 896
000B 7F02              MOV     R7,#02H
000D 22                RET     
                                           ; SOURCE LINE # 897
000E         ?C0123:
                                           ; SOURCE LINE # 899
000E 120000      R     LCALL   L?0683
0011 900DC2            MOV     DPTR,#ppm2bios+010H
0014 7003              JNZ     ?C0125
                                           ; SOURCE LINE # 900
0016 F0                MOVX    @DPTR,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 84  

                                           ; SOURCE LINE # 901
0017 8003              SJMP    out
                                           ; SOURCE LINE # 902
0019         ?C0125:
                                           ; SOURCE LINE # 904
0019 7401              MOV     A,#01H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 905
001C         out:
                                           ; SOURCE LINE # 906
001C 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 907
001F 120000      R     LCALL   get_current_cam_ack
                                           ; SOURCE LINE # 909
0022 900A77            MOV     DPTR,#result
0025 E0                MOVX    A,@DPTR
0026 FF                MOV     R7,A
                                           ; SOURCE LINE # 910
0027         ?C0124:
0027 22                RET     
             ; FUNCTION ppm_get_current_cam (END)

             ; FUNCTION ppm_set_new_cam (BEGIN)
                                           ; SOURCE LINE # 922
                                           ; SOURCE LINE # 923
                                           ; SOURCE LINE # 924
0000 900DBC            MOV     DPTR,#ppm2bios+0AH
0003 120000      R     LCALL   L?0651
0006 4006              JC      ?C0127
                                           ; SOURCE LINE # 925
                                           ; SOURCE LINE # 926
0008 120000      R     LCALL   L?0655
                                           ; SOURCE LINE # 927
000B 7F02              MOV     R7,#02H
000D 22                RET     
                                           ; SOURCE LINE # 928
000E         ?C0127:
                                           ; SOURCE LINE # 930
000E 900DBC            MOV     DPTR,#ppm2bios+0AH
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 120000      R     LCALL   L?0684
0016 600F              JZ      out
                                           ; SOURCE LINE # 932
                                           ; SOURCE LINE # 933
0018         ?C0129:
                                           ; SOURCE LINE # 935
0018 EF                MOV     A,R7
0019 120000      R     LCALL   L?0697
001C 30E005            JNB     ACC.0,?C0131
                                           ; SOURCE LINE # 936
001F 120000      E     LCALL   dp_alt_enter_mode
                                           ; SOURCE LINE # 937
0022 8003              SJMP    out
0024         ?C0131:
                                           ; SOURCE LINE # 938
0024 120000      E     LCALL   dp_alt_exit_mode
                                           ; SOURCE LINE # 939
                                           ; SOURCE LINE # 942
0027         out:
                                           ; SOURCE LINE # 943
0027 120000      R     LCALL   L?0665
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 85  

                                           ; SOURCE LINE # 944
002A 120000      R     LCALL   set_new_cam_ack
                                           ; SOURCE LINE # 946
002D 900A77            MOV     DPTR,#result
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
                                           ; SOURCE LINE # 947
0032         ?C0128:
0032 22                RET     
             ; FUNCTION ppm_set_new_cam (END)

             ; FUNCTION ppm_get_pdos (BEGIN)
                                           ; SOURCE LINE # 959
                                           ; SOURCE LINE # 960
                                           ; SOURCE LINE # 964
0000 900DBC            MOV     DPTR,#ppm2bios+0AH
0003 120000      R     LCALL   L?0651
0006 4006              JC      ?C0133
                                           ; SOURCE LINE # 965
                                           ; SOURCE LINE # 966
0008 120000      R     LCALL   L?0655
                                           ; SOURCE LINE # 967
000B 7F02              MOV     R7,#02H
000D 22                RET     
                                           ; SOURCE LINE # 968
000E         ?C0133:
                                           ; SOURCE LINE # 970
000E 120000      R     LCALL   L?0682
                                           ; SOURCE LINE # 971
0011 900DBC            MOV     DPTR,#ppm2bios+0AH
0014 E0                MOVX    A,@DPTR
0015 FD                MOV     R5,A
0016 120000      R     LCALL   L?0703
                                           ; SOURCE LINE # 980
0019 ED                MOV     A,R5
001A 120000      R     LCALL   L?0697
001D 20E05F            JB      ACC.0,?C0135
                                           ; SOURCE LINE # 981
0020 900DBE            MOV     DPTR,#ppm2bios+0CH
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 13                RRC     A
0026 13                RRC     A
0027 543F              ANL     A,#03FH
0029 30E027            JNB     ACC.0,?C0136
                                           ; SOURCE LINE # 982
002C EF                MOV     A,R7
002D 13                RRC     A
002E 13                RRC     A
002F 13                RRC     A
0030 5403              ANL     A,#03H
0032 24FD              ADD     A,#0FDH
0034 5002              JNC     ?C0140
0036 8013              SJMP    ?C0143
                                           ; SOURCE LINE # 983
                                           ; SOURCE LINE # 984
                                           ; SOURCE LINE # 985
0038         ?C0140:
                                           ; SOURCE LINE # 986
0038 900DBD            MOV     DPTR,#ppm2bios+0BH
003B E0                MOVX    A,@DPTR
003C D3                SETB    C
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 86  

003D 9401              SUBB    A,#01H
003F 503B              JNC     ?C0560
                                           ; SOURCE LINE # 987
0041 120000      R     LCALL   L?0636
0044 2455              ADD     A,#LOW context+055H
0046 F9                MOV     R1,A
0047 740C              MOV     A,#HIGH context+055H
                                           ; SOURCE LINE # 988
                                           ; SOURCE LINE # 989
0049 801E              SJMP    ?C0559
                                           ; SOURCE LINE # 997
004B         ?C0143:
                                           ; SOURCE LINE # 998
004B 7404              MOV     A,#04H
                                           ; SOURCE LINE # 999
004D 120000      R     LCALL   L?0728
                                           ; SOURCE LINE # 1000
0050 020000      R     LJMP    ?C0147
                                           ; SOURCE LINE # 1001
                                           ; SOURCE LINE # 1002
0053         ?C0136:
                                           ; SOURCE LINE # 1003
0053 900DBD            MOV     DPTR,#ppm2bios+0BH
0056 E0                MOVX    A,@DPTR
0057 D3                SETB    C
0058 9401              SUBB    A,#01H
005A 5020              JNC     ?C0145
                                           ; SOURCE LINE # 1004
005C 900A7F            MOV     DPTR,#port_id
005F E0                MOVX    A,@DPTR
0060 75F0BB            MOV     B,#0BBH
0063 A4                MUL     AB
0064 2406              ADD     A,#LOW context+06H
0066 F9                MOV     R1,A
0067 740C              MOV     A,#HIGH context+06H
0069         ?C0559:
0069 120000      R     LCALL   L?0741
006C 7E00              MOV     R6,#00H
006E 7F04              MOV     R7,#04H
0070 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 1008
0073 900A23            MOV     DPTR,#DataLength
0076 7404              MOV     A,#04H
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1009
0079 020000      R     LJMP    ?C0147
007C         ?C0145:
                                           ; SOURCE LINE # 1010
007C         ?C0560:
                                           ; SOURCE LINE # 1011
                                           ; SOURCE LINE # 1012
                                           ; SOURCE LINE # 1013
                                           ; SOURCE LINE # 1014
                                           ; SOURCE LINE # 1015
                                           ; SOURCE LINE # 1016
                                           ; SOURCE LINE # 1017
007C 020000      R     LJMP    ?C0561
007F         ?C0135:
                                           ; SOURCE LINE # 1018
007F 900DBD            MOV     DPTR,#ppm2bios+0BH
0082 E0                MOVX    A,@DPTR
0083 75F004            MOV     B,#04H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 87  

0086 A4                MUL     AB
0087 FF                MOV     R7,A
0088 AEF0              MOV     R6,B
008A 120000      R     LCALL   L?0636
008D 120000      R     LCALL   L?0723
0090 FD                MOV     R5,A
0091 7C00              MOV     R4,#00H
0093 C3                CLR     C
0094 EF                MOV     A,R7
0095 9D                SUBB    A,R5
0096 7480              MOV     A,#080H
0098 F8                MOV     R0,A
0099 6E                XRL     A,R6
009A 98                SUBB    A,R0
009B 5072              JNC     ?C0148
                                           ; SOURCE LINE # 1024
009D 120000      R     LCALL   L?0730
00A0         ?C0543:
00A0 C3                CLR     C
00A1 33                RLC     A
00A2 CE                XCH     A,R6
00A3 33                RLC     A
00A4 CE                XCH     A,R6
00A5 D8F9              DJNZ    R0,?C0543
00A7 D3                SETB    C
00A8 9D                SUBB    A,R5
00A9 EC                MOV     A,R4
00AA 6480              XRL     A,#080H
00AC F8                MOV     R0,A
00AD EE                MOV     A,R6
00AE 6480              XRL     A,#080H
00B0 98                SUBB    A,R0
00B1 4009              JC      ?C0149
00B3 120000      R     LCALL   L?0636
00B6 120000      R     LCALL   L?0723
00B9 FF                MOV     R7,A
00BA 8007              SJMP    ?C0150
00BC         ?C0149:
00BC E9                MOV     A,R1
00BD 04                INC     A
00BE 25E0              ADD     A,ACC
00C0 25E0              ADD     A,ACC
00C2 FF                MOV     R7,A
00C3         ?C0150:
00C3 7E00              MOV     R6,#00H
00C5 EE                MOV     A,R6
00C6 C0E0              PUSH    ACC
00C8 EF                MOV     A,R7
00C9 C0E0              PUSH    ACC
00CB 120000      R     LCALL   L?0636
00CE 247E              ADD     A,#LOW context+07EH
00D0 F9                MOV     R1,A
00D1 740C              MOV     A,#HIGH context+07EH
00D3 120000      R     LCALL   L?0741
00D6 D0E0              POP     ACC
00D8 FF                MOV     R7,A
00D9 D0E0              POP     ACC
00DB FE                MOV     R6,A
00DC 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 1025
00DF 120000      R     LCALL   L?0730
00E2         ?C0544:
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 88  

00E2 C3                CLR     C
00E3 33                RLC     A
00E4 CE                XCH     A,R6
00E5 33                RLC     A
00E6 CE                XCH     A,R6
00E7 D8F9              DJNZ    R0,?C0544
00E9 FF                MOV     R7,A
00EA 120000      R     LCALL   L?0636
00ED 120000      R     LCALL   L?0724
00F0 FD                MOV     R5,A
00F1 FB                MOV     R3,A
00F2 D3                SETB    C
00F3 EF                MOV     A,R7
00F4 9B                SUBB    A,R3
00F5 7480              MOV     A,#080H
00F7 F8                MOV     R0,A
00F8 6E                XRL     A,R6
00F9 98                SUBB    A,R0
00FA 4005              JC      ?C0151
00FC CF                XCH     A,R7
00FD ED                MOV     A,R5
00FE CF                XCH     A,R7
00FF 8007              SJMP    ?C0152
0101         ?C0151:
0101 E9                MOV     A,R1
0102 04                INC     A
0103 25E0              ADD     A,ACC
0105 25E0              ADD     A,ACC
0107 FF                MOV     R7,A
0108         ?C0152:
0108 900A23            MOV     DPTR,#DataLength
010B EF                MOV     A,R7
010C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1030
010D 802D              SJMP    ?C0147
010F         ?C0148:
                                           ; SOURCE LINE # 1031
010F         ?C0561:
010F 900DC2            MOV     DPTR,#ppm2bios+010H
0112 120000      E     LCALL   ?C?LSTKXDATA
0115 00                DB      00H
0116 00                DB      00H
0117 00                DB      00H
0118 00                DB      00H
                                           ; SOURCE LINE # 1032
0119 900DC6            MOV     DPTR,#ppm2bios+014H
011C 120000      E     LCALL   ?C?LSTKXDATA
011F 00                DB      00H
0120 00                DB      00H
0121 00                DB      00H
0122 00                DB      00H
                                           ; SOURCE LINE # 1033
0123 900DCA            MOV     DPTR,#ppm2bios+018H
0126 120000      E     LCALL   ?C?LSTKXDATA
0129 00                DB      00H
012A 00                DB      00H
012B 00                DB      00H
012C 00                DB      00H
                                           ; SOURCE LINE # 1034
012D 900DCE            MOV     DPTR,#ppm2bios+01CH
0130 120000      E     LCALL   ?C?LSTKXDATA
0133 00                DB      00H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 89  

0134 00                DB      00H
0135 00                DB      00H
0136 00                DB      00H
                                           ; SOURCE LINE # 1035
0137 E4                CLR     A
0138 900A23            MOV     DPTR,#DataLength
013B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1036
                                           ; SOURCE LINE # 1038
013C         ?C0147:
                                           ; SOURCE LINE # 1040
013C 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 1048
013F         out:
                                           ; SOURCE LINE # 1049
013F 120000      R     LCALL   get_pdos_ack
                                           ; SOURCE LINE # 1051
0142 900A77            MOV     DPTR,#result
0145 E0                MOVX    A,@DPTR
0146 FF                MOV     R7,A
                                           ; SOURCE LINE # 1052
0147         ?C0134:
0147 22                RET     
             ; FUNCTION ppm_get_pdos (END)

             ; FUNCTION ppm_get_cable_property (BEGIN)
                                           ; SOURCE LINE # 1064
                                           ; SOURCE LINE # 1065
                                           ; SOURCE LINE # 1066
0000 900DBC            MOV     DPTR,#ppm2bios+0AH
0003 120000      R     LCALL   L?0651
0006 4007              JC      ?C0155
                                           ; SOURCE LINE # 1067
0008 900A01            MOV     DPTR,#ucsi_errno
000B 7402              MOV     A,#02H
                                           ; SOURCE LINE # 1068
                                           ; SOURCE LINE # 1069
000D 8012              SJMP    ?C0562
                                           ; SOURCE LINE # 1070
000F         ?C0155:
                                           ; SOURCE LINE # 1072
000F 120000      R     LCALL   L?0700
                                           ; SOURCE LINE # 1074
0012 7F05              MOV     R7,#05H
                                           ; SOURCE LINE # 1076
0014 120000      R     LCALL   L?0635
0017 120000      R     LCALL   L?0642
001A 7009              JNZ     ?C0157
001C 900A01            MOV     DPTR,#ucsi_errno
001F 7404              MOV     A,#04H
0021         ?C0562:
0021 120000      R     LCALL   L?0699
0024 22                RET     
0025         ?C0157:
                                           ; SOURCE LINE # 1079
0025 120000      R     LCALL   L?0647
0028 120000      R     LCALL   L?0653
002B 20E203            JB      ACC.2,$ + 6H
002E 020000      R     LJMP    ?C0158
0031 EF                MOV     A,R7
0032 75F0BB            MOV     B,#0BBH
0035 A4                MUL     AB
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 90  

0036 243F              ADD     A,#LOW context+03FH
0038 F582              MOV     DPL,A
003A E4                CLR     A
003B 340C              ADDC    A,#HIGH context+03FH
003D F583              MOV     DPH,A
003F 120000      R     LCALL   L?0748
0042 7003              JNZ     $ + 5H
0044 020000      R     LJMP    ?C0158
                                           ; SOURCE LINE # 1080
0047 120000      R     LCALL   L?0768
004A 120000      R     LCALL   L?0725
004D FE                MOV     R6,A
004E 5408              ANL     A,#08H
0050 13                RRC     A
0051 13                RRC     A
0052 13                RRC     A
0053 541F              ANL     A,#01FH
0055 FD                MOV     R5,A
0056 900DC5            MOV     DPTR,#ppm2bios+013H
0059 E0                MOVX    A,@DPTR
005A 54FE              ANL     A,#0FEH
005C 4D                ORL     A,R5
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1081
005E EE                MOV     A,R6
005F C3                CLR     C
0060 13                RRC     A
0061 5403              ANL     A,#03H
0063 24FE              ADD     A,#0FEH
0065 600B              JZ      ?C0161
0067 04                INC     A
0068 7010              JNZ     ?C0162
                                           ; SOURCE LINE # 1082
006A         ?C0160:
                                           ; SOURCE LINE # 1083
006A 900DC4            MOV     DPTR,#ppm2bios+012H
006D 743C              MOV     A,#03CH
006F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1084
0070 800D              SJMP    ?C0159
                                           ; SOURCE LINE # 1085
0072         ?C0161:
                                           ; SOURCE LINE # 1086
0072 900DC4            MOV     DPTR,#ppm2bios+012H
0075 7464              MOV     A,#064H
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1087
0078 8005              SJMP    ?C0159
                                           ; SOURCE LINE # 1088
007A         ?C0162:
                                           ; SOURCE LINE # 1089
007A E4                CLR     A
007B 900DC4            MOV     DPTR,#ppm2bios+012H
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1090
                                           ; SOURCE LINE # 1091
007F         ?C0159:
                                           ; SOURCE LINE # 1093
007F 900DC5            MOV     DPTR,#ppm2bios+013H
0082 E0                MOVX    A,@DPTR
0083 54FD              ANL     A,#0FDH
0085 F0                MOVX    @DPTR,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 91  

                                           ; SOURCE LINE # 1094
0086 54DF              ANL     A,#0DFH
0088 F0                MOVX    @DPTR,A
0089 FD                MOV     R5,A
                                           ; SOURCE LINE # 1095
008A EB                MOV     A,R3
008B 120000      R     LCALL   L?0709
008E FA                MOV     R2,A
008F A3                INC     DPTR
0090 E0                MOVX    A,@DPTR
0091 FB                MOV     R3,A
0092 EA                MOV     A,R2
0093 C4                SWAP    A
0094 F8                MOV     R0,A
0095 54F0              ANL     A,#0F0H
0097 C8                XCH     A,R0
0098 EB                MOV     A,R3
0099 C4                SWAP    A
009A 540F              ANL     A,#0FH
009C 48                ORL     A,R0
009D 5403              ANL     A,#03H
009F 33                RLC     A
00A0 33                RLC     A
00A1 33                RLC     A
00A2 54F8              ANL     A,#0F8H
00A4 FF                MOV     R7,A
00A5 ED                MOV     A,R5
00A6 54E7              ANL     A,#0E7H
00A8 4F                ORL     A,R7
00A9 900DC5            MOV     DPTR,#ppm2bios+013H
00AC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1096
00AD EA                MOV     A,R2
00AE C4                SWAP    A
00AF 13                RRC     A
00B0 5407              ANL     A,#07H
00B2 20E023            JB      ACC.0,?C0164
00B5 120000      R     LCALL   L?0636
00B8 120000      R     LCALL   L?0710
00BB FC                MOV     R4,A
00BC A3                INC     DPTR
00BD E0                MOVX    A,@DPTR
00BE FD                MOV     R5,A
00BF EC                MOV     A,R4
00C0 C4                SWAP    A
00C1 13                RRC     A
00C2 13                RRC     A
00C3 5403              ANL     A,#03H
00C5 20E010            JB      ACC.0,?C0164
00C8 EC                MOV     A,R4
00C9 120000      R     LCALL   L?0697
00CC 20E009            JB      ACC.0,?C0164
00CF 120000      R     LCALL   L?0636
00D2 120000      R     LCALL   L?0725
00D5 30E009            JNB     ACC.0,?C0163
00D8         ?C0164:
                                           ; SOURCE LINE # 1098
00D8 900DC5            MOV     DPTR,#ppm2bios+013H
00DB E0                MOVX    A,@DPTR
00DC 4404              ORL     A,#04H
00DE F0                MOVX    @DPTR,A
00DF 8007              SJMP    ?C0165
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 92  

00E1         ?C0163:
                                           ; SOURCE LINE # 1100
00E1 900DC5            MOV     DPTR,#ppm2bios+013H
00E4 E0                MOVX    A,@DPTR
00E5 54FB              ANL     A,#0FBH
00E7 F0                MOVX    @DPTR,A
00E8         ?C0165:
                                           ; SOURCE LINE # 1103
00E8 E4                CLR     A
00E9 900DC2            MOV     DPTR,#ppm2bios+010H
00EC F0                MOVX    @DPTR,A
00ED A3                INC     DPTR
                                           ; SOURCE LINE # 1104
00EE 120000      R     LCALL   L?0646
00F1 120000      R     LCALL   L?0726
00F4 C4                SWAP    A
00F5 13                RRC     A
00F6 5407              ANL     A,#07H
00F8 14                DEC     A
00F9 600C              JZ      ?C0168
00FB 14                DEC     A
00FC 6011              JZ      ?C0169
00FE 2402              ADD     A,#02H
0100 7015              JNZ     ?C0170
                                           ; SOURCE LINE # 1105
0102         ?C0167:
                                           ; SOURCE LINE # 1106
0102 120000      R     LCALL   L?0763
                                           ; SOURCE LINE # 1107
0105 8016              SJMP    ?C0166
                                           ; SOURCE LINE # 1108
0107         ?C0168:
                                           ; SOURCE LINE # 1109
0107 120000      R     LCALL   L?0769
010A 7417              MOV     A,#017H
010C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1110
010D 800E              SJMP    ?C0166
                                           ; SOURCE LINE # 1111
010F         ?C0169:
                                           ; SOURCE LINE # 1112
010F 120000      R     LCALL   L?0769
0112 742B              MOV     A,#02BH
0114 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1113
0115 8006              SJMP    ?C0166
                                           ; SOURCE LINE # 1114
0117         ?C0170:
                                           ; SOURCE LINE # 1115
0117 120000      R     LCALL   L?0770
011A 7432              MOV     A,#032H
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1116
                                           ; SOURCE LINE # 1117
011D         ?C0166:
                                           ; SOURCE LINE # 1118
011D EF                MOV     A,R7
011E 120000      R     LCALL   L?0709
0121 FE                MOV     R6,A
0122 A3                INC     DPTR
0123 E0                MOVX    A,@DPTR
0124 7807              MOV     R0,#07H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 93  

0126         ?C0545:
0126 CE                XCH     A,R6
0127 C3                CLR     C
0128 13                RRC     A
0129 CE                XCH     A,R6
012A 13                RRC     A
012B D8F9              DJNZ    R0,?C0545
012D 540F              ANL     A,#0FH
012F FF                MOV     R7,A
0130 900DC6            MOV     DPTR,#ppm2bios+014H
0133 E0                MOVX    A,@DPTR
0134 54F0              ANL     A,#0F0H
0136 4F                ORL     A,R7
                                           ; SOURCE LINE # 1120
0137 120000      R     LCALL   L?0663
                                           ; SOURCE LINE # 1121
013A 804D              SJMP    ?C0179
                                           ; SOURCE LINE # 1122
013C         ?C0158:
                                           ; SOURCE LINE # 1125
013C 120000      R     LCALL   L?0636
013F 120000      R     LCALL   L?0771
0142 E0                MOVX    A,@DPTR
0143 24FE              ADD     A,#0FEH
0145 600D              JZ      ?C0174
0147 14                DEC     A
0148 6012              JZ      ?C0175
014A 2402              ADD     A,#02H
014C 7016              JNZ     ?C0176
                                           ; SOURCE LINE # 1126
014E         ?C0173:
                                           ; SOURCE LINE # 1127
014E 120000      R     LCALL   L?0772
0151 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1128
0152 8017              SJMP    ?C0172
                                           ; SOURCE LINE # 1129
0154         ?C0174:
                                           ; SOURCE LINE # 1130
0154 120000      R     LCALL   L?0772
0157 4408              ORL     A,#08H
0159 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1131
015A 800F              SJMP    ?C0172
                                           ; SOURCE LINE # 1132
015C         ?C0175:
                                           ; SOURCE LINE # 1133
015C 120000      R     LCALL   L?0773
015F 4410              ORL     A,#010H
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1134
0162 8007              SJMP    ?C0172
                                           ; SOURCE LINE # 1135
0164         ?C0176:
                                           ; SOURCE LINE # 1136
0164 900DC5            MOV     DPTR,#ppm2bios+013H
0167 E0                MOVX    A,@DPTR
0168 4418              ORL     A,#018H
016A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1137
016B         ?C0172:
                                           ; SOURCE LINE # 1140
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 94  

016B 120000      R     LCALL   L?0763
                                           ; SOURCE LINE # 1141
016E A3                INC     DPTR
016F 743C              MOV     A,#03CH
0171 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1142
0172 A3                INC     DPTR
0173 E0                MOVX    A,@DPTR
0174 4401              ORL     A,#01H
0176 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1143
0177 54FD              ANL     A,#0FDH
0179 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1144
017A 54FB              ANL     A,#0FBH
017C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1145
017D 54DF              ANL     A,#0DFH
017F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1146
0180 A3                INC     DPTR
0181 E0                MOVX    A,@DPTR
0182 54F0              ANL     A,#0F0H
0184 4405              ORL     A,#05H
                                           ; SOURCE LINE # 1148
0186 120000      R     LCALL   L?0663
                                           ; SOURCE LINE # 1149
0189         out:
0189         ?C0179:
                                           ; SOURCE LINE # 1151
0189 120000      R     LCALL   L?0677
018C 120000      R     LCALL   L?0719
                                           ; SOURCE LINE # 1154
018F 120000      R     LCALL   get_cable_property_ack
                                           ; SOURCE LINE # 1156
0192 900A77            MOV     DPTR,#result
0195 E0                MOVX    A,@DPTR
0196 FF                MOV     R7,A
                                           ; SOURCE LINE # 1157
0197         ?C0156:
0197 22                RET     
             ; FUNCTION ppm_get_cable_property (END)

             ; FUNCTION ppm_get_error_status (BEGIN)
                                           ; SOURCE LINE # 1168
                                           ; SOURCE LINE # 1169
                                           ; SOURCE LINE # 1170
0000 900A06            MOV     DPTR,#esd
0003 E0                MOVX    A,@DPTR
0004 7002              JNZ     ?C0546
0006 A3                INC     DPTR
0007 E0                MOVX    A,@DPTR
0008         ?C0546:
0008 601E              JZ      ?C0180
                                           ; SOURCE LINE # 1171
000A 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 1172
000D 120000      R     LCALL   get_error_status_ack
                                           ; SOURCE LINE # 1173
0010 120000      R     LCALL   L?0742
0013 7B01              MOV     R3,#01H
0015 7A0A              MOV     R2,#HIGH esd
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 95  

0017 7906              MOV     R1,#LOW esd
0019 7E00              MOV     R6,#00H
001B 7F10              MOV     R7,#010H
001D 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 1175
0020 120000      R     LCALL   L?0677
0023 120000      R     LCALL   L?0720
                                           ; SOURCE LINE # 1177
0026 800C              SJMP    ?C0184
0028         ?C0180:
                                           ; SOURCE LINE # 1178
0028 900A01            MOV     DPTR,#ucsi_errno
002B 7404              MOV     A,#04H
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1179
002E 120000      R     LCALL   L?0682
                                           ; SOURCE LINE # 1180
0031 120000      R     LCALL   get_error_status_ack
                                           ; SOURCE LINE # 1181
0034         ?C0184:
                                           ; SOURCE LINE # 1183
0034 900A77            MOV     DPTR,#result
0037 E0                MOVX    A,@DPTR
0038 FF                MOV     R7,A
                                           ; SOURCE LINE # 1185
0039         ?C0185:
0039 22                RET     
             ; FUNCTION ppm_get_error_status (END)

             ; FUNCTION ppm_get_connector_status (BEGIN)
                                           ; SOURCE LINE # 1195
                                           ; SOURCE LINE # 1196
                                           ; SOURCE LINE # 1200
0000 900DBC            MOV     DPTR,#ppm2bios+0AH
0003 120000      R     LCALL   L?0651
0006 400C              JC      ?C0186
                                           ; SOURCE LINE # 1211
                                           ; SOURCE LINE # 1212
0008 120000      R     LCALL   L?0655
                                           ; SOURCE LINE # 1213
000B 120000      R     LCALL   L?0682
                                           ; SOURCE LINE # 1214
000E 120000      R     LCALL   get_connector_status_ack
                                           ; SOURCE LINE # 1215
0011 020000      R     LJMP    ?C0563
                                           ; SOURCE LINE # 1217
0014         ?C0186:
                                           ; SOURCE LINE # 1219
0014 120000      R     LCALL   L?0700
                                           ; SOURCE LINE # 1221
0017 120000      R     LCALL   L?0648
001A 120000      R     LCALL   L?0774
001D E0                MOVX    A,@DPTR
001E FE                MOV     R6,A
001F EF                MOV     A,R7
0020 120000      R     LCALL   L?0641
0023 5E                ANL     A,R6
0024 5401              ANL     A,#01H
0026 33                RLC     A
0027 33                RLC     A
0028 33                RLC     A
0029 54F8              ANL     A,#0F8H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 96  

002B FF                MOV     R7,A
002C 900DC4            MOV     DPTR,#ppm2bios+012H
002F E0                MOVX    A,@DPTR
0030 54F7              ANL     A,#0F7H
0032 4F                ORL     A,R7
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1222
0034 120000      R     LCALL   L?0753
0037 20E003            JB      ACC.0,$ + 6H
003A 020000      R     LJMP    ?C0188
                                           ; SOURCE LINE # 1223
003D 120000      R     LCALL   L?0768
0040 120000      R     LCALL   L?0711
0043 120000      E     LCALL   ?C?LLDXDATA
0046 900DC6            MOV     DPTR,#ppm2bios+014H
0049 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1225
004C 900DC6            MOV     DPTR,#ppm2bios+014H
004F 120000      R     LCALL   L?0678
0052 900DC9            MOV     DPTR,#ppm2bios+017H
0055 E0                MOVX    A,@DPTR
0056 900DC6            MOV     DPTR,#ppm2bios+014H
0059 F0                MOVX    @DPTR,A
005A 900DC9            MOV     DPTR,#ppm2bios+017H
005D EF                MOV     A,R7
005E F0                MOVX    @DPTR,A
005F 900DC7            MOV     DPTR,#ppm2bios+015H
0062 120000      R     LCALL   L?0678
0065 900DC8            MOV     DPTR,#ppm2bios+016H
0068 E0                MOVX    A,@DPTR
0069 900DC7            MOV     DPTR,#ppm2bios+015H
006C F0                MOVX    @DPTR,A
006D A3                INC     DPTR
006E EF                MOV     A,R7
006F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1228
0070 900A30            MOV     DPTR,#ne+01H
0073 120000      R     LCALL   L?0753
0076 30E064            JNB     ACC.0,?C0192
                                           ; SOURCE LINE # 1229
0079 EB                MOV     A,R3
007A 75F0BB            MOV     B,#0BBH
007D A4                MUL     AB
007E 120000      R     LCALL   L?0775
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 600A              JZ      ?C0193
                                           ; SOURCE LINE # 1230
0085 900DC4            MOV     DPTR,#ppm2bios+012H
0088 120000      R     LCALL   L?0747
008B 4F                ORL     A,R7
008C F0                MOVX    @DPTR,A
008D 8009              SJMP    ?C0194
008F         ?C0193:
                                           ; SOURCE LINE # 1232
008F 900DC4            MOV     DPTR,#ppm2bios+012H
0092 E0                MOVX    A,@DPTR
0093 541F              ANL     A,#01FH
0095 4420              ORL     A,#020H
0097 F0                MOVX    @DPTR,A
0098         ?C0194:
                                           ; SOURCE LINE # 1234
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 97  

0098 120000      R     LCALL   L?0636
009B 120000      R     LCALL   L?0662
009E E0                MOVX    A,@DPTR
009F 24FB              ADD     A,#0FBH
00A1 602B              JZ      ?C0195
00A3 14                DEC     A
00A4 6028              JZ      ?C0195
00A6 8000              SJMP    ?C0198
                                           ; SOURCE LINE # 1235
                                           ; SOURCE LINE # 1236
                                           ; SOURCE LINE # 1237
                                           ; SOURCE LINE # 1238
00A8         ?C0198:
                                           ; SOURCE LINE # 1239
00A8 120000      E     LCALL   get_data_role
00AB 900A7A            MOV     DPTR,#role
00AE EF                MOV     A,R7
00AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1240
00B0 7008              JNZ     ?C0199
                                           ; SOURCE LINE # 1241
00B2 120000      R     LCALL   L?0660
00B5 7401              MOV     A,#01H
00B7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1242
00B8 8014              SJMP    ?C0195
00BA         ?C0199:
                                           ; SOURCE LINE # 1243
00BA 900A7F            MOV     DPTR,#port_id
00BD 120000      R     LCALL   L?0648
00C0 120000      R     LCALL   L?0662
00C3 E0                MOVX    A,@DPTR
00C4 B40107            CJNE    A,#01H,?C0195
                                           ; SOURCE LINE # 1244
00C7 EF                MOV     A,R7
00C8 120000      R     LCALL   L?0661
00CB 7402              MOV     A,#02H
00CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1245
                                           ; SOURCE LINE # 1246
                                           ; SOURCE LINE # 1247
00CE         ?C0195:
                                           ; SOURCE LINE # 1248
00CE 120000      R     LCALL   L?0636
00D1 120000      R     LCALL   L?0662
00D4 E0                MOVX    A,@DPTR
00D5 900DC5            MOV     DPTR,#ppm2bios+013H
00D8 120000      R     LCALL   L?0747
00DB 4F                ORL     A,R7
00DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1253
00DD         ?C0192:
                                           ; SOURCE LINE # 1255
00DD 900A30            MOV     DPTR,#ne+01H
00E0 E0                MOVX    A,@DPTR
00E1 FD                MOV     R5,A
00E2 C4                SWAP    A
00E3 540F              ANL     A,#0FH
00E5 30E017            JNB     ACC.0,?C0202
                                           ; SOURCE LINE # 1260
00E8 120000      R     LCALL   L?0636
00EB 120000      R     LCALL   L?0688
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 98  

00EE E0                MOVX    A,@DPTR
00EF 900DC4            MOV     DPTR,#ppm2bios+012H
00F2 B40106            CJNE    A,#01H,?C0203
                                           ; SOURCE LINE # 1261
00F5 E0                MOVX    A,@DPTR
00F6 4410              ORL     A,#010H
00F8 F0                MOVX    @DPTR,A
00F9 8004              SJMP    ?C0202
00FB         ?C0203:
                                           ; SOURCE LINE # 1263
00FB E0                MOVX    A,@DPTR
00FC 54EF              ANL     A,#0EFH
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1264
00FF         ?C0202:
                                           ; SOURCE LINE # 1265
00FF ED                MOV     A,R5
0100 C3                CLR     C
0101 13                RRC     A
0102 30E018            JNB     ACC.0,?C0205
                                           ; SOURCE LINE # 1266
0105 120000      R     LCALL   L?0636
0108 2474              ADD     A,#LOW context+074H
010A F582              MOV     DPL,A
010C E4                CLR     A
010D 340C              ADDC    A,#HIGH context+074H
010F F583              MOV     DPH,A
0111 E0                MOVX    A,@DPTR
0112 5403              ANL     A,#03H
0114 FF                MOV     R7,A
0115 900DCA            MOV     DPTR,#ppm2bios+018H
0118 E0                MOVX    A,@DPTR
0119 54FC              ANL     A,#0FCH
011B 4F                ORL     A,R7
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1267
011D         ?C0205:
                                           ; SOURCE LINE # 1269
011D 120000      R     LCALL   L?0636
0120 120000      R     LCALL   L?0711
0123 120000      R     LCALL   L?0748
0126 600B              JZ      ?C0206
                                           ; SOURCE LINE # 1270
0128 900DC4            MOV     DPTR,#ppm2bios+012H
012B E0                MOVX    A,@DPTR
012C 54F8              ANL     A,#0F8H
012E 4403              ORL     A,#03H
0130 F0                MOVX    @DPTR,A
0131 801D              SJMP    ?C0188
0133         ?C0206:
                                           ; SOURCE LINE # 1272
0133 900A7F            MOV     DPTR,#port_id
0136 E0                MOVX    A,@DPTR
0137 75F0BB            MOV     B,#0BBH
013A A4                MUL     AB
013B 2479              ADD     A,#LOW context+079H
013D F582              MOV     DPL,A
013F E4                CLR     A
0140 340C              ADDC    A,#HIGH context+079H
0142 F583              MOV     DPH,A
0144 E0                MOVX    A,@DPTR
0145 5407              ANL     A,#07H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 99  

0147 FF                MOV     R7,A
0148 900DC4            MOV     DPTR,#ppm2bios+012H
014B E0                MOVX    A,@DPTR
014C 54F8              ANL     A,#0F8H
014E 4F                ORL     A,R7
014F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1273
0150         ?C0188:
                                           ; SOURCE LINE # 1275
0150 900A30            MOV     DPTR,#ne+01H
0153 E0                MOVX    A,@DPTR
0154 FF                MOV     R7,A
0155 C4                SWAP    A
0156 13                RRC     A
0157 13                RRC     A
0158 5403              ANL     A,#03H
015A 30E024            JNB     ACC.0,?C0208
015D 900A78            MOV     DPTR,#port_index
0160 E0                MOVX    A,@DPTR
0161 FC                MOV     R4,A
0162 120000      R     LCALL   L?0634
0165 E0                MOVX    A,@DPTR
0166 FE                MOV     R6,A
0167 C4                SWAP    A
0168 13                RRC     A
0169 13                RRC     A
016A 5403              ANL     A,#03H
016C 30E012            JNB     ACC.0,?C0208
                                           ; SOURCE LINE # 1276
016F 900DC3            MOV     DPTR,#ppm2bios+011H
0172 E0                MOVX    A,@DPTR
0173 4440              ORL     A,#040H
0175 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1277
0176 EC                MOV     A,R4
0177 120000      R     LCALL   L?0634
017A EE                MOV     A,R6
017B 54BF              ANL     A,#0BFH
017D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1279
017E 020000      R     LJMP    out
                                           ; SOURCE LINE # 1280
0181         ?C0208:
                                           ; SOURCE LINE # 1282
0181 900DC4            MOV     DPTR,#ppm2bios+012H
0184 120000      R     LCALL   L?0754
0187 20E003            JB      ACC.0,$ + 6H
018A 020000      R     LJMP    out
                                           ; SOURCE LINE # 1283
018D         ?C0210:
                                           ; SOURCE LINE # 1285
018D 900A2F            MOV     DPTR,#ne
0190 E0                MOVX    A,@DPTR
0191 FB                MOV     R3,A
0192 C4                SWAP    A
0193 13                RRC     A
0194 5407              ANL     A,#07H
0196 30E019            JNB     ACC.0,?C0211
0199 900A78            MOV     DPTR,#port_index
019C E0                MOVX    A,@DPTR
019D FE                MOV     R6,A
019E 120000      R     LCALL   L?0631
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 100 

01A1 E0                MOVX    A,@DPTR
01A2 FD                MOV     R5,A
01A3 C4                SWAP    A
01A4 13                RRC     A
01A5 5407              ANL     A,#07H
01A7 30E008            JNB     ACC.0,?C0211
                                           ; SOURCE LINE # 1286
01AA EE                MOV     A,R6
01AB 120000      R     LCALL   L?0631
01AE ED                MOV     A,R5
                                           ; SOURCE LINE # 1287
                                           ; SOURCE LINE # 1288
01AF 020000      R     LJMP    ?C0564
                                           ; SOURCE LINE # 1289
01B2         ?C0211:
                                           ; SOURCE LINE # 1291
01B2 EB                MOV     A,R3
01B3 C3                CLR     C
01B4 13                RRC     A
01B5 30E018            JNB     ACC.0,?C0212
01B8 120000      R     LCALL   L?0628
01BB E0                MOVX    A,@DPTR
01BC FE                MOV     R6,A
01BD C3                CLR     C
01BE 13                RRC     A
01BF 30E00E            JNB     ACC.0,?C0212
                                           ; SOURCE LINE # 1292
01C2 EF                MOV     A,R7
01C3 120000      R     LCALL   L?0631
01C6 EE                MOV     A,R6
01C7 54FD              ANL     A,#0FDH
01C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1293
01CA 900DC2            MOV     DPTR,#ppm2bios+010H
                                           ; SOURCE LINE # 1294
01CD 020000      R     LJMP    ?C0565
                                           ; SOURCE LINE # 1295
01D0         ?C0212:
                                           ; SOURCE LINE # 1297
01D0 900A30            MOV     DPTR,#ne+01H
01D3 E0                MOVX    A,@DPTR
01D4 FB                MOV     R3,A
01D5 C4                SWAP    A
01D6 540F              ANL     A,#0FH
01D8 30E022            JNB     ACC.0,?C0213
01DB 900A78            MOV     DPTR,#port_index
01DE E0                MOVX    A,@DPTR
01DF FE                MOV     R6,A
01E0 120000      R     LCALL   L?0634
01E3 E0                MOVX    A,@DPTR
01E4 FD                MOV     R5,A
01E5 C4                SWAP    A
01E6 540F              ANL     A,#0FH
01E8 30E012            JNB     ACC.0,?C0213
                                           ; SOURCE LINE # 1298
01EB EE                MOV     A,R6
01EC 120000      R     LCALL   L?0634
01EF ED                MOV     A,R5
01F0 54EF              ANL     A,#0EFH
01F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1299
01F3 900DC3            MOV     DPTR,#ppm2bios+011H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 101 

01F6 E0                MOVX    A,@DPTR
01F7 4410              ORL     A,#010H
01F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1300
01FA 020000      R     LJMP    out
                                           ; SOURCE LINE # 1301
01FD         ?C0213:
                                           ; SOURCE LINE # 1303
01FD EB                MOV     A,R3
01FE 13                RRC     A
01FF 13                RRC     A
0200 13                RRC     A
0201 541F              ANL     A,#01FH
0203 30E01F            JNB     ACC.0,?C0214
0206 120000      R     LCALL   L?0632
0209 E0                MOVX    A,@DPTR
020A FE                MOV     R6,A
020B 13                RRC     A
020C 13                RRC     A
020D 13                RRC     A
020E 541F              ANL     A,#01FH
0210 30E012            JNB     ACC.0,?C0214
                                           ; SOURCE LINE # 1304
0213 EF                MOV     A,R7
0214 120000      R     LCALL   L?0634
0217 EE                MOV     A,R6
0218 54F7              ANL     A,#0F7H
021A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1305
021B 900DC3            MOV     DPTR,#ppm2bios+011H
021E E0                MOVX    A,@DPTR
021F 4408              ORL     A,#08H
0221 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1306
0222 020000      R     LJMP    out
                                           ; SOURCE LINE # 1307
0225         ?C0214:
                                           ; SOURCE LINE # 1309
0225 900A2F            MOV     DPTR,#ne
0228 E0                MOVX    A,@DPTR
0229 FB                MOV     R3,A
022A 13                RRC     A
022B 13                RRC     A
022C 543F              ANL     A,#03FH
022E 30E023            JNB     ACC.0,?C0215
0231 900A78            MOV     DPTR,#port_index
0234 E0                MOVX    A,@DPTR
0235 FE                MOV     R6,A
0236 120000      R     LCALL   L?0631
0239 E0                MOVX    A,@DPTR
023A FD                MOV     R5,A
023B 13                RRC     A
023C 13                RRC     A
023D 543F              ANL     A,#03FH
023F 30E012            JNB     ACC.0,?C0215
                                           ; SOURCE LINE # 1310
0242 EE                MOV     A,R6
0243 120000      R     LCALL   L?0631
0246 ED                MOV     A,R5
0247 54FB              ANL     A,#0FBH
0249 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1311
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 102 

024A 900DC2            MOV     DPTR,#ppm2bios+010H
024D E0                MOVX    A,@DPTR
024E 4404              ORL     A,#04H
0250 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1312
0251 020000      R     LJMP    out
                                           ; SOURCE LINE # 1313
0254         ?C0215:
                                           ; SOURCE LINE # 1315
0254 EB                MOV     A,R3
0255 120000      R     LCALL   L?0697
0258 30E017            JNB     ACC.0,?C0216
025B 120000      R     LCALL   L?0628
025E 120000      R     LCALL   L?0696
0261 30E00E            JNB     ACC.0,?C0216
                                           ; SOURCE LINE # 1316
0264 EF                MOV     A,R7
0265 120000      R     LCALL   L?0631
0268 EE                MOV     A,R6
0269 547F              ANL     A,#07FH
026B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1317
026C 900DC2            MOV     DPTR,#ppm2bios+010H
                                           ; SOURCE LINE # 1318
026F 020000      R     LJMP    ?C0566
                                           ; SOURCE LINE # 1319
0272         ?C0216:
                                           ; SOURCE LINE # 1321
0272 900A2F            MOV     DPTR,#ne
0275 E0                MOVX    A,@DPTR
0276 FF                MOV     R7,A
0277 C4                SWAP    A
0278 13                RRC     A
0279 5407              ANL     A,#07H
027B 30E01E            JNB     ACC.0,?C0217
027E 120000      R     LCALL   L?0629
0281 E0                MOVX    A,@DPTR
0282 FE                MOV     R6,A
0283 C4                SWAP    A
0284 13                RRC     A
0285 5407              ANL     A,#07H
0287 30E012            JNB     ACC.0,?C0217
                                           ; SOURCE LINE # 1322
028A EF                MOV     A,R7
028B 120000      R     LCALL   L?0631
028E EE                MOV     A,R6
028F         ?C0564:
028F 54DF              ANL     A,#0DFH
0291 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1323
0292 900DC2            MOV     DPTR,#ppm2bios+010H
0295 E0                MOVX    A,@DPTR
0296 4420              ORL     A,#020H
0298 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1324
0299 020000      R     LJMP    out
                                           ; SOURCE LINE # 1325
029C         ?C0217:
                                           ; SOURCE LINE # 1327
029C 900A30            MOV     DPTR,#ne+01H
029F E0                MOVX    A,@DPTR
02A0 FB                MOV     R3,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 103 

02A1 120000      R     LCALL   L?0697
02A4 30E022            JNB     ACC.0,?C0218
02A7 900A78            MOV     DPTR,#port_index
02AA E0                MOVX    A,@DPTR
02AB FE                MOV     R6,A
02AC 120000      R     LCALL   L?0634
02AF E0                MOVX    A,@DPTR
02B0 FD                MOV     R5,A
02B1 120000      R     LCALL   L?0697
02B4 30E012            JNB     ACC.0,?C0218
                                           ; SOURCE LINE # 1328
02B7 EE                MOV     A,R6
02B8 120000      R     LCALL   L?0634
02BB ED                MOV     A,R5
02BC 547F              ANL     A,#07FH
02BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1329
02BF 900DC3            MOV     DPTR,#ppm2bios+011H
02C2         ?C0566:
02C2 E0                MOVX    A,@DPTR
02C3 4480              ORL     A,#080H
02C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1330
02C6 020000      R     LJMP    out
                                           ; SOURCE LINE # 1331
02C9         ?C0218:
                                           ; SOURCE LINE # 1334
02C9 EB                MOV     A,R3
02CA 30E01A            JNB     ACC.0,?C0219
02CD 120000      R     LCALL   L?0632
02D0 E0                MOVX    A,@DPTR
02D1 FE                MOV     R6,A
02D2 30E012            JNB     ACC.0,?C0219
                                           ; SOURCE LINE # 1335
02D5 EF                MOV     A,R7
02D6 120000      R     LCALL   L?0634
02D9 EE                MOV     A,R6
02DA 54FE              ANL     A,#0FEH
02DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1336
02DD 900DC3            MOV     DPTR,#ppm2bios+011H
02E0 E0                MOVX    A,@DPTR
02E1 4401              ORL     A,#01H
02E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1337
02E4 020000      R     LJMP    out
                                           ; SOURCE LINE # 1338
02E7         ?C0219:
                                           ; SOURCE LINE # 1340
02E7 900A30            MOV     DPTR,#ne+01H
02EA E0                MOVX    A,@DPTR
02EB C3                CLR     C
02EC 13                RRC     A
02ED 30E01B            JNB     ACC.0,?C0220
02F0 120000      R     LCALL   L?0633
02F3 E0                MOVX    A,@DPTR
02F4 FE                MOV     R6,A
02F5 C3                CLR     C
02F6 13                RRC     A
02F7 30E011            JNB     ACC.0,?C0220
                                           ; SOURCE LINE # 1341
02FA EF                MOV     A,R7
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 104 

02FB 120000      R     LCALL   L?0634
02FE EE                MOV     A,R6
02FF 54FD              ANL     A,#0FDH
0301 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1342
0302 900DC3            MOV     DPTR,#ppm2bios+011H
0305         ?C0565:
0305 E0                MOVX    A,@DPTR
0306 4402              ORL     A,#02H
0308 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1343
0309 8037              SJMP    out
                                           ; SOURCE LINE # 1344
030B         ?C0220:
                                           ; SOURCE LINE # 1346
030B 900A2F            MOV     DPTR,#ne
030E 120000      R     LCALL   L?0737
0311 30E01C            JNB     ACC.0,?C0221
0314 120000      R     LCALL   L?0629
0317 E0                MOVX    A,@DPTR
0318 FE                MOV     R6,A
0319 C4                SWAP    A
031A 13                RRC     A
031B 13                RRC     A
031C 5403              ANL     A,#03H
031E 30E00F            JNB     ACC.0,?C0221
                                           ; SOURCE LINE # 1347
0321 EF                MOV     A,R7
0322 120000      R     LCALL   L?0631
0325 EE                MOV     A,R6
0326 54BF              ANL     A,#0BFH
0328 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1348
0329 900DC2            MOV     DPTR,#ppm2bios+010H
032C E0                MOVX    A,@DPTR
032D 4440              ORL     A,#040H
032F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1349
0330         ?C0221:
                                           ; SOURCE LINE # 1351
0330 120000      R     LCALL   L?0629
0333 E0                MOVX    A,@DPTR
0334 FC                MOV     R4,A
0335 A3                INC     DPTR
0336 E0                MOVX    A,@DPTR
0337 4C                ORL     A,R4
0338 6008              JZ      out
                                           ; SOURCE LINE # 1356
033A EF                MOV     A,R7
033B 120000      R     LCALL   L?0631
033E E4                CLR     A
033F F0                MOVX    @DPTR,A
0340 A3                INC     DPTR
0341 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1357
                                           ; SOURCE LINE # 1359
0342         out:
                                           ; SOURCE LINE # 1360
0342 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 1361
0345 120000      R     LCALL   get_connector_status_ack
                                           ; SOURCE LINE # 1362
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 105 

0348 900A78            MOV     DPTR,#port_index
034B E0                MOVX    A,@DPTR
034C 120000      R     LCALL   L?0631
034F E0                MOVX    A,@DPTR
0350 FE                MOV     R6,A
0351 A3                INC     DPTR
0352 E0                MOVX    A,@DPTR
0353 4E                ORL     A,R6
0354 6009              JZ      ?C0223
                                           ; SOURCE LINE # 1364
0356 900A29            MOV     DPTR,#ucsi_async_checking_timer
0359 E4                CLR     A
035A F0                MOVX    @DPTR,A
035B A3                INC     DPTR
035C 741E              MOV     A,#01EH
035E F0                MOVX    @DPTR,A
035F         ?C0223:
                                           ; SOURCE LINE # 1367
035F 900DC3            MOV     DPTR,#ppm2bios+011H
0362 120000      R     LCALL   L?0737
0365 30E00A            JNB     ACC.0,?C0224
                                           ; SOURCE LINE # 1368
0368 900A29            MOV     DPTR,#ucsi_async_checking_timer
036B 7403              MOV     A,#03H
036D F0                MOVX    @DPTR,A
036E A3                INC     DPTR
036F 74E8              MOV     A,#0E8H
0371 F0                MOVX    @DPTR,A
0372         ?C0224:
                                           ; SOURCE LINE # 1370
0372         ?C0563:
0372 900A77            MOV     DPTR,#result
0375 E0                MOVX    A,@DPTR
0376 FF                MOV     R7,A
                                           ; SOURCE LINE # 1371
0377         ?C0187:
0377 22                RET     
             ; FUNCTION ppm_get_connector_status (END)

             ; FUNCTION ppm_set_pdm (BEGIN)
                                           ; SOURCE LINE # 1382
                                           ; SOURCE LINE # 1383
                                           ; SOURCE LINE # 1385
                                           ; SOURCE LINE # 1387
0000 120000      R     LCALL   L?0649
0003 E4                CLR     A
0004 9400              SUBB    A,#00H
0006 4007              JC      ?C0228
                                           ; SOURCE LINE # 1388
0008 900A01            MOV     DPTR,#ucsi_errno
000B 7402              MOV     A,#02H
                                           ; SOURCE LINE # 1389
                                           ; SOURCE LINE # 1390
000D 801A              SJMP    ?C0567
                                           ; SOURCE LINE # 1391
000F         ?C0228:
                                           ; SOURCE LINE # 1393
                                           ; SOURCE LINE # 1394
000F 120000      R     LCALL   L?0674
0012 6019              JZ      ?C0230
0014 EF                MOV     A,R7
0015 7807              MOV     R0,#07H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 106 

0017         ?C0547:
0017 CE                XCH     A,R6
0018 C3                CLR     C
0019 13                RRC     A
001A CE                XCH     A,R6
001B 13                RRC     A
001C D8F9              DJNZ    R0,?C0547
001E 5407              ANL     A,#07H
0020 6401              XRL     A,#01H
0022 6009              JZ      ?C0230
                                           ; SOURCE LINE # 1395
0024 900A01            MOV     DPTR,#ucsi_errno
0027 7404              MOV     A,#04H
0029         ?C0567:
                                           ; SOURCE LINE # 1396
                                           ; SOURCE LINE # 1397
0029 120000      R     LCALL   L?0699
002C 22                RET     
                                           ; SOURCE LINE # 1398
002D         ?C0230:
                                           ; SOURCE LINE # 1399
002D 120000      R     LCALL   L?0647
0030 120000      R     LCALL   L?0692
                                           ; SOURCE LINE # 1401
0033 120000      R     LCALL   L?0764
                                           ; SOURCE LINE # 1403
0036 900DBD            MOV     DPTR,#ppm2bios+0BH
0039 E0                MOVX    A,@DPTR
003A 30E70C            JNB     ACC.7,?C0231
                                           ; SOURCE LINE # 1404
003D EF                MOV     A,R7
003E 75F0BB            MOV     B,#0BBH
0041 A4                MUL     AB
0042 120000      R     LCALL   L?0692
0045 E0                MOVX    A,@DPTR
0046 4401              ORL     A,#01H
0048 F0                MOVX    @DPTR,A
0049         ?C0231:
                                           ; SOURCE LINE # 1405
0049 900DBC            MOV     DPTR,#ppm2bios+0AH
004C E0                MOVX    A,@DPTR
004D 30E00A            JNB     ACC.0,?C0232
                                           ; SOURCE LINE # 1406
0050 120000      R     LCALL   L?0636
0053 120000      R     LCALL   L?0693
0056 E0                MOVX    A,@DPTR
0057 4402              ORL     A,#02H
0059 F0                MOVX    @DPTR,A
005A         ?C0232:
                                           ; SOURCE LINE # 1407
005A 900DBC            MOV     DPTR,#ppm2bios+0AH
005D E0                MOVX    A,@DPTR
005E 30E10A            JNB     ACC.1,?C0233
                                           ; SOURCE LINE # 1408
0061 120000      R     LCALL   L?0636
0064 120000      R     LCALL   L?0693
0067 E0                MOVX    A,@DPTR
0068 4404              ORL     A,#04H
006A F0                MOVX    @DPTR,A
006B         ?C0233:
                                           ; SOURCE LINE # 1410
006B 120000      R     LCALL   L?0647
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 107 

006E 120000      R     LCALL   L?0693
0071 E0                MOVX    A,@DPTR
0072 24FE              ADD     A,#0FEH
0074 6011              JZ      ?C0236
0076 24FE              ADD     A,#0FEH
0078 600F              JZ      ?C0237
007A 14                DEC     A
007B 601D              JZ      ?C0238
007D 14                DEC     A
007E 6007              JZ      ?C0236
0080 2405              ADD     A,#05H
0082 7034              JNZ     ?C0240
                                           ; SOURCE LINE # 1411
0084         ?C0235:
                                           ; SOURCE LINE # 1412
0084 EF                MOV     A,R7
                                           ; SOURCE LINE # 1413
0085 8017              SJMP    ?C0568
                                           ; SOURCE LINE # 1414
0087         ?C0236:
                                           ; SOURCE LINE # 1415
                                           ; SOURCE LINE # 1416
0087 8022              SJMP    ?C0569
                                           ; SOURCE LINE # 1417
0089         ?C0237:
                                           ; SOURCE LINE # 1418
0089 900A78            MOV     DPTR,#port_index
008C E0                MOVX    A,@DPTR
008D FF                MOV     R7,A
                                           ; SOURCE LINE # 1419
008E 120000      R     LCALL   L?0637
0091 120000      R     LCALL   L?0755
0094 F583              MOV     DPH,A
0096 E4                CLR     A
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1420
0098 8021              SJMP    ?C0234
                                           ; SOURCE LINE # 1421
009A         ?C0238:
                                           ; SOURCE LINE # 1422
009A 900A78            MOV     DPTR,#port_index
009D E0                MOVX    A,@DPTR
009E         ?C0568:
009E 75F0BB            MOV     B,#0BBH
00A1 A4                MUL     AB
00A2 24B0              ADD     A,#LOW context+0B0H
00A4 F582              MOV     DPL,A
00A6 E4                CLR     A
00A7 340C              ADDC    A,#HIGH context+0B0H
                                           ; SOURCE LINE # 1423
00A9 8006              SJMP    ?C0570
                                           ; SOURCE LINE # 1424
00AB         ?C0569:
00AB 120000      R     LCALL   L?0636
00AE 120000      R     LCALL   L?0755
00B1         ?C0570:
00B1 F583              MOV     DPH,A
00B3 7401              MOV     A,#01H
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1426
00B6 8003              SJMP    ?C0234
                                           ; SOURCE LINE # 1427
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 108 

00B8         ?C0240:
                                           ; SOURCE LINE # 1428
                                           ; SOURCE LINE # 1429
                                           ; SOURCE LINE # 1430
00B8 120000      R     LCALL   L?0679
                                           ; SOURCE LINE # 1431
                                           ; SOURCE LINE # 1432
00BB         ?C0234:
                                           ; SOURCE LINE # 1434
00BB 120000      R     LCALL   set_pdr_ack
                                           ; SOURCE LINE # 1436
00BE 900A77            MOV     DPTR,#result
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
                                           ; SOURCE LINE # 1437
00C3         ?C0229:
00C3 22                RET     
             ; FUNCTION ppm_set_pdm (END)

             ; FUNCTION ppm_set_pdr_process (BEGIN)
                                           ; SOURCE LINE # 1440
                                           ; SOURCE LINE # 1441
                                           ; SOURCE LINE # 1442
0000 900000      R     MOV     DPTR,#ret
0003 7402              MOV     A,#02H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1444
0006 900A2C            MOV     DPTR,#ucsi_command_process_delay
0009 E0                MOVX    A,@DPTR
000A B44B08            CJNE    A,#04BH,?C0241
                                           ; SOURCE LINE # 1445
000D 120000      R     LCALL   L?0643
0010 7F10              MOV     R7,#010H
0012 120000      E     LCALL   _send_pd_msg
0015         ?C0241:
                                           ; SOURCE LINE # 1446
0015 900A2C            MOV     DPTR,#ucsi_command_process_delay
0018 E0                MOVX    A,@DPTR
0019 6052              JZ      ?C0242
                                           ; SOURCE LINE # 1447
001B 14                DEC     A
001C F0                MOVX    @DPTR,A
001D 7048              JNZ     ?C0243
                                           ; SOURCE LINE # 1448
001F 120000      R     LCALL   L?0704
                                           ; SOURCE LINE # 1449
0022 120000      E     LCALL   get_power_role
0025 EF                MOV     A,R7
0026 6008              JZ      ?C0246
0028 14                DEC     A
0029 7008              JNZ     ?C0244
                                           ; SOURCE LINE # 1450
002B         ?C0245:
                                           ; SOURCE LINE # 1451
002B 120000      R     LCALL   L?0776
                                           ; SOURCE LINE # 1452
002E 8003              SJMP    ?C0244
                                           ; SOURCE LINE # 1453
0030         ?C0246:
                                           ; SOURCE LINE # 1454
0030 120000      R     LCALL   L?0778
                                           ; SOURCE LINE # 1455
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 109 

                                           ; SOURCE LINE # 1456
0033         ?C0244:
                                           ; SOURCE LINE # 1457
0033 120000      R     LCALL   L?0636
0036 120000      R     LCALL   L?0667
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 900A7A            MOV     DPTR,#role
003E E0                MOVX    A,@DPTR
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 6018              JZ      ?C0247
                                           ; SOURCE LINE # 1458
0044 120000      R     LCALL   set_uor_ack
                                           ; SOURCE LINE # 1459
0047 120000      R     LCALL   cancel_all_timer
                                           ; SOURCE LINE # 1460
004A 900A7F            MOV     DPTR,#port_id
004D E0                MOVX    A,@DPTR
004E 120000      R     LCALL   L?0631
0051 E4                CLR     A
0052 F0                MOVX    @DPTR,A
0053 A3                INC     DPTR
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1461
0055 900000      R     MOV     DPTR,#ret
0058 04                INC     A
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1462
005A 8011              SJMP    ?C0242
005C         ?C0247:
                                           ; SOURCE LINE # 1463
                                           ; SOURCE LINE # 1464
005C 120000      R     LCALL   L?0727
                                           ; SOURCE LINE # 1465
005F 900000      R     MOV     DPTR,#ret
0062 7402              MOV     A,#02H
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1466
                                           ; SOURCE LINE # 1467
0065 8006              SJMP    ?C0242
0067         ?C0243:
                                           ; SOURCE LINE # 1468
0067 900000      R     MOV     DPTR,#ret
006A 7405              MOV     A,#05H
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1469
                                           ; SOURCE LINE # 1470
006D         ?C0242:
                                           ; SOURCE LINE # 1471
006D 900000      R     MOV     DPTR,#ret
0070 E0                MOVX    A,@DPTR
0071 FF                MOV     R7,A
                                           ; SOURCE LINE # 1472
0072         ?C0250:
0072 22                RET     
             ; FUNCTION ppm_set_pdr_process (END)

             ; FUNCTION ppm_set_pdr (BEGIN)
                                           ; SOURCE LINE # 1481
                                           ; SOURCE LINE # 1482
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 110 

                                           ; SOURCE LINE # 1484
                                           ; SOURCE LINE # 1487
0000 120000      R     LCALL   L?0649
0003 E4                CLR     A
0004 9400              SUBB    A,#00H
0006 4007              JC      ?C0254
                                           ; SOURCE LINE # 1488
0008 900A01            MOV     DPTR,#ucsi_errno
000B 7402              MOV     A,#02H
                                           ; SOURCE LINE # 1489
                                           ; SOURCE LINE # 1490
000D 800A              SJMP    ?C0571
                                           ; SOURCE LINE # 1491
000F         ?C0254:
                                           ; SOURCE LINE # 1493
                                           ; SOURCE LINE # 1494
000F 120000      R     LCALL   L?0640
0012 7009              JNZ     ?C0256
0014 900A01            MOV     DPTR,#ucsi_errno
0017 7404              MOV     A,#04H
0019         ?C0571:
0019 120000      R     LCALL   L?0699
001C 22                RET     
001D         ?C0256:
                                           ; SOURCE LINE # 1495
001D 120000      R     LCALL   L?0647
0020 120000      R     LCALL   L?0667
0023 E4                CLR     A
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1497
0025 900DBD            MOV     DPTR,#ppm2bios+0BH
0028 E0                MOVX    A,@DPTR
0029 30E707            JNB     ACC.7,?C0257
                                           ; SOURCE LINE # 1498
002C 120000      R     LCALL   L?0666
002F E0                MOVX    A,@DPTR
0030 4401              ORL     A,#01H
0032 F0                MOVX    @DPTR,A
0033         ?C0257:
                                           ; SOURCE LINE # 1499
0033 900DBC            MOV     DPTR,#ppm2bios+0AH
0036 E0                MOVX    A,@DPTR
0037 30E00A            JNB     ACC.0,?C0258
                                           ; SOURCE LINE # 1500
003A 120000      R     LCALL   L?0636
003D 120000      R     LCALL   L?0667
0040 E0                MOVX    A,@DPTR
0041 4402              ORL     A,#02H
0043 F0                MOVX    @DPTR,A
0044         ?C0258:
                                           ; SOURCE LINE # 1501
0044 900DBC            MOV     DPTR,#ppm2bios+0AH
0047 E0                MOVX    A,@DPTR
0048 30E10A            JNB     ACC.1,?C0259
                                           ; SOURCE LINE # 1502
004B 120000      R     LCALL   L?0636
004E 120000      R     LCALL   L?0667
0051 E0                MOVX    A,@DPTR
0052 4404              ORL     A,#04H
0054 F0                MOVX    @DPTR,A
0055         ?C0259:
                                           ; SOURCE LINE # 1504
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 111 

0055 120000      R     LCALL   L?0647
0058 120000      R     LCALL   L?0675
005B 6010              JZ      ?C0260
005D 120000      R     LCALL   L?0666
0060 E0                MOVX    A,@DPTR
0061 6401              XRL     A,#01H
0063 6008              JZ      ?C0260
                                           ; SOURCE LINE # 1505
0065 900A01            MOV     DPTR,#ucsi_errno
0068 7404              MOV     A,#04H
                                           ; SOURCE LINE # 1506
                                           ; SOURCE LINE # 1507
                                           ; SOURCE LINE # 1508
006A 020000      R     LJMP    ?C0577
                                           ; SOURCE LINE # 1509
006D         ?C0260:
                                           ; SOURCE LINE # 1511
006D 120000      R     LCALL   L?0704
                                           ; SOURCE LINE # 1513
0070 120000      E     LCALL   send_source_sink_capability
                                           ; SOURCE LINE # 1515
0073 120000      E     LCALL   get_power_role
0076 EF                MOV     A,R7
0077 6008              JZ      ?C0264
0079 14                DEC     A
007A 7008              JNZ     ?C0262
                                           ; SOURCE LINE # 1516
007C         ?C0263:
                                           ; SOURCE LINE # 1517
007C 120000      R     LCALL   L?0776
                                           ; SOURCE LINE # 1518
007F 8003              SJMP    ?C0262
                                           ; SOURCE LINE # 1519
0081         ?C0264:
                                           ; SOURCE LINE # 1520
0081 120000      R     LCALL   L?0778
                                           ; SOURCE LINE # 1521
                                           ; SOURCE LINE # 1522
0084         ?C0262:
                                           ; SOURCE LINE # 1529
0084 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 1530
0087 A3                INC     DPTR
0088 120000      R     LCALL   L?0648
008B 120000      R     LCALL   L?0667
008E E0                MOVX    A,@DPTR
008F 24FE              ADD     A,#0FEH
0091 603E              JZ      ?C0271
0093 24FE              ADD     A,#0FEH
0095 6062              JZ      ?C0276
0097 14                DEC     A
0098 7003              JNZ     $ + 5H
009A 020000      R     LJMP    ?C0282
009D 14                DEC     A
009E 605F              JZ      ?C0277
00A0 2405              ADD     A,#05H
00A2 6003              JZ      $ + 5H
00A4 020000      R     LJMP    ?C0287
                                           ; SOURCE LINE # 1531
00A7         ?C0266:
                                           ; SOURCE LINE # 1532
00A7 120000      R     LCALL   L?0749
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 112 

00AA 6003              JZ      $ + 5H
00AC 020000      R     LJMP    out
                                           ; SOURCE LINE # 1534
00AF 120000      R     LCALL   L?0652
00B2 20E041            JB      ACC.0,?C0574
                                           ; SOURCE LINE # 1535
00B5 120000      R     LCALL   L?0643
                                           ; SOURCE LINE # 1536
00B8 120000      R     LCALL   L?0708
                                           ; SOURCE LINE # 1537
00BB 120000      R     LCALL   L?0705
                                           ; SOURCE LINE # 1538
00BE 120000      E     LCALL   get_power_role
00C1 EF                MOV     A,R7
00C2 6401              XRL     A,#01H
00C4 7003              JNZ     $ + 5H
00C6 020000      R     LJMP    out
                                           ; SOURCE LINE # 1539
00C9 900A01            MOV     DPTR,#ucsi_errno
00CC 7440              MOV     A,#040H
00CE         ?C0572:
                                           ; SOURCE LINE # 1540
                                           ; SOURCE LINE # 1541
                                           ; SOURCE LINE # 1542
                                           ; SOURCE LINE # 1543
00CE 020000      R     LJMP    ?C0577
                                           ; SOURCE LINE # 1550
00D1         ?C0271:
                                           ; SOURCE LINE # 1551
00D1 120000      R     LCALL   L?0751
00D4 6003              JZ      $ + 5H
00D6 020000      R     LJMP    out
                                           ; SOURCE LINE # 1553
00D9 120000      R     LCALL   L?0636
00DC 120000      R     LCALL   L?0653
00DF 20E014            JB      ACC.0,?C0273
                                           ; SOURCE LINE # 1554
00E2 120000      R     LCALL   L?0644
                                           ; SOURCE LINE # 1555
00E5 120000      R     LCALL   L?0708
                                           ; SOURCE LINE # 1556
00E8 120000      E     LCALL   get_power_role
00EB EF                MOV     A,R7
00EC 606C              JZ      out
                                           ; SOURCE LINE # 1557
00EE 900A01            MOV     DPTR,#ucsi_errno
00F1 7440              MOV     A,#040H
00F3         ?C0573:
                                           ; SOURCE LINE # 1558
                                           ; SOURCE LINE # 1559
                                           ; SOURCE LINE # 1560
                                           ; SOURCE LINE # 1561
00F3 020000      R     LJMP    ?C0577
00F6         ?C0273:
                                           ; SOURCE LINE # 1563
00F6         ?C0574:
                                           ; SOURCE LINE # 1564
                                           ; SOURCE LINE # 1565
                                           ; SOURCE LINE # 1566
                                           ; SOURCE LINE # 1567
00F6 020000      R     LJMP    ?C0578
                                           ; SOURCE LINE # 1568
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 113 

00F9         ?C0276:
                                           ; SOURCE LINE # 1570
00F9 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 1571
00FC 020000      R     LJMP    out
                                           ; SOURCE LINE # 1572
00FF         ?C0277:
                                           ; SOURCE LINE # 1573
00FF 120000      R     LCALL   L?0751
0102 7056              JNZ     out
                                           ; SOURCE LINE # 1575
0104 120000      R     LCALL   L?0636
0107 120000      R     LCALL   L?0653
010A 20E013            JB      ACC.0,?C0279
                                           ; SOURCE LINE # 1576
010D 120000      R     LCALL   L?0644
                                           ; SOURCE LINE # 1577
0110 120000      R     LCALL   L?0767
                                           ; SOURCE LINE # 1578
0113 120000      E     LCALL   get_power_role
0116 EF                MOV     A,R7
0117 6041              JZ      out
                                           ; SOURCE LINE # 1579
0119 900A01            MOV     DPTR,#ucsi_errno
011C 7440              MOV     A,#040H
011E         ?C0575:
                                           ; SOURCE LINE # 1580
                                           ; SOURCE LINE # 1581
                                           ; SOURCE LINE # 1582
                                           ; SOURCE LINE # 1583
011E 8026              SJMP    ?C0577
0120         ?C0279:
                                           ; SOURCE LINE # 1585
0120         ?C0576:
                                           ; SOURCE LINE # 1586
                                           ; SOURCE LINE # 1587
                                           ; SOURCE LINE # 1588
                                           ; SOURCE LINE # 1589
0120 8029              SJMP    ?C0578
                                           ; SOURCE LINE # 1590
0122         ?C0282:
                                           ; SOURCE LINE # 1591
0122 120000      R     LCALL   L?0749
0125 7033              JNZ     out
                                           ; SOURCE LINE # 1593
0127 120000      R     LCALL   L?0636
012A 120000      R     LCALL   L?0653
012D 20E01B            JB      ACC.0,?C0284
                                           ; SOURCE LINE # 1594
0130 120000      R     LCALL   L?0644
                                           ; SOURCE LINE # 1595
0133 120000      R     LCALL   L?0767
                                           ; SOURCE LINE # 1596
0136 120000      R     LCALL   L?0705
                                           ; SOURCE LINE # 1597
0139 120000      E     LCALL   get_power_role
013C EF                MOV     A,R7
013D 6401              XRL     A,#01H
013F 6019              JZ      out
                                           ; SOURCE LINE # 1598
0141 900A01            MOV     DPTR,#ucsi_errno
0144 7440              MOV     A,#040H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 114 

0146         ?C0577:
                                           ; SOURCE LINE # 1599
                                           ; SOURCE LINE # 1600
0146 120000      R     LCALL   L?0681
                                           ; SOURCE LINE # 1601
                                           ; SOURCE LINE # 1602
0149 800F              SJMP    out
014B         ?C0284:
                                           ; SOURCE LINE # 1603
014B         ?C0578:
014B 744B              MOV     A,#04BH
                                           ; SOURCE LINE # 1604
014D 120000      R     LCALL   L?0766
                                           ; SOURCE LINE # 1605
                                           ; SOURCE LINE # 1606
                                           ; SOURCE LINE # 1607
0150 8008              SJMP    out
                                           ; SOURCE LINE # 1608
0152         ?C0287:
                                           ; SOURCE LINE # 1609
0152 900A01            MOV     DPTR,#ucsi_errno
0155 7401              MOV     A,#01H
                                           ; SOURCE LINE # 1610
0157 120000      R     LCALL   L?0765
                                           ; SOURCE LINE # 1611
                                           ; SOURCE LINE # 1612
                                           ; SOURCE LINE # 1614
015A         out:
                                           ; SOURCE LINE # 1615
015A 120000      R     LCALL   set_pdr_ack
                                           ; SOURCE LINE # 1617
015D 900A77            MOV     DPTR,#result
0160 E0                MOVX    A,@DPTR
0161 FF                MOV     R7,A
                                           ; SOURCE LINE # 1618
0162         ?C0255:
0162 22                RET     
0163         L?0708:
0163 7F10              MOV     R7,#010H
0165 120000      E     LCALL   _send_pd_msg
0168 7F32              MOV     R7,#032H
016A 120000      E     LCALL   _DelayXms
016D 22                RET     
016E         L?0767:
016E 7F10              MOV     R7,#010H
0170 120000      E     LCALL   _send_pd_msg
0173 7F32              MOV     R7,#032H
0175 120000      E     LCALL   _DelayXms
0178 22                RET     
             ; FUNCTION ppm_set_pdr (END)

             ; FUNCTION ppm_set_uom (BEGIN)
                                           ; SOURCE LINE # 1629
                                           ; SOURCE LINE # 1630
                                           ; SOURCE LINE # 1632
                                           ; SOURCE LINE # 1635
0000 120000      R     LCALL   L?0650
0003 E4                CLR     A
0004 9400              SUBB    A,#00H
0006 4007              JC      ?C0291
                                           ; SOURCE LINE # 1636
0008 900A01            MOV     DPTR,#ucsi_errno
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 115 

000B 7402              MOV     A,#02H
                                           ; SOURCE LINE # 1637
                                           ; SOURCE LINE # 1638
000D 801A              SJMP    ?C0579
                                           ; SOURCE LINE # 1639
000F         ?C0291:
                                           ; SOURCE LINE # 1641
                                           ; SOURCE LINE # 1643
000F 120000      R     LCALL   L?0674
0012 6019              JZ      ?C0293
0014 EF                MOV     A,R7
0015 7807              MOV     R0,#07H
0017         ?C0548:
0017 CE                XCH     A,R6
0018 C3                CLR     C
0019 13                RRC     A
001A CE                XCH     A,R6
001B 13                RRC     A
001C D8F9              DJNZ    R0,?C0548
001E 5407              ANL     A,#07H
0020 6401              XRL     A,#01H
0022 6009              JZ      ?C0293
                                           ; SOURCE LINE # 1644
0024 900A01            MOV     DPTR,#ucsi_errno
0027 7404              MOV     A,#04H
0029         ?C0579:
                                           ; SOURCE LINE # 1645
                                           ; SOURCE LINE # 1646
0029 120000      R     LCALL   L?0699
002C 22                RET     
                                           ; SOURCE LINE # 1647
002D         ?C0293:
                                           ; SOURCE LINE # 1648
002D 900A78            MOV     DPTR,#port_index
0030 E0                MOVX    A,@DPTR
0031 F9                MOV     R1,A
0032 120000      R     LCALL   L?0706
                                           ; SOURCE LINE # 1650
0035 120000      R     LCALL   L?0764
                                           ; SOURCE LINE # 1651
0038 900DBC            MOV     DPTR,#ppm2bios+0AH
003B E0                MOVX    A,@DPTR
003C FE                MOV     R6,A
003D A3                INC     DPTR
003E E0                MOVX    A,@DPTR
003F 7807              MOV     R0,#07H
0041         ?C0549:
0041 CE                XCH     A,R6
0042 C3                CLR     C
0043 13                RRC     A
0044 CE                XCH     A,R6
0045 13                RRC     A
0046 D8F9              DJNZ    R0,?C0549
0048 7E00              MOV     R6,#00H
004A 5407              ANL     A,#07H
004C FF                MOV     R7,A
004D 24FD              ADD     A,#0FDH
004F 6010              JZ      ?C0300
0051 2402              ADD     A,#02H
0053 24FA              ADD     A,#0FAH
0055 5002              JNC     ?C0299
0057 8008              SJMP    ?C0300
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 116 

                                           ; SOURCE LINE # 1652
                                           ; SOURCE LINE # 1653
                                           ; SOURCE LINE # 1654
                                           ; SOURCE LINE # 1655
                                           ; SOURCE LINE # 1656
0059         ?C0299:
                                           ; SOURCE LINE # 1657
0059 E9                MOV     A,R1
005A 120000      R     LCALL   L?0706
005D EF                MOV     A,R7
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1671
005F 8003              SJMP    ?C0294
                                           ; SOURCE LINE # 1672
0061         ?C0300:
                                           ; SOURCE LINE # 1673
                                           ; SOURCE LINE # 1674
                                           ; SOURCE LINE # 1675
0061 120000      R     LCALL   L?0679
                                           ; SOURCE LINE # 1676
                                           ; SOURCE LINE # 1677
0064         ?C0294:
                                           ; SOURCE LINE # 1679
0064 7F08              MOV     R7,#08H
0066 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1680
0069 120000      R     LCALL   L?0636
006C 120000      R     LCALL   L?0707
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1681
0074 120000      R     LCALL   set_uor_ack
                                           ; SOURCE LINE # 1682
0077 900A77            MOV     DPTR,#result
007A E0                MOVX    A,@DPTR
007B B40114            CJNE    A,#01H,?C0301
007E A3                INC     DPTR
007F E0                MOVX    A,@DPTR
0080 120000      R     LCALL   L?0641
0083 700D              JNZ     ?C0301
                                           ; SOURCE LINE # 1683
                                           ; SOURCE LINE # 1684
0085 7FE5              MOV     R7,#0E5H
0087 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1685
008A 900A78            MOV     DPTR,#port_index
008D E0                MOVX    A,@DPTR
008E FF                MOV     R7,A
008F 120000      E     LCALL   _chip_power_on
                                           ; SOURCE LINE # 1686
0092         ?C0301:
                                           ; SOURCE LINE # 1688
0092 900A77            MOV     DPTR,#result
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
                                           ; SOURCE LINE # 1689
0097         ?C0292:
0097 22                RET     
             ; FUNCTION ppm_set_uom (END)

             ; FUNCTION ppm_set_uor_process (BEGIN)
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 117 

                                           ; SOURCE LINE # 1692
                                           ; SOURCE LINE # 1693
                                           ; SOURCE LINE # 1694
0000 900000      R     MOV     DPTR,#ret
0003 7402              MOV     A,#02H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1696
0006 900A2C            MOV     DPTR,#ucsi_command_process_delay
0009 E0                MOVX    A,@DPTR
000A B43208            CJNE    A,#032H,?C0302
                                           ; SOURCE LINE # 1697
000D 120000      R     LCALL   L?0644
0010 7F11              MOV     R7,#011H
0012 120000      E     LCALL   _send_pd_msg
0015         ?C0302:
                                           ; SOURCE LINE # 1698
0015 900A2C            MOV     DPTR,#ucsi_command_process_delay
0018 E0                MOVX    A,@DPTR
0019 7003              JNZ     $ + 5H
001B 020000      R     LJMP    ?C0303
                                           ; SOURCE LINE # 1699
001E 14                DEC     A
001F F0                MOVX    @DPTR,A
0020 7073              JNZ     ?C0304
                                           ; SOURCE LINE # 1700
0022 120000      R     LCALL   L?0705
                                           ; SOURCE LINE # 1701
0025 120000      E     LCALL   get_data_role
0028 EF                MOV     A,R7
0029 600D              JZ      ?C0307
002B 14                DEC     A
002C 7012              JNZ     ?C0305
                                           ; SOURCE LINE # 1702
002E         ?C0306:
                                           ; SOURCE LINE # 1703
002E 7401              MOV     A,#01H
                                           ; SOURCE LINE # 1704
0030 120000      R     LCALL   L?0659
0033 7402              MOV     A,#02H
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1705
0036 8008              SJMP    ?C0305
                                           ; SOURCE LINE # 1706
0038         ?C0307:
                                           ; SOURCE LINE # 1707
0038 7402              MOV     A,#02H
                                           ; SOURCE LINE # 1708
003A 120000      R     LCALL   L?0659
003D 7401              MOV     A,#01H
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1709
                                           ; SOURCE LINE # 1710
0040         ?C0305:
                                           ; SOURCE LINE # 1711
0040 900A7F            MOV     DPTR,#port_id
0043 120000      R     LCALL   L?0648
0046 120000      R     LCALL   L?0669
0049 E0                MOVX    A,@DPTR
004A FE                MOV     R6,A
004B 900A7A            MOV     DPTR,#role
004E E0                MOVX    A,@DPTR
004F FD                MOV     R5,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 118 

0050 EE                MOV     A,R6
0051 5D                ANL     A,R5
0052 6036              JZ      ?C0308
                                           ; SOURCE LINE # 1712
0054 EF                MOV     A,R7
0055 120000      R     LCALL   L?0634
0058 E0                MOVX    A,@DPTR
0059 FF                MOV     R7,A
005A C4                SWAP    A
005B 540F              ANL     A,#0FH
005D 900A7F            MOV     DPTR,#port_id
0060 30E011            JNB     ACC.0,?C0309
                                           ; SOURCE LINE # 1713
0063 120000      R     LCALL   L?0630
0066 E4                CLR     A
0067 F0                MOVX    @DPTR,A
0068 A3                INC     DPTR
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1714
006A EF                MOV     A,R7
006B 120000      R     LCALL   L?0634
006E E0                MOVX    A,@DPTR
006F 4410              ORL     A,#010H
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1715
0072 800B              SJMP    ?C0310
0074         ?C0309:
                                           ; SOURCE LINE # 1716
0074 E0                MOVX    A,@DPTR
0075 120000      R     LCALL   L?0631
0078 E4                CLR     A
0079 F0                MOVX    @DPTR,A
007A A3                INC     DPTR
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1717
007C 120000      R     LCALL   cancel_all_timer
                                           ; SOURCE LINE # 1718
007F         ?C0310:
                                           ; SOURCE LINE # 1719
007F 120000      R     LCALL   set_uor_ack
                                           ; SOURCE LINE # 1720
0082 900000      R     MOV     DPTR,#ret
0085 7401              MOV     A,#01H
0087 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1721
0088 8011              SJMP    ?C0303
008A         ?C0308:
                                           ; SOURCE LINE # 1722
                                           ; SOURCE LINE # 1723
008A 120000      R     LCALL   L?0727
                                           ; SOURCE LINE # 1724
008D 900000      R     MOV     DPTR,#ret
0090 7402              MOV     A,#02H
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1725
                                           ; SOURCE LINE # 1726
0093 8006              SJMP    ?C0303
0095         ?C0304:
                                           ; SOURCE LINE # 1727
0095 900000      R     MOV     DPTR,#ret
0098 7405              MOV     A,#05H
009A F0                MOVX    @DPTR,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 119 

                                           ; SOURCE LINE # 1728
                                           ; SOURCE LINE # 1729
009B         ?C0303:
                                           ; SOURCE LINE # 1730
009B 900000      R     MOV     DPTR,#ret
009E E0                MOVX    A,@DPTR
009F FF                MOV     R7,A
                                           ; SOURCE LINE # 1731
00A0         ?C0313:
00A0 22                RET     
             ; FUNCTION ppm_set_uor_process (END)

             ; FUNCTION ppm_set_uor (BEGIN)
                                           ; SOURCE LINE # 1740
                                           ; SOURCE LINE # 1741
                                           ; SOURCE LINE # 1744
                                           ; SOURCE LINE # 1747
0000 120000      R     LCALL   L?0650
0003 E4                CLR     A
0004 9400              SUBB    A,#00H
0006 4008              JC      ?C0317
                                           ; SOURCE LINE # 1748
0008 900A01            MOV     DPTR,#ucsi_errno
000B 7402              MOV     A,#02H
                                           ; SOURCE LINE # 1749
                                           ; SOURCE LINE # 1750
000D 020000      R     LJMP    ?C0581
                                           ; SOURCE LINE # 1751
0010         ?C0317:
                                           ; SOURCE LINE # 1753
                                           ; SOURCE LINE # 1755
0010 120000      R     LCALL   L?0640
0013 7008              JNZ     ?C0319
0015 900A01            MOV     DPTR,#ucsi_errno
0018 7404              MOV     A,#04H
001A         ?C0580:
001A 020000      R     LJMP    ?C0581
001D         ?C0319:
                                           ; SOURCE LINE # 1756
001D 120000      R     LCALL   L?0647
0020 120000      R     LCALL   L?0669
0023 E4                CLR     A
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1759
0025 900DBD            MOV     DPTR,#ppm2bios+0BH
0028 E0                MOVX    A,@DPTR
0029 30E707            JNB     ACC.7,?C0320
                                           ; SOURCE LINE # 1760
002C 120000      R     LCALL   L?0668
002F E0                MOVX    A,@DPTR
0030 4401              ORL     A,#01H
0032 F0                MOVX    @DPTR,A
0033         ?C0320:
                                           ; SOURCE LINE # 1761
0033 900DBC            MOV     DPTR,#ppm2bios+0AH
0036 E0                MOVX    A,@DPTR
0037 30E00A            JNB     ACC.0,?C0321
                                           ; SOURCE LINE # 1762
003A 120000      R     LCALL   L?0636
003D 120000      R     LCALL   L?0669
0040 E0                MOVX    A,@DPTR
0041 4402              ORL     A,#02H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 120 

0043 F0                MOVX    @DPTR,A
0044         ?C0321:
                                           ; SOURCE LINE # 1763
0044 900DBC            MOV     DPTR,#ppm2bios+0AH
0047 E0                MOVX    A,@DPTR
0048 30E10A            JNB     ACC.1,?C0322
                                           ; SOURCE LINE # 1764
004B 120000      R     LCALL   L?0636
004E 120000      R     LCALL   L?0669
0051 E0                MOVX    A,@DPTR
0052 4404              ORL     A,#04H
0054 F0                MOVX    @DPTR,A
0055         ?C0322:
                                           ; SOURCE LINE # 1766
0055 120000      R     LCALL   L?0647
0058 120000      R     LCALL   L?0675
005B 6011              JZ      ?C0323
005D 120000      R     LCALL   L?0668
0060 E0                MOVX    A,@DPTR
0061 6401              XRL     A,#01H
0063 6009              JZ      ?C0323
                                           ; SOURCE LINE # 1767
0065 900A01            MOV     DPTR,#ucsi_errno
0068 7404              MOV     A,#04H
006A         ?C0581:
                                           ; SOURCE LINE # 1768
                                           ; SOURCE LINE # 1769
006A 120000      R     LCALL   L?0699
006D 22                RET     
                                           ; SOURCE LINE # 1770
006E         ?C0323:
                                           ; SOURCE LINE # 1771
006E 120000      R     LCALL   L?0705
                                           ; SOURCE LINE # 1772
0071 120000      E     LCALL   get_data_role
0074 EF                MOV     A,R7
0075 6008              JZ      ?C0326
0077 14                DEC     A
0078 7008              JNZ     ?C0324
                                           ; SOURCE LINE # 1773
007A         ?C0325:
                                           ; SOURCE LINE # 1774
007A 120000      R     LCALL   L?0777
                                           ; SOURCE LINE # 1775
007D 8003              SJMP    ?C0324
                                           ; SOURCE LINE # 1776
007F         ?C0326:
                                           ; SOURCE LINE # 1777
007F 120000      R     LCALL   L?0779
                                           ; SOURCE LINE # 1778
                                           ; SOURCE LINE # 1779
0082         ?C0324:
                                           ; SOURCE LINE # 1781
0082 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 1782
0085 A3                INC     DPTR
0086 E0                MOVX    A,@DPTR
0087 900A7F            MOV     DPTR,#port_id
008A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1788
008B 120000      E     LCALL   send_source_sink_capability
                                           ; SOURCE LINE # 1790
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 121 

008E 120000      R     LCALL   L?0647
0091 120000      R     LCALL   L?0669
0094 E0                MOVX    A,@DPTR
0095 24FE              ADD     A,#0FEH
0097 602C              JZ      ?C0334
0099 24FE              ADD     A,#0FEH
009B 6049              JZ      ?C0340
009D 14                DEC     A
009E 6049              JZ      ?C0341
00A0 14                DEC     A
00A1 6064              JZ      ?C0347
00A3 2405              ADD     A,#05H
00A5 6003              JZ      $ + 5H
00A7 020000      R     LJMP    ?C0327
                                           ; SOURCE LINE # 1791
00AA         ?C0328:
                                           ; SOURCE LINE # 1792
00AA 120000      R     LCALL   L?0750
00AD 7013              JNZ     ?C0329
                                           ; SOURCE LINE # 1794
00AF 120000      R     LCALL   L?0652
00B2 20E02B            JB      ACC.0,?C0583
                                           ; SOURCE LINE # 1795
00B5 120000      R     LCALL   L?0644
                                           ; SOURCE LINE # 1796
                                           ; SOURCE LINE # 1798
00B8 120000      R     LCALL   L?0689
00BB 6401              XRL     A,#01H
00BD 6071              JZ      ?C0327
                                           ; SOURCE LINE # 1799
                                           ; SOURCE LINE # 1800
                                           ; SOURCE LINE # 1801
                                           ; SOURCE LINE # 1802
                                           ; SOURCE LINE # 1803
00BF 020000      R     LJMP    ?C0589
00C2         ?C0329:
                                           ; SOURCE LINE # 1808
                                           ; SOURCE LINE # 1809
00C2 020000      R     LJMP    ?C0591
                                           ; SOURCE LINE # 1810
00C5         ?C0334:
                                           ; SOURCE LINE # 1811
00C5 120000      R     LCALL   L?0752
00C8 7019              JNZ     ?C0335
                                           ; SOURCE LINE # 1813
00CA 120000      R     LCALL   L?0636
00CD 120000      R     LCALL   L?0653
00D0 20E00D            JB      ACC.0,?C0336
                                           ; SOURCE LINE # 1814
00D3 120000      R     LCALL   L?0644
                                           ; SOURCE LINE # 1815
                                           ; SOURCE LINE # 1817
00D6 120000      R     LCALL   L?0689
00D9 6402              XRL     A,#02H
00DB 6053              JZ      ?C0327
                                           ; SOURCE LINE # 1818
00DD         ?C0582:
                                           ; SOURCE LINE # 1819
                                           ; SOURCE LINE # 1820
                                           ; SOURCE LINE # 1821
                                           ; SOURCE LINE # 1822
00DD 020000      R     LJMP    ?C0589
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 122 

00E0         ?C0336:
                                           ; SOURCE LINE # 1823
00E0         ?C0583:
                                           ; SOURCE LINE # 1824
                                           ; SOURCE LINE # 1825
                                           ; SOURCE LINE # 1826
00E0 020000      R     LJMP    ?C0590
00E3         ?C0335:
                                           ; SOURCE LINE # 1827
00E3         ?C0584:
                                           ; SOURCE LINE # 1828
00E3 020000      R     LJMP    ?C0591
                                           ; SOURCE LINE # 1829
00E6         ?C0340:
                                           ; SOURCE LINE # 1831
00E6         ?C0587:
                                           ; SOURCE LINE # 1832
00E6 020000      R     LJMP    ?C0591
                                           ; SOURCE LINE # 1833
00E9         ?C0341:
                                           ; SOURCE LINE # 1834
00E9 120000      R     LCALL   L?0750
00EC 7017              JNZ     ?C0342
                                           ; SOURCE LINE # 1836
00EE 120000      R     LCALL   L?0636
00F1 120000      R     LCALL   L?0653
00F4 20E00C            JB      ACC.0,?C0343
                                           ; SOURCE LINE # 1837
00F7 120000      R     LCALL   L?0644
                                           ; SOURCE LINE # 1838
                                           ; SOURCE LINE # 1839
00FA 120000      R     LCALL   L?0743
00FD 6401              XRL     A,#01H
00FF 602F              JZ      ?C0327
                                           ; SOURCE LINE # 1840
0101         ?C0585:
                                           ; SOURCE LINE # 1841
                                           ; SOURCE LINE # 1842
                                           ; SOURCE LINE # 1843
                                           ; SOURCE LINE # 1844
0101 801C              SJMP    ?C0589
0103         ?C0343:
                                           ; SOURCE LINE # 1845
0103         ?C0586:
                                           ; SOURCE LINE # 1846
                                           ; SOURCE LINE # 1847
                                           ; SOURCE LINE # 1848
0103 8021              SJMP    ?C0590
0105         ?C0342:
                                           ; SOURCE LINE # 1849
0105         ?C0588:
                                           ; SOURCE LINE # 1850
0105 8026              SJMP    ?C0591
                                           ; SOURCE LINE # 1851
0107         ?C0347:
                                           ; SOURCE LINE # 1852
0107 120000      R     LCALL   L?0752
010A 7021              JNZ     ?C0348
                                           ; SOURCE LINE # 1854
010C 120000      R     LCALL   L?0636
010F 120000      R     LCALL   L?0653
0112 20E011            JB      ACC.0,?C0349
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 123 

                                           ; SOURCE LINE # 1855
0115 120000      R     LCALL   L?0644
                                           ; SOURCE LINE # 1856
                                           ; SOURCE LINE # 1857
0118 120000      R     LCALL   L?0743
011B 6402              XRL     A,#02H
011D 6011              JZ      ?C0327
                                           ; SOURCE LINE # 1858
011F         ?C0589:
011F 7440              MOV     A,#040H
                                           ; SOURCE LINE # 1859
                                           ; SOURCE LINE # 1860
0121 120000      R     LCALL   L?0680
                                           ; SOURCE LINE # 1861
                                           ; SOURCE LINE # 1862
0124 800A              SJMP    ?C0327
0126         ?C0349:
                                           ; SOURCE LINE # 1863
0126         ?C0590:
0126 7432              MOV     A,#032H
                                           ; SOURCE LINE # 1864
0128 120000      R     LCALL   L?0766
                                           ; SOURCE LINE # 1865
                                           ; SOURCE LINE # 1866
012B 8003              SJMP    ?C0327
012D         ?C0348:
                                           ; SOURCE LINE # 1867
012D         ?C0591:
012D 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 1868
                                           ; SOURCE LINE # 1869
0130         ?C0327:
                                           ; SOURCE LINE # 1871
0130 120000      R     LCALL   set_uor_ack
                                           ; SOURCE LINE # 1873
0133 900A77            MOV     DPTR,#result
0136 E0                MOVX    A,@DPTR
0137 FF                MOV     R7,A
                                           ; SOURCE LINE # 1874
0138         ?C0318:
0138 22                RET     
0139         L?0689:
0139 7F11              MOV     R7,#011H
013B 120000      E     LCALL   _send_pd_msg
013E 7F32              MOV     R7,#032H
0140 120000      E     LCALL   _DelayXms
0143 120000      E     LCALL   get_data_role
0146 EF                MOV     A,R7
0147 22                RET     
0148         L?0743:
0148 7F11              MOV     R7,#011H
014A 120000      E     LCALL   _send_pd_msg
014D 7F32              MOV     R7,#032H
014F 120000      E     LCALL   _DelayXms
0152 120000      E     LCALL   get_data_role
0155 EF                MOV     A,R7
0156 22                RET     
             ; FUNCTION ppm_set_uor (END)

             ; FUNCTION ppm_get_connector_capability (BEGIN)
                                           ; SOURCE LINE # 1884
                                           ; SOURCE LINE # 1885
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 124 

                                           ; SOURCE LINE # 1886
0000 900DBC            MOV     DPTR,#ppm2bios+0AH
0003 120000      R     LCALL   L?0651
0006 4006              JC      ?C0353
                                           ; SOURCE LINE # 1887
                                           ; SOURCE LINE # 1888
0008 120000      R     LCALL   L?0655
                                           ; SOURCE LINE # 1889
000B 7F02              MOV     R7,#02H
000D 22                RET     
                                           ; SOURCE LINE # 1890
000E         ?C0353:
                                           ; SOURCE LINE # 1892
000E 120000      R     LCALL   L?0701
                                           ; SOURCE LINE # 1894
0011 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 1898
0013 120000      R     LCALL   L?0635
0016 120000      R     LCALL   L?0675
0019 FD                MOV     R5,A
001A 900DC2            MOV     DPTR,#ppm2bios+010H
001D 6005              JZ      ?C0355
                                           ; SOURCE LINE # 1899
001F 7479              MOV     A,#079H
0021 F0                MOVX    @DPTR,A
0022 8003              SJMP    ?C0356
0024         ?C0355:
                                           ; SOURCE LINE # 1907
0024 7467              MOV     A,#067H
0026 F0                MOVX    @DPTR,A
0027         ?C0356:
                                           ; SOURCE LINE # 1912
0027 900DC2            MOV     DPTR,#ppm2bios+010H
002A E0                MOVX    A,@DPTR
002B FC                MOV     R4,A
002C EC                MOV     A,R4
002D 4480              ORL     A,#080H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1914
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 4401              ORL     A,#01H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1915
0035 ED                MOV     A,R5
0036 7004              JNZ     ?C0357
                                           ; SOURCE LINE # 1916
0038 E0                MOVX    A,@DPTR
0039 4402              ORL     A,#02H
003B F0                MOVX    @DPTR,A
003C         ?C0357:
                                           ; SOURCE LINE # 1919
003C 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 1920
003F 120000      R     LCALL   get_connector_capability_ack
                                           ; SOURCE LINE # 1922
0042 900A77            MOV     DPTR,#result
0045 E0                MOVX    A,@DPTR
0046 FF                MOV     R7,A
                                           ; SOURCE LINE # 1923
0047         ?C0354:
0047 22                RET     
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 125 

             ; FUNCTION ppm_get_connector_capability (END)

             ; FUNCTION ppm_get_capability (BEGIN)
                                           ; SOURCE LINE # 1933
                                           ; SOURCE LINE # 1934
                                           ; SOURCE LINE # 1935
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 1936
0003 120000      R     LCALL   L?0713
                                           ; SOURCE LINE # 1938
0006 900DC2            MOV     DPTR,#ppm2bios+010H
0009 E0                MOVX    A,@DPTR
000A 54FE              ANL     A,#0FEH
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1939
000D 4402              ORL     A,#02H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1940
0010 4404              ORL     A,#04H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1941
0013 4440              ORL     A,#040H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1942
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 4440              ORL     A,#040H
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1943
001B 900DC6            MOV     DPTR,#ppm2bios+014H
001E E0                MOVX    A,@DPTR
001F 5480              ANL     A,#080H
0021 4401              ORL     A,#01H
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1945
0024 A3                INC     DPTR
0025 74FF              MOV     A,#0FFH
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1948
0028 900DCA            MOV     DPTR,#ppm2bios+018H
002B 7402              MOV     A,#02H
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1950
002E E4                CLR     A
002F 900DCC            MOV     DPTR,#ppm2bios+01AH
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1951
0035 A3                INC     DPTR
0036 7402              MOV     A,#02H
0038 F0                MOVX    @DPTR,A
0039 A3                INC     DPTR
003A E4                CLR     A
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1952
003C A3                INC     DPTR
003D 04                INC     A
003E F0                MOVX    @DPTR,A
003F A3                INC     DPTR
0040 7410              MOV     A,#010H
0042 F0                MOVX    @DPTR,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 126 

                                           ; SOURCE LINE # 1954
0043 900DCE            MOV     DPTR,#ppm2bios+01CH
0046 120000      R     LCALL   L?0678
0049 900DCF            MOV     DPTR,#ppm2bios+01DH
004C E0                MOVX    A,@DPTR
004D 900DCE            MOV     DPTR,#ppm2bios+01CH
0050 F0                MOVX    @DPTR,A
0051 A3                INC     DPTR
0052 EF                MOV     A,R7
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1955
0054 A3                INC     DPTR
0055 120000      R     LCALL   L?0678
0058 900DD1            MOV     DPTR,#ppm2bios+01FH
005B E0                MOVX    A,@DPTR
005C 900DD0            MOV     DPTR,#ppm2bios+01EH
005F F0                MOVX    @DPTR,A
0060 A3                INC     DPTR
0061 EF                MOV     A,R7
                                           ; SOURCE LINE # 1958
0062 120000      R     LCALL   L?0664
                                           ; SOURCE LINE # 1959
0065 120000      R     LCALL   get_capability_ack
                                           ; SOURCE LINE # 1961
0068 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 1962
006A         ?C0364:
006A 22                RET     
             ; FUNCTION ppm_get_capability (END)

             ; FUNCTION ppm_init (BEGIN)
                                           ; SOURCE LINE # 1964
                                           ; SOURCE LINE # 1965
                                           ; SOURCE LINE # 1966
0000 E4                CLR     A
0001 900A1F            MOV     DPTR,#i
0004 F0                MOVX    @DPTR,A
0005         ?C0365:
                                           ; SOURCE LINE # 1967
                                           ; SOURCE LINE # 1968
0005 7FE4              MOV     R7,#0E4H
0007 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1969
000A 900A1F            MOV     DPTR,#i
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 120000      E     LCALL   _chip_power_on
                                           ; SOURCE LINE # 1970
0012 7FE8              MOV     R7,#0E8H
0014 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1971
0017 7E00              MOV     R6,#00H
0019 7F02              MOV     R7,#02H
001B EE                MOV     A,R6
001C C0E0              PUSH    ACC
001E EF                MOV     A,R7
001F C0E0              PUSH    ACC
0021 900A1F            MOV     DPTR,#i
0024 120000      R     LCALL   L?0729
0027 D0E0              POP     ACC
0029 FF                MOV     R7,A
002A D0E0              POP     ACC
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 127 

002C FE                MOV     R6,A
002D 120000      E     LCALL   ?C?MEMSET
                                           ; SOURCE LINE # 1972
0030 900A1F            MOV     DPTR,#i
0033 120000      R     LCALL   L?0648
0036 120000      R     LCALL   L?0693
0039 7404              MOV     A,#04H
                                           ; SOURCE LINE # 1973
003B 120000      R     LCALL   L?0639
003E 120000      R     LCALL   L?0667
0041 7404              MOV     A,#04H
                                           ; SOURCE LINE # 1974
0043 120000      R     LCALL   L?0639
0046 120000      R     LCALL   L?0707
0049 7404              MOV     A,#04H
                                           ; SOURCE LINE # 1975
004B 120000      R     LCALL   L?0639
004E 120000      R     LCALL   L?0669
0051 7404              MOV     A,#04H
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1976
0054 7FE9              MOV     R7,#0E9H
0056 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1977
0059 120000      R     LCALL   L?0739
005C E0                MOVX    A,@DPTR
005D C3                CLR     C
005E 9401              SUBB    A,#01H
0060 40A3              JC      ?C0365
                                           ; SOURCE LINE # 1978
0062         ?C0368:
0062 22                RET     
             ; FUNCTION ppm_init (END)

             ; FUNCTION ppm_init_source_sink_capability (BEGIN)
                                           ; SOURCE LINE # 1980
                                           ; SOURCE LINE # 1981
                                           ; SOURCE LINE # 1982
0000 E4                CLR     A
0001 900A7F            MOV     DPTR,#port_id
0004 F0                MOVX    @DPTR,A
0005         ?C0369:
0005 900A7F            MOV     DPTR,#port_id
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A C3                CLR     C
000B 9401              SUBB    A,#01H
000D 5012              JNC     ?C0373
                                           ; SOURCE LINE # 1983
000F EF                MOV     A,R7
0010 120000      R     LCALL   L?0641
0013 B40103            CJNE    A,#01H,?C0371
                                           ; SOURCE LINE # 1984
0016 120000      E     LCALL   send_source_sink_capability
0019         ?C0371:
0019 900A7F            MOV     DPTR,#port_id
001C E0                MOVX    A,@DPTR
001D 04                INC     A
001E F0                MOVX    @DPTR,A
001F 80E4              SJMP    ?C0369
                                           ; SOURCE LINE # 1985
0021         ?C0373:
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 128 

0021 22                RET     
             ; FUNCTION ppm_init_source_sink_capability (END)

             ; FUNCTION ppm_reset (BEGIN)
                                           ; SOURCE LINE # 1995
                                           ; SOURCE LINE # 1996
                                           ; SOURCE LINE # 1997
0000 7F02              MOV     R7,#02H
0002 7A0A              MOV     R2,#HIGH ne
0004 792F              MOV     R1,#LOW ne
0006 120000      R     LCALL   L?0714
                                           ; SOURCE LINE # 1999
0009 120000      R     LCALL   cancel_all_timer
                                           ; SOURCE LINE # 2000
000C 120000      R     LCALL   ppm_init
                                           ; SOURCE LINE # 2001
000F 120000      R     LCALL   ppm_init_source_sink_capability
                                           ; SOURCE LINE # 2002
0012 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 2003
0015 120000      R     LCALL   reset_ack
                                           ; SOURCE LINE # 2004
0018 120000      R     LCALL   L?0757
001B C0E0              PUSH    ACC
001D E9                MOV     A,R1
001E C0E0              PUSH    ACC
0020 120000      R     LCALL   L?0780
0023 D0E0              POP     ACC
0025 F9                MOV     R1,A
0026 D0E0              POP     ACC
0028 120000      R     LCALL   L?0731
                                           ; SOURCE LINE # 2007
002B 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2008
002D         ?C0374:
002D 22                RET     
             ; FUNCTION ppm_reset (END)

             ; FUNCTION ppm_cancel (BEGIN)
                                           ; SOURCE LINE # 2018
                                           ; SOURCE LINE # 2019
                                           ; SOURCE LINE # 2020
0000 900DBA            MOV     DPTR,#ppm2bios+08H
0003 E0                MOVX    A,@DPTR
0004 900A77            MOV     DPTR,#result
0007 6008              JZ      ?C0375
                                           ; SOURCE LINE # 2021
0009 7401              MOV     A,#01H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2022
000C 120000      R     LCALL   cancel_ack
                                           ; SOURCE LINE # 2023
000F 800C              SJMP    ?C0376
0011         ?C0375:
                                           ; SOURCE LINE # 2024
0011 7402              MOV     A,#02H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2025
0014 120000      R     LCALL   cancel_ack
                                           ; SOURCE LINE # 2026
0017 900A77            MOV     DPTR,#result
001A 7403              MOV     A,#03H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 129 

001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2027
001D         ?C0376:
                                           ; SOURCE LINE # 2029
001D 900A77            MOV     DPTR,#result
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
                                           ; SOURCE LINE # 2030
0022         ?C0377:
0022 22                RET     
             ; FUNCTION ppm_cancel (END)

             ; FUNCTION ppm_ack_cc_ci (BEGIN)
                                           ; SOURCE LINE # 2040
                                           ; SOURCE LINE # 2041
                                           ; SOURCE LINE # 2048
0000 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 2049
0003 120000      R     LCALL   ack_cc_ci_ack
                                           ; SOURCE LINE # 2051
0006 900DBC            MOV     DPTR,#ppm2bios+0AH
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B 30E005            JNB     ACC.0,?C0378
                                           ; SOURCE LINE # 2052
000E E4                CLR     A
000F 900A16            MOV     DPTR,#connector_change_need_ack
0012 F0                MOVX    @DPTR,A
0013         ?C0378:
                                           ; SOURCE LINE # 2054
0013 EF                MOV     A,R7
0014 C3                CLR     C
0015 13                RRC     A
0016 30E005            JNB     ACC.0,?C0379
                                           ; SOURCE LINE # 2055
0019 E4                CLR     A
001A 900A18            MOV     DPTR,#command_complete_need_ack
001D F0                MOVX    @DPTR,A
001E         ?C0379:
                                           ; SOURCE LINE # 2057
001E 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2058
0020         ?C0380:
0020 22                RET     
             ; FUNCTION ppm_ack_cc_ci (END)

             ; FUNCTION ppm_connector_reset_process (BEGIN)
                                           ; SOURCE LINE # 2059
                                           ; SOURCE LINE # 2060
                                           ; SOURCE LINE # 2061
;---- Variable 'ret' assigned to Register 'R7' ----
0000 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 2062
0002 900A2C            MOV     DPTR,#ucsi_command_process_delay
0005 E0                MOVX    A,@DPTR
0006 601F              JZ      ?C0381
                                           ; SOURCE LINE # 2063
0008 14                DEC     A
0009 F0                MOVX    @DPTR,A
000A 7019              JNZ     ?C0382
                                           ; SOURCE LINE # 2064
000C 900A78            MOV     DPTR,#port_index
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 130 

000F E0                MOVX    A,@DPTR
0010 120000      R     LCALL   L?0631
0013 120000      R     LCALL   L?0696
0016 30E007            JNB     ACC.0,?C0383
                                           ; SOURCE LINE # 2065
0019 120000      R     LCALL   connector_reset_ack
                                           ; SOURCE LINE # 2066
001C 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2067
001E 8007              SJMP    ?C0381
0020         ?C0383:
                                           ; SOURCE LINE # 2068
                                           ; SOURCE LINE # 2069
                                           ; SOURCE LINE # 2070
0020 120000      R     LCALL   L?0698
                                           ; SOURCE LINE # 2071
                                           ; SOURCE LINE # 2072
0023 8002              SJMP    ?C0381
0025         ?C0382:
                                           ; SOURCE LINE # 2073
0025 7F05              MOV     R7,#05H
                                           ; SOURCE LINE # 2074
                                           ; SOURCE LINE # 2075
0027         ?C0381:
                                           ; SOURCE LINE # 2076
                                           ; SOURCE LINE # 2077
0027         ?C0386:
0027 22                RET     
             ; FUNCTION ppm_connector_reset_process (END)

             ; FUNCTION ppm_connector_reset (BEGIN)
                                           ; SOURCE LINE # 2087
                                           ; SOURCE LINE # 2088
                                           ; SOURCE LINE # 2089
0000 900DBC            MOV     DPTR,#ppm2bios+0AH
0003 E0                MOVX    A,@DPTR
0004 547F              ANL     A,#07FH
0006 FE                MOV     R6,A
0007 14                DEC     A
0008 900A78            MOV     DPTR,#port_index
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2091
000C EE                MOV     A,R6
000D D3                SETB    C
000E 9401              SUBB    A,#01H
0010 4007              JC      ?C0387
                                           ; SOURCE LINE # 2092
0012 900A01            MOV     DPTR,#ucsi_errno
0015 7402              MOV     A,#02H
                                           ; SOURCE LINE # 2093
                                           ; SOURCE LINE # 2094
0017 8019              SJMP    ?C0592
                                           ; SOURCE LINE # 2095
0019         ?C0387:
                                           ; SOURCE LINE # 2098
0019 900000      E     MOV     DPTR,#GPDRI
001C E0                MOVX    A,@DPTR
001D 20E40D            JB      ACC.4,?C0390
0020 E0                MOVX    A,@DPTR
0021 20E412            JB      ACC.4,?C0389
0024 900000      E     MOV     DPTR,#BAT1_RSOC
0027 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 131 

0028 D3                SETB    C
0029 9403              SUBB    A,#03H
002B 5009              JNC     ?C0389
002D         ?C0390:
                                           ; SOURCE LINE # 2099
002D 900A01            MOV     DPTR,#ucsi_errno
0030 7420              MOV     A,#020H
0032         ?C0592:
                                           ; SOURCE LINE # 2100
                                           ; SOURCE LINE # 2101
0032 120000      R     LCALL   L?0699
0035 22                RET     
                                           ; SOURCE LINE # 2102
0036         ?C0389:
                                           ; SOURCE LINE # 2104
0036 120000      R     LCALL   L?0665
                                           ; SOURCE LINE # 2105
0039 A3                INC     DPTR
003A E0                MOVX    A,@DPTR
003B 900A7F            MOV     DPTR,#port_id
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2107
003F 900DBC            MOV     DPTR,#ppm2bios+0AH
0042 E0                MOVX    A,@DPTR
0043 120000      R     LCALL   L?0697
0046 7B00              MOV     R3,#00H
0048 7A00              MOV     R2,#00H
004A 7900              MOV     R1,#00H
004C 30E007            JNB     ACC.0,?C0391
                                           ; SOURCE LINE # 2108
004F 120000      R     LCALL   L?0645
0052 7FF2              MOV     R7,#0F2H
0054 8005              SJMP    ?C0593
0056         ?C0391:
                                           ; SOURCE LINE # 2110
0056 120000      R     LCALL   L?0645
0059 7FF1              MOV     R7,#0F1H
005B         ?C0593:
005B 120000      E     LCALL   _send_pd_msg
005E         ?C0392:
                                           ; SOURCE LINE # 2112
005E 120000      R     LCALL   connector_reset_ack
                                           ; SOURCE LINE # 2114
0061 900A77            MOV     DPTR,#result
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
                                           ; SOURCE LINE # 2115
0066         ?C0388:
0066 22                RET     
             ; FUNCTION ppm_connector_reset (END)

             ; FUNCTION ppm_set_notification_enable (BEGIN)
                                           ; SOURCE LINE # 2125
                                           ; SOURCE LINE # 2126
                                           ; SOURCE LINE # 2127
0000 900DBC            MOV     DPTR,#ppm2bios+0AH
0003 E0                MOVX    A,@DPTR
0004 900A2F            MOV     DPTR,#ne
                                           ; SOURCE LINE # 2128
0007 120000      R     LCALL   L?0718
                                           ; SOURCE LINE # 2129
000A 900DBC            MOV     DPTR,#ppm2bios+0AH
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 132 

000D E0                MOVX    A,@DPTR
000E FE                MOV     R6,A
000F 5404              ANL     A,#04H
0011 FD                MOV     R5,A
0012 EF                MOV     A,R7
0013 54FB              ANL     A,#0FBH
0015 4D                ORL     A,R5
0016 FF                MOV     R7,A
0017 900A2F            MOV     DPTR,#ne
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2130
001B EE                MOV     A,R6
001C 5420              ANL     A,#020H
001E FE                MOV     R6,A
001F EF                MOV     A,R7
0020 54DF              ANL     A,#0DFH
0022 4E                ORL     A,R6
0023 FF                MOV     R7,A
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2131
0025 900DBC            MOV     DPTR,#ppm2bios+0AH
0028 E0                MOVX    A,@DPTR
0029 900A2F            MOV     DPTR,#ne
                                           ; SOURCE LINE # 2132
002C 120000      R     LCALL   L?0722
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2133
0030 900DBD            MOV     DPTR,#ppm2bios+0BH
0033 E0                MOVX    A,@DPTR
0034 900A30            MOV     DPTR,#ne+01H
                                           ; SOURCE LINE # 2134
0037 120000      R     LCALL   L?0718
                                           ; SOURCE LINE # 2135
003A 900DBD            MOV     DPTR,#ppm2bios+0BH
003D E0                MOVX    A,@DPTR
003E FE                MOV     R6,A
003F 5408              ANL     A,#08H
0041 FD                MOV     R5,A
0042 EF                MOV     A,R7
0043 54F7              ANL     A,#0F7H
0045 4D                ORL     A,R5
0046 FF                MOV     R7,A
0047 900A30            MOV     DPTR,#ne+01H
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2136
004B EE                MOV     A,R6
004C 5410              ANL     A,#010H
004E FE                MOV     R6,A
004F EF                MOV     A,R7
0050 54EF              ANL     A,#0EFH
0052 4E                ORL     A,R6
0053 FF                MOV     R7,A
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2137
0055 900DBD            MOV     DPTR,#ppm2bios+0BH
0058 E0                MOVX    A,@DPTR
0059 900A30            MOV     DPTR,#ne+01H
                                           ; SOURCE LINE # 2138
005C 120000      R     LCALL   L?0722
                                           ; SOURCE LINE # 2140
005F 120000      R     LCALL   L?0664
                                           ; SOURCE LINE # 2141
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 133 

0062 120000      R     LCALL   set_notification_enable_ack
                                           ; SOURCE LINE # 2143
0065 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2144
0067         ?C0393:
0067 22                RET     
             ; FUNCTION ppm_set_notification_enable (END)

             ; FUNCTION ppm_alert (BEGIN)
                                           ; SOURCE LINE # 2146
                                           ; SOURCE LINE # 2147
                                           ; SOURCE LINE # 2152
0000 7FAA              MOV     R7,#0AAH
0002 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2153
0005 7F77              MOV     R7,#077H
0007 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2154
000A 020000      E     LJMP    ucsi_ppm_notify_opm
             ; FUNCTION ppm_alert (END)

             ; FUNCTION ucsi_command_complete_notify_opm (BEGIN)
                                           ; SOURCE LINE # 2156
                                           ; SOURCE LINE # 2157
                                           ; SOURCE LINE # 2158
0000 900A2F            MOV     DPTR,#ne
0003 E0                MOVX    A,@DPTR
0004 30E032            JNB     ACC.0,?C0396
                                           ; SOURCE LINE # 2159
0007 120000      R     LCALL   L?0757
000A C0E0              PUSH    ACC
000C E9                MOV     A,R1
000D C0E0              PUSH    ACC
000F 120000      R     LCALL   L?0780
0012 D0E0              POP     ACC
0014 F9                MOV     R1,A
0015 D0E0              POP     ACC
0017 120000      R     LCALL   L?0731
                                           ; SOURCE LINE # 2160
001A 7A0D              MOV     R2,#HIGH ppm2bios+010H
001C 79C2              MOV     R1,#LOW ppm2bios+010H
001E 7B01              MOV     R3,#01H
0020 EA                MOV     A,R2
0021 C0E0              PUSH    ACC
0023 E9                MOV     A,R1
0024 C0E0              PUSH    ACC
0026 7800        E     MOV     R0,#LOW xUCSI_DS_MGI
0028 7C00        E     MOV     R4,#HIGH xUCSI_DS_MGI
002A 7D01              MOV     R5,#01H
002C D0E0              POP     ACC
002E F9                MOV     R1,A
002F D0E0              POP     ACC
0031 7F10              MOV     R7,#010H
0033 120000      R     LCALL   L?0733
                                           ; SOURCE LINE # 2168
0036 120000      R     LCALL   ppm_alert
                                           ; SOURCE LINE # 2169
                                           ; SOURCE LINE # 2170
0039         ?C0396:
0039 22                RET     
             ; FUNCTION ucsi_command_complete_notify_opm (END)

C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 134 

             ; FUNCTION ucsi_command_process_timeout_checking (BEGIN)
                                           ; SOURCE LINE # 2171
                                           ; SOURCE LINE # 2172
                                           ; SOURCE LINE # 2173
0000 900A28            MOV     DPTR,#current_pending_command_timeout
0003 E0                MOVX    A,@DPTR
0004 6012              JZ      ?C0397
                                           ; SOURCE LINE # 2174
0006 14                DEC     A
0007 F0                MOVX    @DPTR,A
0008 700E              JNZ     ?C0397
                                           ; SOURCE LINE # 2179
000A 900A01            MOV     DPTR,#ucsi_errno
000D 04                INC     A
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2180
000F 120000      R     LCALL   set_error_data
                                           ; SOURCE LINE # 2181
0012 120000      R     LCALL   ucsi_command_complete_notify_opm
                                           ; SOURCE LINE # 2182
0015 7F01              MOV     R7,#01H
0017 22                RET     
                                           ; SOURCE LINE # 2183
                                           ; SOURCE LINE # 2184
0018         ?C0397:
                                           ; SOURCE LINE # 2185
0018 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 2186
001A         ?C0399:
001A 22                RET     
             ; FUNCTION ucsi_command_process_timeout_checking (END)

             ; FUNCTION cancel_all_timer (BEGIN)
                                           ; SOURCE LINE # 2187
                                           ; SOURCE LINE # 2188
                                           ; SOURCE LINE # 2189
0000 E4                CLR     A
0001 900A29            MOV     DPTR,#ucsi_async_checking_timer
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2190
0007 A3                INC     DPTR
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2191
0009 22                RET     
             ; FUNCTION cancel_all_timer (END)

             ; FUNCTION async_notify_opm (BEGIN)
                                           ; SOURCE LINE # 2192
                                           ; SOURCE LINE # 2193
                                           ; SOURCE LINE # 2194
0000 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 2195
0003 900A2B            MOV     DPTR,#ucsi_async_restore
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 C3                CLR     C
0009 9405              SUBB    A,#05H
000B 4014              JC      ?C0401
000D 900A29            MOV     DPTR,#ucsi_async_checking_timer
0010 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 135 

0011 7002              JNZ     ?C0550
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015         ?C0550:
0015 700A              JNZ     ?C0401
                                           ; SOURCE LINE # 2196
0017 900A29            MOV     DPTR,#ucsi_async_checking_timer
001A F0                MOVX    @DPTR,A
001B A3                INC     DPTR
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2197
001E E4                CLR     A
001F A3                INC     DPTR
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2202
0021         ?C0401:
                                           ; SOURCE LINE # 2203
0021 900A29            MOV     DPTR,#ucsi_async_checking_timer
0024 E0                MOVX    A,@DPTR
0025 7002              JNZ     ?C0551
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029         ?C0551:
0029 6022              JZ      ?C0405
                                           ; SOURCE LINE # 2204
002B 900A29            MOV     DPTR,#ucsi_async_checking_timer
002E 74FF              MOV     A,#0FFH
0030 F5F0              MOV     B,A
0032 120000      E     LCALL   ?C?IILDX
0035 45F0              ORL     A,B
0037 7014              JNZ     ?C0405
                                           ; SOURCE LINE # 2205
0039 120000      R     LCALL   ucsi_ppm_connector_change_detect
                                           ; SOURCE LINE # 2210
003C 900DB6            MOV     DPTR,#ppm2bios+04H
003F E0                MOVX    A,@DPTR
0040 C3                CLR     C
0041 13                RRC     A
0042 547F              ANL     A,#07FH
0044 FD                MOV     R5,A
0045 6006              JZ      ?C0405
                                           ; SOURCE LINE # 2211
0047 E4                CLR     A
0048 FB                MOV     R3,A
0049 FF                MOV     R7,A
004A 120000      R     LCALL   _ucsi_connector_change_notify_opm
                                           ; SOURCE LINE # 2214
                                           ; SOURCE LINE # 2215
                                           ; SOURCE LINE # 2216
                                           ; SOURCE LINE # 2217
004D         ?C0405:
004D 22                RET     
             ; FUNCTION async_notify_opm (END)

             ; FUNCTION ppm_nd_process (BEGIN)
                                           ; SOURCE LINE # 2226
                                           ; SOURCE LINE # 2227
                                           ; SOURCE LINE # 2228
0000 900000      R     MOV     DPTR,#ret
                                           ; SOURCE LINE # 2229
0003 120000      R     LCALL   L?0759
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 136 

0006 6024              JZ      ?C0410
0008 14                DEC     A
0009 6016              JZ      ?C0409
000B 24FC              ADD     A,#0FCH
000D 701F              JNZ     ?C0406
                                           ; SOURCE LINE # 2230
000F         ?C0407:
                                           ; SOURCE LINE # 2231
000F 120000      R     LCALL   ppm_set_notification_enable
                                           ; SOURCE LINE # 2233
0012 900A2F            MOV     DPTR,#ne
0015 E0                MOVX    A,@DPTR
0016 30E015            JNB     ACC.0,?C0406
                                           ; SOURCE LINE # 2234
                                           ; SOURCE LINE # 2235
0019 120000      R     LCALL   L?0715
                                           ; SOURCE LINE # 2236
001C 900000      R     MOV     DPTR,#ret
                                           ; SOURCE LINE # 2237
                                           ; SOURCE LINE # 2238
001F 8006              SJMP    ?C0594
                                           ; SOURCE LINE # 2239
0021         ?C0409:
                                           ; SOURCE LINE # 2240
0021 120000      R     LCALL   ppm_reset
                                           ; SOURCE LINE # 2241
0024 900A00            MOV     DPTR,#ucsi_ppm_state
0027         ?C0594:
0027 7401              MOV     A,#01H
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2242
002A 8002              SJMP    ?C0406
                                           ; SOURCE LINE # 2243
002C         ?C0410:
                                           ; SOURCE LINE # 2244
002C 800F              SJMP    ?C0595
                                           ; SOURCE LINE # 2245
                                           ; SOURCE LINE # 2246
                                           ; SOURCE LINE # 2247
                                           ; SOURCE LINE # 2248
002E         ?C0406:
                                           ; SOURCE LINE # 2250
002E E4                CLR     A
002F 900DBA            MOV     DPTR,#ppm2bios+08H
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2255
0033 900000      R     MOV     DPTR,#ret
0036 E0                MOVX    A,@DPTR
0037 B40103            CJNE    A,#01H,?C0413
                                           ; SOURCE LINE # 2256
003A 120000      R     LCALL   ucsi_command_complete_notify_opm
003D         ?C0413:
                                           ; SOURCE LINE # 2257
003D         ?C0595:
003D 900000      R     MOV     DPTR,#ret
0040 E0                MOVX    A,@DPTR
0041 FF                MOV     R7,A
                                           ; SOURCE LINE # 2258
0042         ?C0411:
0042 22                RET     
             ; FUNCTION ppm_nd_process (END)

C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 137 

             ; FUNCTION ppm_pc_process (BEGIN)
                                           ; SOURCE LINE # 2268
                                           ; SOURCE LINE # 2269
                                           ; SOURCE LINE # 2270
;---- Variable 'ret' assigned to Register 'R7' ----
0000 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 2272
0002 120000      R     LCALL   ucsi_command_process_timeout_checking
                                           ; SOURCE LINE # 2273
0005 EF                MOV     A,R7
0006 B40107            CJNE    A,#01H,?C0414
                                           ; SOURCE LINE # 2274
0009 E4                CLR     A
000A 900DBA            MOV     DPTR,#ppm2bios+08H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2275
                                           ; SOURCE LINE # 2276
000E 8031              SJMP    ?C0596
                                           ; SOURCE LINE # 2278
0010         ?C0414:
                                           ; SOURCE LINE # 2283
0010 900DBA            MOV     DPTR,#ppm2bios+08H
0013 E0                MOVX    A,@DPTR
0014 24FD              ADD     A,#0FDH
0016 600F              JZ      ?C0418
0018 24FA              ADD     A,#0FAH
001A 6010              JZ      ?C0419
001C 24FE              ADD     A,#0FEH
001E 6011              JZ      ?C0420
0020 8000              SJMP    ?C0417
                                           ; SOURCE LINE # 2284
0022         ?C0417:
                                           ; SOURCE LINE # 2290
                                           ; SOURCE LINE # 2291
                                           ; SOURCE LINE # 2292
0022 120000      R     LCALL   L?0698
                                           ; SOURCE LINE # 2293
0025 800D              SJMP    ?C0416
                                           ; SOURCE LINE # 2294
0027         ?C0418:
                                           ; SOURCE LINE # 2295
0027 120000      R     LCALL   ppm_connector_reset_process
                                           ; SOURCE LINE # 2296
002A 8008              SJMP    ?C0416
                                           ; SOURCE LINE # 2297
002C         ?C0419:
                                           ; SOURCE LINE # 2298
002C 120000      R     LCALL   ppm_set_uor_process
                                           ; SOURCE LINE # 2299
002F 8003              SJMP    ?C0416
                                           ; SOURCE LINE # 2300
0031         ?C0420:
                                           ; SOURCE LINE # 2301
0031 120000      R     LCALL   ppm_set_pdr_process
                                           ; SOURCE LINE # 2302
                                           ; SOURCE LINE # 2303
0034         ?C0416:
                                           ; SOURCE LINE # 2305
0034 EF                MOV     A,R7
0035 6405              XRL     A,#05H
0037 600B              JZ      ?C0415
0039         ?C0421:
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 138 

                                           ; SOURCE LINE # 2307
0039 E4                CLR     A
003A 900DBA            MOV     DPTR,#ppm2bios+08H
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2308
003E 120000      R     LCALL   ucsi_command_complete_notify_opm
                                           ; SOURCE LINE # 2309
0041         ?C0596:
                                           ; SOURCE LINE # 2310
0041 120000      R     LCALL   L?0715
                                           ; SOURCE LINE # 2311
0044         ?C0415:
0044 22                RET     
             ; FUNCTION ppm_pc_process (END)

             ; FUNCTION _ppm_busy_process (BEGIN)
                                           ; SOURCE LINE # 2321
0000 900000      R     MOV     DPTR,#Command
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2322
                                           ; SOURCE LINE # 2323
0005 A3                INC     DPTR
0006 7402              MOV     A,#02H
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2325
0009 FF                MOV     R7,A
000A 120000      R     LCALL   L?0626
                                           ; SOURCE LINE # 2326
000D 900000      R     MOV     DPTR,#Command
0010 E0                MOVX    A,@DPTR
0011 14                DEC     A
0012 6014              JZ      ?C0424
0014 14                DEC     A
0015 6028              JZ      ?C0426
0017 24FE              ADD     A,#0FEH
0019 601A              JZ      ?C0425
001B 8000              SJMP    ?C0423
                                           ; SOURCE LINE # 2327
001D         ?C0423:
                                           ; SOURCE LINE # 2333
001D 120000      R     LCALL   busy_ack
                                           ; SOURCE LINE # 2334
0020 900000      R     MOV     DPTR,#ret
0023 7401              MOV     A,#01H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2335
0026 8026              SJMP    ?C0422
                                           ; SOURCE LINE # 2336
0028         ?C0424:
                                           ; SOURCE LINE # 2337
0028 120000      R     LCALL   ppm_reset
                                           ; SOURCE LINE # 2338
002B 120000      R     LCALL   L?0735
                                           ; SOURCE LINE # 2339
002E 900000      R     MOV     DPTR,#ret
0031 7403              MOV     A,#03H
                                           ; SOURCE LINE # 2340
                                           ; SOURCE LINE # 2341
0033 8013              SJMP    ?C0597
                                           ; SOURCE LINE # 2342
0035         ?C0425:
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 139 

                                           ; SOURCE LINE # 2343
0035 120000      R     LCALL   ppm_ack_cc_ci
0038 900000      R     MOV     DPTR,#ret
003B EF                MOV     A,R7
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2344
003D 800F              SJMP    ?C0422
                                           ; SOURCE LINE # 2345
003F         ?C0426:
                                           ; SOURCE LINE # 2346
003F 120000      R     LCALL   ppm_cancel
0042 900000      R     MOV     DPTR,#ret
                                           ; SOURCE LINE # 2347
0045 120000      R     LCALL   L?0761
0048         ?C0597:
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2348
0049 E4                CLR     A
004A 900DBA            MOV     DPTR,#ppm2bios+08H
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2349
                                           ; SOURCE LINE # 2350
004E         ?C0422:
                                           ; SOURCE LINE # 2351
004E 900000      R     MOV     DPTR,#ret
0051 E0                MOVX    A,@DPTR
0052 6403              XRL     A,#03H
0054 6003              JZ      ?C0427
                                           ; SOURCE LINE # 2352
0056 120000      R     LCALL   ucsi_command_complete_notify_opm
0059         ?C0427:
                                           ; SOURCE LINE # 2354
0059 900000      R     MOV     DPTR,#ret
005C E0                MOVX    A,@DPTR
005D FF                MOV     R7,A
                                           ; SOURCE LINE # 2355
005E         ?C0428:
005E 22                RET     
             ; FUNCTION _ppm_busy_process (END)

             ; FUNCTION ppm_waea_process (BEGIN)
                                           ; SOURCE LINE # 2365
                                           ; SOURCE LINE # 2366
                                           ; SOURCE LINE # 2367
0000 900000      R     MOV     DPTR,#ret
                                           ; SOURCE LINE # 2369
0003 120000      R     LCALL   L?0759
0006 14                DEC     A
0007 600D              JZ      ?C0431
0009 24EF              ADD     A,#0EFH
000B 6016              JZ      ?C0432
000D 240E              ADD     A,#0EH
000F 701C              JNZ     ?C0429
                                           ; SOURCE LINE # 2370
0011         ?C0430:
                                           ; SOURCE LINE # 2371
0011 120000      R     LCALL   ppm_ack_cc_ci
                                           ; SOURCE LINE # 2372
                                           ; SOURCE LINE # 2373
0014 8010              SJMP    ?C0598
                                           ; SOURCE LINE # 2374
0016         ?C0431:
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 140 

                                           ; SOURCE LINE # 2375
0016 120000      R     LCALL   ppm_reset
                                           ; SOURCE LINE # 2376
0019 900000      R     MOV     DPTR,#ret
001C 7403              MOV     A,#03H
                                           ; SOURCE LINE # 2377
001E 120000      R     LCALL   L?0734
                                           ; SOURCE LINE # 2378
0021 800A              SJMP    ?C0429
                                           ; SOURCE LINE # 2379
0023         ?C0432:
                                           ; SOURCE LINE # 2380
0023 120000      R     LCALL   ppm_get_connector_status
0026         ?C0598:
0026 900000      R     MOV     DPTR,#ret
                                           ; SOURCE LINE # 2381
0029 120000      R     LCALL   L?0761
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2382
                                           ; SOURCE LINE # 2383
                                           ; SOURCE LINE # 2388
                                           ; SOURCE LINE # 2389
002D         ?C0429:
                                           ; SOURCE LINE # 2391
002D E4                CLR     A
002E 900DBA            MOV     DPTR,#ppm2bios+08H
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2392
                                           ; SOURCE LINE # 2393
0032 120000      R     LCALL   ucsi_command_complete_notify_opm
                                           ; SOURCE LINE # 2394
0035 900000      R     MOV     DPTR,#ret
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
                                           ; SOURCE LINE # 2395
003A         ?C0435:
003A 22                RET     
             ; FUNCTION ppm_waea_process (END)

             ; FUNCTION ppm_wcca_process (BEGIN)
                                           ; SOURCE LINE # 2406
                                           ; SOURCE LINE # 2407
                                           ; SOURCE LINE # 2408
0000 900000      R     MOV     DPTR,#ret
0003 7402              MOV     A,#02H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2410
0006 E4                CLR     A
0007 900A28            MOV     DPTR,#current_pending_command_timeout
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2411
000B 900DBA            MOV     DPTR,#ppm2bios+08H
000E E0                MOVX    A,@DPTR
000F 14                DEC     A
0010 6010              JZ      ?C0438
0012 24FD              ADD     A,#0FDH
0014 7018              JNZ     ?C0439
                                           ; SOURCE LINE # 2412
0016         ?C0437:
                                           ; SOURCE LINE # 2413
0016 120000      R     LCALL   ppm_ack_cc_ci
0019 900000      R     MOV     DPTR,#ret
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 141 

                                           ; SOURCE LINE # 2414
001C 120000      R     LCALL   L?0762
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2415
0020 802F              SJMP    ?C0436
                                           ; SOURCE LINE # 2416
0022         ?C0438:
                                           ; SOURCE LINE # 2417
0022 120000      R     LCALL   ppm_reset
0025 900000      R     MOV     DPTR,#ret
0028 EF                MOV     A,R7
                                           ; SOURCE LINE # 2418
0029 120000      R     LCALL   L?0734
                                           ; SOURCE LINE # 2419
002C 8023              SJMP    ?C0436
                                           ; SOURCE LINE # 2420
002E         ?C0439:
                                           ; SOURCE LINE # 2421
002E 900A24            MOV     DPTR,#wait_for_ack_back
0031 E0                MOVX    A,@DPTR
0032 14                DEC     A
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2422
0034 E0                MOVX    A,@DPTR
0035 FF                MOV     R7,A
0036 6478              XRL     A,#078H
0038 6004              JZ      ?C0441
003A EF                MOV     A,R7
003B B40105            CJNE    A,#01H,?C0440
003E         ?C0441:
                                           ; SOURCE LINE # 2426
003E 120000      R     LCALL   ucsi_command_complete_notify_opm
                                           ; SOURCE LINE # 2427
0041 8016              SJMP    ?C0599
0043         ?C0440:
0043 900A24            MOV     DPTR,#wait_for_ack_back
0046 E0                MOVX    A,@DPTR
0047 7010              JNZ     ?C0599
                                           ; SOURCE LINE # 2431
0049 900A00            MOV     DPTR,#ucsi_ppm_state
004C 7402              MOV     A,#02H
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2432
004F         ?C0442:
                                           ; SOURCE LINE # 2433
004F 8008              SJMP    ?C0599
                                           ; SOURCE LINE # 2438
                                           ; SOURCE LINE # 2439
0051         ?C0436:
                                           ; SOURCE LINE # 2441
0051 E4                CLR     A
0052 900DBA            MOV     DPTR,#ppm2bios+08H
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2442
                                           ; SOURCE LINE # 2443
0056 120000      R     LCALL   ucsi_command_complete_notify_opm
                                           ; SOURCE LINE # 2444
0059         ?C0599:
0059 900000      R     MOV     DPTR,#ret
005C E0                MOVX    A,@DPTR
005D FF                MOV     R7,A
                                           ; SOURCE LINE # 2445
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 142 

005E         ?C0444:
005E 22                RET     
             ; FUNCTION ppm_wcca_process (END)

             ; FUNCTION ppm_ne_process (BEGIN)
                                           ; SOURCE LINE # 2456
                                           ; SOURCE LINE # 2457
                                           ; SOURCE LINE # 2458
0000 900000      R     MOV     DPTR,#ret
                                           ; SOURCE LINE # 2462
0003 120000      R     LCALL   L?0760
0006 120000      E     LCALL   ?C?CCASE
0009 0000        R     DW      ?C0466
000B 00                DB      00H
000C 0000        R     DW      ?C0447
000E 01                DB      01H
000F 0000        R     DW      ?C0448
0011 02                DB      02H
0012 0000        R     DW      ?C0449
0014 03                DB      03H
0015 0000        R     DW      ?C0450
0017 04                DB      04H
0018 0000        R     DW      ?C0451
001A 05                DB      05H
001B 0000        R     DW      ?C0452
001D 06                DB      06H
001E 0000        R     DW      ?C0453
0020 07                DB      07H
0021 0000        R     DW      ?C0454
0023 08                DB      08H
0024 0000        R     DW      ?C0455
0026 09                DB      09H
0027 0000        R     DW      ?C0456
0029 0A                DB      0AH
002A 0000        R     DW      ?C0457
002C 0B                DB      0BH
002D 0000        R     DW      ?C0458
002F 0C                DB      0CH
0030 0000        R     DW      ?C0459
0032 0D                DB      0DH
0033 0000        R     DW      ?C0460
0035 0E                DB      0EH
0036 0000        R     DW      ?C0461
0038 0F                DB      0FH
0039 0000        R     DW      ?C0462
003B 10                DB      010H
003C 0000        R     DW      ?C0463
003E 11                DB      011H
003F 0000        R     DW      ?C0464
0041 12                DB      012H
0042 0000        R     DW      ?C0465
0044 13                DB      013H
0045 0000              DW      00H
0047 0000        R     DW      ?C0468
                                           ; SOURCE LINE # 2463
0049         ?C0447:
                                           ; SOURCE LINE # 2464
0049 120000      R     LCALL   ppm_reset
                                           ; SOURCE LINE # 2465
004C 120000      R     LCALL   L?0735
                                           ; SOURCE LINE # 2466
                                           ; SOURCE LINE # 2467
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 143 

004F 8000              SJMP    ?C0600
                                           ; SOURCE LINE # 2468
0051         ?C0448:
                                           ; SOURCE LINE # 2470
0051         ?C0600:
0051 900000      R     MOV     DPTR,#ret
0054 7403              MOV     A,#03H
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2472
0057 8062              SJMP    ?C0446
                                           ; SOURCE LINE # 2473
0059         ?C0449:
                                           ; SOURCE LINE # 2474
0059 120000      R     LCALL   ppm_connector_reset
                                           ; SOURCE LINE # 2475
005C 8058              SJMP    ?C0617
                                           ; SOURCE LINE # 2476
005E         ?C0450:
                                           ; SOURCE LINE # 2477
005E 120000      R     LCALL   ppm_ack_cc_ci
0061         ?C0601:
                                           ; SOURCE LINE # 2478
0061 8053              SJMP    ?C0617
                                           ; SOURCE LINE # 2479
0063         ?C0451:
                                           ; SOURCE LINE # 2480
0063 120000      R     LCALL   ppm_set_notification_enable
0066         ?C0602:
                                           ; SOURCE LINE # 2481
0066 804E              SJMP    ?C0617
                                           ; SOURCE LINE # 2482
0068         ?C0452:
                                           ; SOURCE LINE # 2483
0068 120000      R     LCALL   ppm_get_capability
006B         ?C0603:
                                           ; SOURCE LINE # 2484
006B 8049              SJMP    ?C0617
                                           ; SOURCE LINE # 2485
006D         ?C0453:
                                           ; SOURCE LINE # 2486
006D 120000      R     LCALL   ppm_get_connector_capability
0070         ?C0604:
                                           ; SOURCE LINE # 2487
0070 8044              SJMP    ?C0617
                                           ; SOURCE LINE # 2489
0072         ?C0454:
                                           ; SOURCE LINE # 2490
0072 120000      R     LCALL   ppm_set_uom
0075         ?C0605:
                                           ; SOURCE LINE # 2491
0075 803F              SJMP    ?C0617
                                           ; SOURCE LINE # 2493
0077         ?C0455:
                                           ; SOURCE LINE # 2494
0077 120000      R     LCALL   ppm_set_uor
007A         ?C0606:
                                           ; SOURCE LINE # 2495
007A 803A              SJMP    ?C0617
                                           ; SOURCE LINE # 2497
007C         ?C0456:
                                           ; SOURCE LINE # 2498
007C 120000      R     LCALL   ppm_set_pdm
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 144 

007F         ?C0607:
                                           ; SOURCE LINE # 2499
007F 8035              SJMP    ?C0617
                                           ; SOURCE LINE # 2501
0081         ?C0457:
                                           ; SOURCE LINE # 2502
0081 120000      R     LCALL   ppm_set_pdr
0084         ?C0608:
                                           ; SOURCE LINE # 2503
0084 8030              SJMP    ?C0617
                                           ; SOURCE LINE # 2505
0086         ?C0458:
                                           ; SOURCE LINE # 2506
0086 120000      R     LCALL   ppm_get_alt_modes
0089         ?C0609:
                                           ; SOURCE LINE # 2507
0089 802B              SJMP    ?C0617
                                           ; SOURCE LINE # 2510
008B         ?C0459:
                                           ; SOURCE LINE # 2511
008B 120000      R     LCALL   ppm_get_cam_supported
008E         ?C0610:
                                           ; SOURCE LINE # 2512
008E 8026              SJMP    ?C0617
                                           ; SOURCE LINE # 2515
0090         ?C0460:
                                           ; SOURCE LINE # 2516
0090 120000      R     LCALL   ppm_get_current_cam
0093         ?C0611:
                                           ; SOURCE LINE # 2517
0093 8021              SJMP    ?C0617
                                           ; SOURCE LINE # 2520
0095         ?C0461:
                                           ; SOURCE LINE # 2521
0095 120000      R     LCALL   ppm_set_new_cam
0098         ?C0612:
                                           ; SOURCE LINE # 2522
0098 801C              SJMP    ?C0617
                                           ; SOURCE LINE # 2525
009A         ?C0462:
                                           ; SOURCE LINE # 2526
009A 120000      R     LCALL   ppm_get_pdos
009D         ?C0613:
                                           ; SOURCE LINE # 2527
009D 8017              SJMP    ?C0617
                                           ; SOURCE LINE # 2530
009F         ?C0463:
                                           ; SOURCE LINE # 2531
009F 120000      R     LCALL   ppm_get_cable_property
00A2         ?C0614:
                                           ; SOURCE LINE # 2532
00A2 8012              SJMP    ?C0617
                                           ; SOURCE LINE # 2534
00A4         ?C0464:
                                           ; SOURCE LINE # 2535
00A4 120000      R     LCALL   ppm_get_connector_status
00A7         ?C0615:
                                           ; SOURCE LINE # 2536
00A7 800D              SJMP    ?C0617
                                           ; SOURCE LINE # 2537
00A9         ?C0465:
                                           ; SOURCE LINE # 2538
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 145 

00A9 120000      R     LCALL   ppm_get_error_status
00AC         ?C0616:
                                           ; SOURCE LINE # 2539
00AC 8008              SJMP    ?C0617
                                           ; SOURCE LINE # 2540
00AE         ?C0466:
                                           ; SOURCE LINE # 2541
00AE 120000      R     LCALL   async_notify_opm
                                           ; SOURCE LINE # 2542
00B1 8034              SJMP    ?C0618
                                           ; SOURCE LINE # 2543
                                           ; SOURCE LINE # 2544
00B3         ?C0468:
                                           ; SOURCE LINE # 2545
00B3 120000      R     LCALL   unsupport_command_process
00B6         ?C0617:
00B6 900000      R     MOV     DPTR,#ret
00B9 EF                MOV     A,R7
00BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2550
                                           ; SOURCE LINE # 2551
00BB         ?C0446:
                                           ; SOURCE LINE # 2553
00BB 900000      R     MOV     DPTR,#ret
00BE E0                MOVX    A,@DPTR
00BF 14                DEC     A
00C0 601A              JZ      ?C0473
00C2 14                DEC     A
00C3 6017              JZ      ?C0473
00C5 24FD              ADD     A,#0FDH
00C7 600B              JZ      ?C0471
00C9 2402              ADD     A,#02H
00CB 701A              JNZ     ?C0469
                                           ; SOURCE LINE # 2554
00CD         ?C0470:
                                           ; SOURCE LINE # 2555
00CD E4                CLR     A
00CE 900DBA            MOV     DPTR,#ppm2bios+08H
00D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2556
00D2 8013              SJMP    ?C0469
                                           ; SOURCE LINE # 2557
00D4         ?C0471:
                                           ; SOURCE LINE # 2562
00D4 900A00            MOV     DPTR,#ucsi_ppm_state
00D7 7404              MOV     A,#04H
00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2563
00DA 800B              SJMP    ?C0469
                                           ; SOURCE LINE # 2565
                                           ; SOURCE LINE # 2566
00DC         ?C0473:
                                           ; SOURCE LINE # 2567
                                           ; SOURCE LINE # 2568
00DC 120000      R     LCALL   L?0716
                                           ; SOURCE LINE # 2569
00DF E4                CLR     A
00E0 900DBA            MOV     DPTR,#ppm2bios+08H
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2570
00E4 120000      R     LCALL   ucsi_command_complete_notify_opm
                                           ; SOURCE LINE # 2571
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 146 

                                           ; SOURCE LINE # 2572
00E7         ?C0469:
                                           ; SOURCE LINE # 2575
00E7         ?C0618:
00E7 900000      R     MOV     DPTR,#ret
00EA E0                MOVX    A,@DPTR
00EB FF                MOV     R7,A
                                           ; SOURCE LINE # 2576
00EC         ?C0467:
00EC 22                RET     
             ; FUNCTION ppm_ne_process (END)

             ; FUNCTION _ucsi_connector_change_notify_opm (BEGIN)
                                           ; SOURCE LINE # 2589
0000 900000      R     MOV     DPTR,#ack
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
;---- Variable 'wait_for_ack' assigned to Register 'R3' ----
                                           ; SOURCE LINE # 2590
                                           ; SOURCE LINE # 2591
0008 A3                INC     DPTR
0009 7401              MOV     A,#01H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2594
000C 900A00            MOV     DPTR,#ucsi_ppm_state
000F E0                MOVX    A,@DPTR
0010 FE                MOV     R6,A
0011 B40103            CJNE    A,#01H,?C0474
                                           ; SOURCE LINE # 2595
0014 7F02              MOV     R7,#02H
0016 22                RET     
0017         ?C0474:
                                           ; SOURCE LINE # 2598
0017 900000      R     MOV     DPTR,#ack
001A E0                MOVX    A,@DPTR
001B 700B              JNZ     ?C0476
001D EB                MOV     A,R3
001E 7008              JNZ     ?C0476
0020 EE                MOV     A,R6
0021 6402              XRL     A,#02H
0023 6003              JZ      ?C0476
                                           ; SOURCE LINE # 2600
0025 7F01              MOV     R7,#01H
0027 22                RET     
0028         ?C0476:
                                           ; SOURCE LINE # 2602
0028 120000      R     LCALL   L?0625
                                           ; SOURCE LINE # 2603
002B 120000      R     LCALL   L?0713
                                           ; SOURCE LINE # 2605
002E 900000      R     MOV     DPTR,#connector_index
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 600F              JZ      ?C0477
0035 120000      R     LCALL   L?0736
0038 30E009            JNB     ACC.0,?C0477
                                           ; SOURCE LINE # 2606
003B EF                MOV     A,R7
003C 120000      R     LCALL   L?0744
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 147 

                                           ; SOURCE LINE # 2607
003F E4                CLR     A
0040 900000      R     MOV     DPTR,#invalid
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2608
0044         ?C0477:
                                           ; SOURCE LINE # 2610
0044 900000      R     MOV     DPTR,#ack
0047 E0                MOVX    A,@DPTR
0048 600F              JZ      ?C0478
004A 900A2F            MOV     DPTR,#ne
004D E0                MOVX    A,@DPTR
004E 30E008            JNB     ACC.0,?C0478
                                           ; SOURCE LINE # 2611
0051 E4                CLR     A
0052 900000      R     MOV     DPTR,#invalid
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2612
0056 120000      R     LCALL   L?0658
                                           ; SOURCE LINE # 2613
0059         ?C0478:
                                           ; SOURCE LINE # 2615
0059 900000      R     MOV     DPTR,#invalid
005C E0                MOVX    A,@DPTR
005D 6003              JZ      ?C0479
                                           ; SOURCE LINE # 2616
005F 7F02              MOV     R7,#02H
0061 22                RET     
0062         ?C0479:
                                           ; SOURCE LINE # 2618
0062 900A2F            MOV     DPTR,#ne
0065 E0                MOVX    A,@DPTR
0066 30E016            JNB     ACC.0,?C0480
                                           ; SOURCE LINE # 2620
0069 120000      R     LCALL   L?0758
006C C0E0              PUSH    ACC
006E E9                MOV     A,R1
006F C0E0              PUSH    ACC
0071 120000      R     LCALL   L?0781
0074 D0E0              POP     ACC
0076 F9                MOV     R1,A
0077 D0E0              POP     ACC
0079 120000      R     LCALL   L?0732
                                           ; SOURCE LINE # 2621
007C 120000      R     LCALL   ppm_alert
                                           ; SOURCE LINE # 2622
007F         ?C0480:
                                           ; SOURCE LINE # 2624
007F 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2625
0081         ?C0475:
0081 22                RET     
             ; FUNCTION _ucsi_connector_change_notify_opm (END)

             ; FUNCTION checking_opm_command (BEGIN)
                                           ; SOURCE LINE # 2636
                                           ; SOURCE LINE # 2637
                                           ; SOURCE LINE # 2638
0000 900A79            MOV     DPTR,#ucsi_received_command
0003 E0                MOVX    A,@DPTR
0004 6401              XRL     A,#01H
0006 7047              JNZ     ?C0484
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 148 

                                           ; SOURCE LINE # 2639
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2641
0009 7FAA              MOV     R7,#0AAH
000B 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2643
000E 900DBA            MOV     DPTR,#ppm2bios+08H
0011 E0                MOVX    A,@DPTR
0012 7033              JNZ     ?C0482
                                           ; SOURCE LINE # 2644
0014 7A00        E     MOV     R2,#HIGH xUCSI_DS_CTL0
0016 7900        E     MOV     R1,#LOW xUCSI_DS_CTL0
0018 7B01              MOV     R3,#01H
001A 78BA              MOV     R0,#LOW ppm2bios+08H
001C 7C0D              MOV     R4,#HIGH ppm2bios+08H
001E 7D01              MOV     R5,#01H
0020 7E00              MOV     R6,#00H
0022 7F08              MOV     R7,#08H
0024 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 2645
0027 900DBA            MOV     DPTR,#ppm2bios+08H
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2649
002F 900A28            MOV     DPTR,#current_pending_command_timeout
0032 74FA              MOV     A,#0FAH
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2650
0035 E4                CLR     A
0036 900A01            MOV     DPTR,#ucsi_errno
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2651
003A FE                MOV     R6,A
003B 7F10              MOV     R7,#010H
003D FD                MOV     R5,A
003E 7B01              MOV     R3,#01H
0040 7A0D              MOV     R2,#HIGH ppm2bios+010H
0042 79C2              MOV     R1,#LOW ppm2bios+010H
0044 020000      E     LJMP    ?C?MEMSET
                                           ; SOURCE LINE # 2652
0047         ?C0482:
                                           ; SOURCE LINE # 2656
0047 900000      E     MOV     DPTR,#xUCSI_DS_CTL0
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C 120000      R     LCALL   _ppm_busy_process
                                           ; SOURCE LINE # 2657
                                           ; SOURCE LINE # 2660
                                           ; SOURCE LINE # 2662
004F         ?C0484:
004F 22                RET     
             ; FUNCTION checking_opm_command (END)

             ; FUNCTION ucsi_init (BEGIN)
                                           ; SOURCE LINE # 2721
                                           ; SOURCE LINE # 2722
                                           ; SOURCE LINE # 2745
0000 E4                CLR     A
0001 900A1C            MOV     DPTR,#timer1msCount
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2747
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 149 

0005 900DE5            MOV     DPTR,#request_src_caps_flag
0008 04                INC     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2748
000A A3                INC     DPTR
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2749
000C 900A00            MOV     DPTR,#ucsi_ppm_state
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2750
0010 E4                CLR     A
0011 900A16            MOV     DPTR,#connector_change_need_ack
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2751
0015 900A18            MOV     DPTR,#command_complete_need_ack
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2752
0019 A3                INC     DPTR
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2753
001B 900DBA            MOV     DPTR,#ppm2bios+08H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2754
001F 900A05            MOV     DPTR,#self_charging_error
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2755
0023 900DE3            MOV     DPTR,#supply_1500ma_flag
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2757
0027 900DB2            MOV     DPTR,#ppm2bios
002A 04                INC     A
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D E4                CLR     A
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2759
002F 900DB2            MOV     DPTR,#ppm2bios
0032 120000      R     LCALL   L?0678
0035 900DB3            MOV     DPTR,#ppm2bios+01H
0038 E0                MOVX    A,@DPTR
0039 900DB2            MOV     DPTR,#ppm2bios
003C F0                MOVX    @DPTR,A
003D A3                INC     DPTR
003E EF                MOV     A,R7
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2760
0040 7800        E     MOV     R0,#LOW xUCSI_DS_VERSION
0042 7C00        E     MOV     R4,#HIGH xUCSI_DS_VERSION
0044 7D01              MOV     R5,#01H
0046 7B01              MOV     R3,#01H
0048 7A0D              MOV     R2,#HIGH ppm2bios
004A 79B2              MOV     R1,#LOW ppm2bios
004C 7E00              MOV     R6,#00H
004E 7F02              MOV     R7,#02H
0050 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 2763
0053 7FE6              MOV     R7,#0E6H
0055 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2764
0058 120000      R     LCALL   ppm_init
                                           ; SOURCE LINE # 2765
005B 7FE7              MOV     R7,#0E7H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 150 

005D 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2766
0060 120000      R     LCALL   cancel_all_timer
                                           ; SOURCE LINE # 2767
0063 7FEB              MOV     R7,#0EBH
0065 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2768
0068 120000      E     LCALL   anx7447_ucsi_init
                                           ; SOURCE LINE # 2769
006B 7FEC              MOV     R7,#0ECH
006D 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2770
0070 120000      E     LCALL   anx_dead_battery_checking_1
                                           ; SOURCE LINE # 2771
0073 7FED              MOV     R7,#0EDH
0075 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2772
0078 120000      R     LCALL   L?0735
                                           ; SOURCE LINE # 2773
007B 7FEE              MOV     R7,#0EEH
007D 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2781
0080 900000      E     MOV     DPTR,#xEC_UCSIMajorVersion
0083 7401              MOV     A,#01H
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2782
0086 900000      E     MOV     DPTR,#xEC_UCSIMinorVersion
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2783
008A 900000      E     MOV     DPTR,#xEC_UCSIRevVersion
008D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2786
008E FF                MOV     R7,A
                                           ; SOURCE LINE # 2787
                                           ; SOURCE LINE # 2788
008F         ?C0488:
008F 22                RET     
             ; FUNCTION ucsi_init (END)

             ; FUNCTION _anx_initial_context (BEGIN)
                                           ; SOURCE LINE # 2797
0000 900000      R     MOV     DPTR,#port_index
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2798
                                           ; SOURCE LINE # 2799
0005 120000      R     LCALL   L?0648
0008 2472              ADD     A,#LOW context+072H
000A F582              MOV     DPL,A
000C E4                CLR     A
000D 340C              ADDC    A,#HIGH context+072H
                                           ; SOURCE LINE # 2800
000F 120000      R     LCALL   L?0638
0012 2453              ADD     A,#LOW context+053H
0014 F582              MOV     DPL,A
0016 E4                CLR     A
0017 340C              ADDC    A,#HIGH context+053H
                                           ; SOURCE LINE # 2801
0019 120000      R     LCALL   L?0638
001C 2432              ADD     A,#LOW context+032H
001E F582              MOV     DPL,A
0020 E4                CLR     A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 151 

0021 340C              ADDC    A,#HIGH context+032H
                                           ; SOURCE LINE # 2802
0023 120000      R     LCALL   L?0638
0026 120000      R     LCALL   L?0712
0029 120000      E     LCALL   ?C?LSTKXDATA
002C 00                DB      00H
002D 00                DB      00H
002E 00                DB      00H
002F 00                DB      00H
                                           ; SOURCE LINE # 2803
0030 900000      R     MOV     DPTR,#port_index
0033 120000      R     LCALL   L?0648
0036 2479              ADD     A,#LOW context+079H
0038 F582              MOV     DPL,A
003A E4                CLR     A
003B 340C              ADDC    A,#HIGH context+079H
                                           ; SOURCE LINE # 2804
003D 120000      R     LCALL   L?0638
0040 2403              ADD     A,#LOW context+03H
0042 F582              MOV     DPL,A
0044 E4                CLR     A
0045 340C              ADDC    A,#HIGH context+03H
                                           ; SOURCE LINE # 2805
0047 120000      R     LCALL   L?0638
004A 2404              ADD     A,#LOW context+04H
004C F582              MOV     DPL,A
004E E4                CLR     A
004F 340C              ADDC    A,#HIGH context+04H
                                           ; SOURCE LINE # 2806
0051 120000      R     LCALL   L?0638
0054 247A              ADD     A,#LOW context+07AH
0056 F582              MOV     DPL,A
0058 E4                CLR     A
0059 340C              ADDC    A,#HIGH context+07AH
                                           ; SOURCE LINE # 2807
005B 120000      R     LCALL   L?0638
005E 247B              ADD     A,#LOW context+07BH
0060 F582              MOV     DPL,A
0062 E4                CLR     A
0063 340C              ADDC    A,#HIGH context+07BH
                                           ; SOURCE LINE # 2808
0065 120000      R     LCALL   L?0638
0068 247D              ADD     A,#LOW context+07DH
006A F582              MOV     DPL,A
006C E4                CLR     A
006D 340C              ADDC    A,#HIGH context+07DH
                                           ; SOURCE LINE # 2809
006F 120000      R     LCALL   L?0638
0072 249B              ADD     A,#LOW context+09BH
0074 F582              MOV     DPL,A
0076 E4                CLR     A
0077 340C              ADDC    A,#HIGH context+09BH
                                           ; SOURCE LINE # 2810
0079 120000      R     LCALL   L?0638
007C 24A4              ADD     A,#LOW context+0A4H
007E F582              MOV     DPL,A
0080 E4                CLR     A
0081 340C              ADDC    A,#HIGH context+0A4H
                                           ; SOURCE LINE # 2811
0083 120000      R     LCALL   L?0638
0086 24A6              ADD     A,#LOW context+0A6H
0088 F582              MOV     DPL,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 152 

008A E4                CLR     A
008B 340C              ADDC    A,#HIGH context+0A6H
                                           ; SOURCE LINE # 2812
008D 120000      R     LCALL   L?0638
0090 24A7              ADD     A,#LOW context+0A7H
0092 F582              MOV     DPL,A
0094 E4                CLR     A
0095 340C              ADDC    A,#HIGH context+0A7H
                                           ; SOURCE LINE # 2813
0097 120000      R     LCALL   L?0638
009A 120000      R     LCALL   L?0688
009D 7401              MOV     A,#01H
                                           ; SOURCE LINE # 2814
009F 120000      R     LCALL   L?0639
00A2 2402              ADD     A,#LOW context+02H
00A4 F582              MOV     DPL,A
00A6 E4                CLR     A
00A7 340C              ADDC    A,#HIGH context+02H
                                           ; SOURCE LINE # 2815
00A9 120000      R     LCALL   L?0638
00AC 24A5              ADD     A,#LOW context+0A5H
00AE F582              MOV     DPL,A
00B0 E4                CLR     A
00B1 340C              ADDC    A,#HIGH context+0A5H
                                           ; SOURCE LINE # 2818
00B3 120000      R     LCALL   L?0638
00B6 120000      R     LCALL   L?0774
00B9 E4                CLR     A
00BA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2819
00BB FE                MOV     R6,A
00BC 7F04              MOV     R7,#04H
00BE EE                MOV     A,R6
00BF C0E0              PUSH    ACC
00C1 EF                MOV     A,R7
00C2 C0E0              PUSH    ACC
00C4 7D00              MOV     R5,#00H
00C6 900000      R     MOV     DPTR,#port_index
00C9 E0                MOVX    A,@DPTR
00CA 75F0BB            MOV     B,#0BBH
00CD A4                MUL     AB
00CE 243F              ADD     A,#LOW context+03FH
00D0 F9                MOV     R1,A
00D1 740C              MOV     A,#HIGH context+03FH
00D3 35F0              ADDC    A,B
00D5 FA                MOV     R2,A
00D6 7B01              MOV     R3,#01H
00D8 D0E0              POP     ACC
00DA FF                MOV     R7,A
00DB D0E0              POP     ACC
00DD FE                MOV     R6,A
00DE 120000      E     LCALL   ?C?MEMSET
                                           ; SOURCE LINE # 2820
00E1 900000      R     MOV     DPTR,#port_index
00E4 120000      R     LCALL   L?0648
00E7 120000      R     LCALL   L?0771
00EA 7401              MOV     A,#01H
00EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2822
00ED E4                CLR     A
00EE 900A05            MOV     DPTR,#self_charging_error
                                           ; SOURCE LINE # 2823
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 153 

00F1 120000      R     LCALL   L?0639
00F4 120000      R     LCALL   L?0756
00F7 F583              MOV     DPH,A
00F9 E4                CLR     A
00FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2824
00FB EF                MOV     A,R7
                                           ; SOURCE LINE # 2825
00FC 120000      R     LCALL   L?0637
00FF 120000      R     LCALL   L?0775
0102 7401              MOV     A,#01H
                                           ; SOURCE LINE # 2826
0104 120000      R     LCALL   L?0639
0107 2474              ADD     A,#LOW context+074H
0109 F582              MOV     DPL,A
010B E4                CLR     A
010C 340C              ADDC    A,#HIGH context+074H
                                           ; SOURCE LINE # 2827
010E 120000      R     LCALL   L?0638
0111 120000      R     LCALL   L?0669
0114 7404              MOV     A,#04H
                                           ; SOURCE LINE # 2828
0116 120000      R     LCALL   L?0639
0119 120000      R     LCALL   L?0667
011C 7404              MOV     A,#04H
                                           ; SOURCE LINE # 2829
011E 120000      R     LCALL   L?0639
0121 24A1              ADD     A,#LOW context+0A1H
0123 F582              MOV     DPL,A
0125 E4                CLR     A
0126 340C              ADDC    A,#HIGH context+0A1H
0128 F583              MOV     DPH,A
012A E4                CLR     A
012B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2830
012C FE                MOV     R6,A
012D 7F02              MOV     R7,#02H
012F EE                MOV     A,R6
0130 C0E0              PUSH    ACC
0132 EF                MOV     A,R7
0133 C0E0              PUSH    ACC
0135 900000      R     MOV     DPTR,#port_index
0138 120000      R     LCALL   L?0729
013B D0E0              POP     ACC
013D FF                MOV     R7,A
013E D0E0              POP     ACC
0140 FE                MOV     R6,A
0141 120000      E     LCALL   ?C?MEMSET
                                           ; SOURCE LINE # 2831
0144 900000      R     MOV     DPTR,#port_index
0147 120000      R     LCALL   L?0648
014A 120000      R     LCALL   L?0653
014D 30E310            JNB     ACC.3,?C0489
                                           ; SOURCE LINE # 2832
0150 EF                MOV     A,R7
0151 75F0BB            MOV     B,#0BBH
0154 A4                MUL     AB
0155 24B8              ADD     A,#LOW context+0B8H
0157 F582              MOV     DPL,A
0159 E4                CLR     A
015A 340C              ADDC    A,#HIGH context+0B8H
015C F583              MOV     DPH,A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 154 

015E E4                CLR     A
015F F0                MOVX    @DPTR,A
0160         ?C0489:
                                           ; SOURCE LINE # 2833
0160 900DE4            MOV     DPTR,#supply_1500ma_port
0163 E0                MOVX    A,@DPTR
0164 FF                MOV     R7,A
0165 900000      R     MOV     DPTR,#port_index
0168 E0                MOVX    A,@DPTR
0169 6F                XRL     A,R7
016A 700E              JNZ     ?C0491
016C 900DE3            MOV     DPTR,#supply_1500ma_flag
016F E0                MOVX    A,@DPTR
0170 B40107            CJNE    A,#01H,?C0491
                                           ; SOURCE LINE # 2834
0173 E4                CLR     A
0174 A3                INC     DPTR
0175 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2835
0176 900DE3            MOV     DPTR,#supply_1500ma_flag
0179 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2836
                                           ; SOURCE LINE # 2838
017A         ?C0491:
017A 22                RET     
             ; FUNCTION _anx_initial_context (END)

             ; FUNCTION pd_initialization (BEGIN)
                                           ; SOURCE LINE # 2840
                                           ; SOURCE LINE # 2841
                                           ; SOURCE LINE # 2842
0000 E4                CLR     A
0001 900A1F            MOV     DPTR,#i
0004 F0                MOVX    @DPTR,A
0005         ?C0492:
0005 900A1F            MOV     DPTR,#i
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A C3                CLR     C
000B 9401              SUBB    A,#01H
000D 5030              JNC     ?C0496
                                           ; SOURCE LINE # 2843
000F EF                MOV     A,R7
0010 120000      R     LCALL   L?0641
0013 B40124            CJNE    A,#01H,?C0494
0016 900A1F            MOV     DPTR,#i
0019 E0                MOVX    A,@DPTR
001A 75F0BB            MOV     B,#0BBH
001D A4                MUL     AB
001E 24A5              ADD     A,#LOW context+0A5H
0020 F582              MOV     DPL,A
0022 E4                CLR     A
0023 340C              ADDC    A,#HIGH context+0A5H
0025 F583              MOV     DPH,A
0027 E0                MOVX    A,@DPTR
0028 6010              JZ      ?C0494
                                           ; SOURCE LINE # 2844
002A 7F67              MOV     R7,#067H
002C 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2845
002F 900A1F            MOV     DPTR,#i
0032 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 155 

0033 900A7F            MOV     DPTR,#port_id
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2846
0037 120000      E     LCALL   send_initialized_setting
                                           ; SOURCE LINE # 2847
                                           ; SOURCE LINE # 2848
003A         ?C0494:
003A 120000      R     LCALL   L?0739
003D 80C6              SJMP    ?C0492
                                           ; SOURCE LINE # 2849
003F         ?C0496:
003F 22                RET     
             ; FUNCTION pd_initialization (END)

             ; FUNCTION _ucsi_async_notify_raise_up (BEGIN)
                                           ; SOURCE LINE # 2851
;---- Variable 'ms' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2852
                                           ; SOURCE LINE # 2853
0000 900A00            MOV     DPTR,#ucsi_ppm_state
0003 E0                MOVX    A,@DPTR
0004 14                DEC     A
0005 6011              JZ      ?C0501
0007 14                DEC     A
0008 7009              JNZ     ?C0500
                                           ; SOURCE LINE # 2854
                                           ; SOURCE LINE # 2855
                                           ; SOURCE LINE # 2856
000A         ?C0499:
                                           ; SOURCE LINE # 2857
000A 900A29            MOV     DPTR,#ucsi_async_checking_timer
000D E4                CLR     A
000E F0                MOVX    @DPTR,A
000F A3                INC     DPTR
0010 EF                MOV     A,R7
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2858
0012 22                RET     
                                           ; SOURCE LINE # 2859
0013         ?C0500:
                                           ; SOURCE LINE # 2860
0013 900A2B            MOV     DPTR,#ucsi_async_restore
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2861
                                           ; SOURCE LINE # 2862
                                           ; SOURCE LINE # 2863
0018         ?C0501:
0018 22                RET     
             ; FUNCTION _ucsi_async_notify_raise_up (END)

             ; FUNCTION ucsi_opm_handler (BEGIN)
                                           ; SOURCE LINE # 2873
                                           ; SOURCE LINE # 2874
                                           ; SOURCE LINE # 2875
0000 900A00            MOV     DPTR,#ucsi_ppm_state
0003 E0                MOVX    A,@DPTR
0004 24FE              ADD     A,#0FEH
0006 600E              JZ      ?C0504
0008 24FE              ADD     A,#0FEH
000A 600D              JZ      ?C0505
000C 14                DEC     A
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 156 

000D 600D              JZ      ?C0507
000F 2404              ADD     A,#04H
0011 700C              JNZ     ?C0508
                                           ; SOURCE LINE # 2876
0013         ?C0503:
                                           ; SOURCE LINE # 2877
0013 020000      R     LJMP    ppm_nd_process
                                           ; SOURCE LINE # 2878
                                           ; SOURCE LINE # 2879
0016         ?C0504:
                                           ; SOURCE LINE # 2880
0016 020000      R     LJMP    ppm_ne_process
                                           ; SOURCE LINE # 2881
                                           ; SOURCE LINE # 2882
0019         ?C0505:
                                           ; SOURCE LINE # 2883
0019 020000      R     LJMP    ppm_pc_process
                                           ; SOURCE LINE # 2884
                                           ; SOURCE LINE # 2885
                                           ; SOURCE LINE # 2886
                                           ; SOURCE LINE # 2887
001C         ?C0507:
                                           ; SOURCE LINE # 2888
001C 120000      R     LCALL   ppm_wcca_process
                                           ; SOURCE LINE # 2889
                                           ; SOURCE LINE # 2890
                                           ; SOURCE LINE # 2891
001F         ?C0508:
001F 22                RET     
             ; FUNCTION ucsi_opm_handler (END)

             ; FUNCTION ANX_HOOK_10ms (BEGIN)
                                           ; SOURCE LINE # 2893
                                           ; SOURCE LINE # 2894
                                           ; SOURCE LINE # 2895
0000 120000      R     LCALL   pd_initialization
                                           ; SOURCE LINE # 2896
0003 120000      R     LCALL   checking_opm_command
                                           ; SOURCE LINE # 2897
0006 020000      R     LJMP    ucsi_opm_handler
             ; FUNCTION ANX_HOOK_10ms (END)

             ; FUNCTION ANX_HOOK_1ms (BEGIN)
                                           ; SOURCE LINE # 2899
                                           ; SOURCE LINE # 2900
                                           ; SOURCE LINE # 2901
0000 900A1C            MOV     DPTR,#timer1msCount
0003 E0                MOVX    A,@DPTR
0004 04                INC     A
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2928
0006 E4                CLR     A
0007 900A7F            MOV     DPTR,#port_id
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2933
000B 900000      E     MOV     DPTR,#GPDRC
000E E0                MOVX    A,@DPTR
000F 20E325            JB      ACC.3,?C0510
                                           ; SOURCE LINE # 2935
                                           ; SOURCE LINE # 2937
0012 120000      R     LCALL   L?0694
0015 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 157 

0016 C3                CLR     C
0017 9464              SUBB    A,#064H
0019 5014              JNC     ?C0511
                                           ; SOURCE LINE # 2938
                                           ; SOURCE LINE # 2939
001B 7FBC              MOV     R7,#0BCH
001D 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2940
0020 120000      E     LCALL   anx_alert_message_isr
                                           ; SOURCE LINE # 2941
0023 7FBD              MOV     R7,#0BDH
0025 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2942
0028 120000      R     LCALL   L?0694
002B E0                MOVX    A,@DPTR
002C 04                INC     A
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2943
002E 22                RET     
002F         ?C0511:
                                           ; SOURCE LINE # 2944
                                           ; SOURCE LINE # 2945
002F 900A1C            MOV     DPTR,#timer1msCount
0032 E0                MOVX    A,@DPTR
0033 B4C806            CJNE    A,#0C8H,?C0515
                                           ; SOURCE LINE # 2946
                                           ; SOURCE LINE # 2948
                                           ; SOURCE LINE # 2949
0036 22                RET     
0037         ?C0510:
                                           ; SOURCE LINE # 2951
                                           ; SOURCE LINE # 2952
0037 120000      R     LCALL   L?0695
003A E4                CLR     A
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2953
                                           ; SOURCE LINE # 2954
003C         ?C0515:
003C 22                RET     
             ; FUNCTION ANX_HOOK_1ms (END)

             ; FUNCTION _anx_request_voltage_in_100mv (BEGIN)
                                           ; SOURCE LINE # 2964
;---- Variable 'port_id' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2965
                                           ; SOURCE LINE # 2966
;---- Variable 'vol' assigned to Register 'R6' ----
0000 E4                CLR     A
                                           ; SOURCE LINE # 2968
0001 900A05            MOV     DPTR,#self_charging_error
0004 E0                MOVX    A,@DPTR
0005 B40103            CJNE    A,#01H,?C0516
                                           ; SOURCE LINE # 2969
0008 7F00              MOV     R7,#00H
000A 22                RET     
000B         ?C0516:
                                           ; SOURCE LINE # 2970
000B EF                MOV     A,R7
000C 120000      R     LCALL   L?0641
000F 6007              JZ      ?C0519
0011 120000      R     LCALL   L?0686
0014 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 158 

0015 B40103            CJNE    A,#01H,?C0518
0018         ?C0519:
                                           ; SOURCE LINE # 2971
0018 7F00              MOV     R7,#00H
001A 22                RET     
001B         ?C0518:
                                           ; SOURCE LINE # 2973
001B EF                MOV     A,R7
001C 75F0BB            MOV     B,#0BBH
001F A4                MUL     AB
0020 2404              ADD     A,#LOW context+04H
0022 F582              MOV     DPL,A
0024 E4                CLR     A
0025 340C              ADDC    A,#HIGH context+04H
0027 F583              MOV     DPH,A
0029 E0                MOVX    A,@DPTR
002A FD                MOV     R5,A
002B 7004              JNZ     ?C0520
002D 7F32              MOV     R7,#032H
002F 8003              SJMP    ?C0521
0031         ?C0520:
0031 CF                XCH     A,R7
0032 ED                MOV     A,R5
0033 CF                XCH     A,R7
0034         ?C0521:
                                           ; SOURCE LINE # 2977
                                           ; SOURCE LINE # 2978
0034         ?C0517:
0034 22                RET     
             ; FUNCTION _anx_request_voltage_in_100mv (END)

             ; FUNCTION _anx_request_current_in_50ma (BEGIN)
                                           ; SOURCE LINE # 2988
;---- Variable 'port_id' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2989
                                           ; SOURCE LINE # 2990
;---- Variable 'cur' assigned to Register 'R6' ----
0000 E4                CLR     A
0001 FE                MOV     R6,A
                                           ; SOURCE LINE # 2992
0002 900A05            MOV     DPTR,#self_charging_error
0005 E0                MOVX    A,@DPTR
0006 B40103            CJNE    A,#01H,?C0522
                                           ; SOURCE LINE # 2993
0009 7F00              MOV     R7,#00H
000B 22                RET     
000C         ?C0522:
                                           ; SOURCE LINE # 2994
000C EF                MOV     A,R7
000D 120000      R     LCALL   L?0641
0010 6007              JZ      ?C0525
0012 120000      R     LCALL   L?0686
0015 E0                MOVX    A,@DPTR
0016 B40104            CJNE    A,#01H,?C0524
0019         ?C0525:
                                           ; SOURCE LINE # 2995
0019 CF                XCH     A,R7
001A EE                MOV     A,R6
001B CF                XCH     A,R7
001C 22                RET     
001D         ?C0524:
                                           ; SOURCE LINE # 2997
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 159 

001D EF                MOV     A,R7
001E 75F0BB            MOV     B,#0BBH
0021 A4                MUL     AB
0022 2403              ADD     A,#LOW context+03H
0024 F582              MOV     DPL,A
0026 E4                CLR     A
0027 340C              ADDC    A,#HIGH context+03H
0029 F583              MOV     DPH,A
002B E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 3002
002C FF                MOV     R7,A
                                           ; SOURCE LINE # 3003
002D         ?C0523:
002D 22                RET     
             ; FUNCTION _anx_request_current_in_50ma (END)

             ; FUNCTION _anx_connector_power_status (BEGIN)
                                           ; SOURCE LINE # 3013
;---- Variable 'port_id' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 3014
                                           ; SOURCE LINE # 3016
0000 120000      R     LCALL   L?0687
0003 E0                MOVX    A,@DPTR
0004 7004              JNZ     ?C0526
0006 7F01              MOV     R7,#01H
0008 8002              SJMP    ?C0527
000A         ?C0526:
000A 7F00              MOV     R7,#00H
000C         ?C0527:
                                           ; SOURCE LINE # 3017
000C         ?C0528:
000C 22                RET     
             ; FUNCTION _anx_connector_power_status (END)

             ; FUNCTION anx_ucsi_command_received (BEGIN)
                                           ; SOURCE LINE # 3020
                                           ; SOURCE LINE # 3021
                                           ; SOURCE LINE # 3022
0000 900A79            MOV     DPTR,#ucsi_received_command
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3023
0006 22                RET     
             ; FUNCTION anx_ucsi_command_received (END)

             ; FUNCTION _anx_ucsi_cc_status_event (BEGIN)
                                           ; SOURCE LINE # 3032
0000 900000      R     MOV     DPTR,#port_id
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3033
                                           ; SOURCE LINE # 3034
                                           ; SOURCE LINE # 3040
0008         ?C0531:
0008 22                RET     
             ; FUNCTION _anx_ucsi_cc_status_event (END)

             ; FUNCTION _anx_ucsi_pin_assignment_event (BEGIN)
                                           ; SOURCE LINE # 3050
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 160 

0000 900000      R     MOV     DPTR,#port_id
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
;---- Variable 'pin_assignment' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 3051
                                           ; SOURCE LINE # 3053
                                           ; SOURCE LINE # 3054
                                           ; SOURCE LINE # 3056
                                           ; SOURCE LINE # 3057
                                           ; SOURCE LINE # 3058
                                           ; SOURCE LINE # 3060
                                           ; SOURCE LINE # 3061
                                           ; SOURCE LINE # 3063
                                           ; SOURCE LINE # 3064
                                           ; SOURCE LINE # 3065
0005         ?C0537:
0005 22                RET     
             ; FUNCTION _anx_ucsi_pin_assignment_event (END)

             ; FUNCTION _anx_ucsi_hpd_event (BEGIN)
                                           ; SOURCE LINE # 3073
0000 900000      R     MOV     DPTR,#port_id
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3074
                                           ; SOURCE LINE # 3076
0008 22                RET     
             ; FUNCTION _anx_ucsi_hpd_event (END)

             ; FUNCTION _anx_ucsi_detach_event (BEGIN)
                                           ; SOURCE LINE # 3083
0000 900000      R     MOV     DPTR,#port_id
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3084
                                           ; SOURCE LINE # 3086
0005 22                RET     
             ; FUNCTION _anx_ucsi_detach_event (END)

             ; FUNCTION _anx_ucsi_renotify_OPM (BEGIN)
                                           ; SOURCE LINE # 3093
;---- Variable 'port_id' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 3094
                                           ; SOURCE LINE # 3096
0000 EF                MOV     A,R7
0001 120000      R     LCALL   L?0641
0004 6401              XRL     A,#01H
0006 703B              JNZ     ?C0542
                                           ; SOURCE LINE # 3100
0008 EF                MOV     A,R7
0009 120000      R     LCALL   L?0634
000C E0                MOVX    A,@DPTR
000D 4440              ORL     A,#040H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3101
0010 EF                MOV     A,R7
0011 120000      R     LCALL   L?0634
0014 E0                MOVX    A,@DPTR
0015 4408              ORL     A,#08H
C51 COMPILER V7.50   UCSI                                                                  09/08/2020 15:56:27 PAGE 161 

0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3102
0018 EF                MOV     A,R7
0019 120000      R     LCALL   L?0634
001C E0                MOVX    A,@DPTR
001D 4402              ORL     A,#02H
                                           ; SOURCE LINE # 3103
001F 120000      R     LCALL   L?0639
0022 120000      R     LCALL   L?0712
0025 120000      E     LCALL   ?C?LLDXDATA0
0028 E8                MOV     A,R0
0029 49                ORL     A,R1
002A 4A                ORL     A,R2
002B 4B                ORL     A,R3
002C 6010              JZ      ?C0541
                                           ; SOURCE LINE # 3105
002E EF                MOV     A,R7
002F 120000      R     LCALL   L?0631
0032 E0                MOVX    A,@DPTR
0033 4440              ORL     A,#040H
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3108
0036 EF                MOV     A,R7
0037 120000      R     LCALL   L?0631
003A E0                MOVX    A,@DPTR
003B 4420              ORL     A,#020H
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3110
003E         ?C0541:
                                           ; SOURCE LINE # 3111
003E 7FFA              MOV     R7,#0FAH
0040 120000      R     LCALL   _ucsi_async_notify_raise_up
                                           ; SOURCE LINE # 3112
                                           ; SOURCE LINE # 3113
0043         ?C0542:
0043 22                RET     
             ; FUNCTION _anx_ucsi_renotify_OPM (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   8300    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

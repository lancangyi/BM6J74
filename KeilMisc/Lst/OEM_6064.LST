C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE OEM_6064
OBJECT MODULE PLACED IN Code\Oem\OEM_6064.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Code\Oem\OEM_6064.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\IN
                    -CLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_6064.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          //-----------------------------------------------------------------------
  14          // Handle command 40 - 
  15          //----------------------------------------------------------------------- 
  16          void OEM_Cmd_40(void)
  17          {
  18   1              SetHandleCmdData(1);
  19   1      }
  20          
  21          //-----------------------------------------------------------------------
  22          // Handle command 80 - 
  23          //----------------------------------------------------------------------- 
  24          void OEM_Cmd_80(void)
  25          {
  26   1              SetHandleCmdData(1);
  27   1      }
  28          
  29          //-----------------------------------------------------------------------
  30          // Handle command 81 - 
  31          //-----------------------------------------------------------------------
  32          void OEM_Cmd_81(void)
  33          {
  34   1              SetHandleCmdData(2);
  35   1      }
  36          
  37          //-----------------------------------------------------------------------
  38          // Handle command 94 - 
  39          //-----------------------------------------------------------------------
  40          void OEM_Cmd_94(void)
  41          {
  42   1          RamProgram(0x64);   // For AMI BISO flash utility
  43   1      }
  44          
  45          //-----------------------------------------------------------------------
  46          // Handle command B4 - Phoenix flash command for SPI rom
  47          //-----------------------------------------------------------------------
  48          void OEM_Cmd_B4(void)
  49          {
  50   1          RamProgram(0x64);
  51   1      }
  52          
  53          //-----------------------------------------------------------------------
  54          // Handle command D8 - 
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 2   

  55          //-----------------------------------------------------------------------
  56          void OEM_Cmd_D8(void)
  57          {
  58   1          RamProgram(0x64);
  59   1      }
  60          
  61          //-----------------------------------------------------------------------
  62          // Handle command D9 - 
  63          //-----------------------------------------------------------------------
  64          void OEM_Cmd_D9(void)
  65          {
  66   1              SetHandleCmdData(1);
  67   1      }
  68          
  69          //-----------------------------------------------------------------------
  70          // Handle command DD - 
  71          //-----------------------------------------------------------------------
  72          void OEM_Cmd_DD(void)
  73          {
  74   1          RamProgram(0x64);
  75   1      }
  76          
  77          //-----------------------------------------------------------------------
  78          // Process command data 40 - 
  79          //-----------------------------------------------------------------------
  80          void OEM_Cmd_40Data(void)
  81          {
  82   1              CoolBootTime = KBHIData&0x7F;
  83   1              CoolBootFlag = 0x01;
  84   1      }
  85          
  86          //-----------------------------------------------------------------------
  87          // Process command data 80 - 
  88          //-----------------------------------------------------------------------
  89          void OEM_Cmd_80Data(void)
  90          {
  91   1              ResponseKBData(Hook_ReadMapECSpace(KBHIData));
  92   1      }
  93          
  94          //-----------------------------------------------------------------------
  95          // Process command data 81 - 
  96          //-----------------------------------------------------------------------
  97          void OEM_Cmd_81Data(void)
  98          {
  99   1              if (KBHIStep == 2)
 100   1              {
 101   2              KBHIData1=KBHIData;     // address
 102   2              }
 103   1              else
 104   1              {
 105   2                      Hook_WriteMapECSpace(KBHIData1,KBHIData);
 106   2              }
 107   1      }
 108          
 109          //-----------------------------------------------------------------------
 110          // Process command data D9 - 
 111          //-----------------------------------------------------------------------
 112          void SendVerFunction(BYTE code* cpntr)
 113          {
 114   1          BYTE index;
 115   1          index = 0x00;
 116   1          
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 3   

 117   1          while(1)
 118   1          {
 119   2              if(*cpntr=='$')
 120   2              {
 121   3                  Data_To_Host(*cpntr);
 122   3                  break;
 123   3              }
 124   2              else
 125   2              {
 126   3                  Data_To_Host_nWait(*cpntr);
 127   3              }
 128   2              cpntr++;
 129   2      
 130   2              index++;
 131   2              if(index>32)
 132   2              {
 133   3                  break;
 134   3              }
 135   2          }
 136   1      }
 137          
 138          void OEM_Cmd_D9Data(void)
 139          {
 140   1          BYTE index;
 141   1          index=0x00;
 142   1      
 143   1          switch(KBHIData)
 144   1          {
 145   2              case 1:         // 1: revision desciption
 146   2                  SendVerFunction(P_rev);   
 147   2                  break;
 148   2                  
 149   2              case 2:         // 2: platform information
 150   2                  SendVerFunction(P_model);         
 151   2                  break;            
 152   2          
 153   2              case 3:         // 3: last updated date
 154   2                  SendVerFunction(P_date);                
 155   2                  break;
 156   2      
 157   2              case 4:         // 4: internal revision
 158   2                  Data_To_Host_nWait(P_digit[0]);
 159   2                  Data_To_Host(P_digit[1]);
 160   2                  break;
 161   2      
 162   2              default:
 163   2                  break;
 164   2          }
 165   1      }
 166          
 167          //----------------------------------------------------------------------------
 168          // The function of 60 port
 169          //  Note : 
 170          //  KBHIStep != 0x00 is necessary.
 171          //----------------------------------------------------------------------------
 172          void Hook_60Port(BYTE KBHIData)
 173          {
 174   1          switch(KBHIData)
 175   1          {
 176   2              case 0x40:
 177   2              OEM_Cmd_40Data();
 178   2              break;
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 4   

 179   2                      
 180   2              case 0x80:
 181   2              OEM_Cmd_80Data();
 182   2              break;
 183   2      
 184   2              case 0x81:
 185   2              OEM_Cmd_81Data();
 186   2              break;
 187   2      
 188   2              case 0xD9:
 189   2              OEM_Cmd_D9Data();
 190   2              break;
 191   2                  
 192   2      
 193   2              default:
 194   2              break;
 195   2          }
 196   1      }
 197          
 198          //----------------------------------------------------------------------------
 199          // The function of 64 port
 200          //----------------------------------------------------------------------------
 201          void Hook_64Port(BYTE KBHICmd)
 202          {
 203   1          switch(KBHICmd)
 204   1          {
 205   2              case 0x40:
 206   2              OEM_Cmd_40();
 207   2              break;
 208   2                      
 209   2              case 0x80:
 210   2              OEM_Cmd_80();
 211   2              break;
 212   2      
 213   2              case 0x81:
 214   2              OEM_Cmd_81();
 215   2              break;
 216   2      
 217   2              case 0x94:
 218   2              OEM_Cmd_94();
 219   2              break;
 220   2      
 221   2              case 0xB4:
 222   2              OEM_Cmd_B4();
 223   2              break;
 224   2      
 225   2              case 0xD8:
 226   2              OEM_Cmd_D8();
 227   2              break;
 228   2      
 229   2              case 0xD9:
 230   2              OEM_Cmd_D9();
 231   2              break;
 232   2      
 233   2              case 0xDD:
 234   2              OEM_Cmd_DD();
 235   2              break;
 236   2      
 237   2              default:
 238   2              break;
 239   2          }
 240   1      }
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 5   

 241          
 242          //-----------------------------------------------------------------------
 243          // kbcmd : keyboard command from 0x60 port 
 244          //-----------------------------------------------------------------------
 245          void Hook_Keyboard_Cmd(BYTE kbcmd)
 246          {
 247   1      
 248   1      }
 249          
 250          //-----------------------------------------------------------------------
 251          // kbcmdp : keyboard command parameter from 0x60 port 
 252          // for example keyboard command (0xED, 0xF0, 0xF3)
 253          //-----------------------------------------------------------------------
 254          void Hook_Keyboard_Cmd_Parameter(BYTE kbcmdp)
 255          {
 256   1      
 257   1      }
 258          
 259          //-----------------------------------------------------------------------
 260          // mscmd : mosue command from 0x64 port 0xD4 command
 261          //-----------------------------------------------------------------------
 262          void Hook_Mouse_D4Cmd(BYTE mscmd)
 263          {
 264   1      
 265   1      }
 266          
 267          //-----------------------------------------------------------------------
 268          // mscmd : mosue command from 0x64 port 0x90 command
 269          //-----------------------------------------------------------------------
 270          void Hook_Mouse_90Cmd(BYTE mscmd)
 271          {
 272   1      
 273   1      }
 274          
 275          //-----------------------------------------------------------------------
 276          // mscmd : mosue command from 0x64 port 0x91 command
 277          //-----------------------------------------------------------------------
 278          void Hook_Mouse_91Cmd(BYTE mscmd)
 279          {
 280   1      
 281   1      }
 282          
 283          //-----------------------------------------------------------------------
 284          // mscmd : mosue command from 0x64 port 0x92 command
 285          //-----------------------------------------------------------------------
 286          void Hook_Mouse_92Cmd(BYTE mscmd)
 287          {
 288   1      
 289   1      }
 290          
 291          //-----------------------------------------------------------------------
 292          // mscmd : mosue command from 0x64 port 0x93 command
 293          //-----------------------------------------------------------------------
 294          void Hook_Mouse_93Cmd(BYTE mscmd)
 295          {
 296   1      
 297   1      }
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0036 (BEGIN)
0000         L?0055:
0000 900000      R     MOV     DPTR,#cpntr
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 F582              MOV     DPL,A
0009 8E83              MOV     DPH,R6
000B E4                CLR     A
000C 93                MOVC    A,@A+DPTR
000D FF                MOV     R7,A
000E 22                RET     
             ; FUNCTION Com0036 (END)

             ; FUNCTION OEM_Cmd_40 (BEGIN)
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
0000 7F01              MOV     R7,#01H
0002 020000      E     LJMP    _SetHandleCmdData
             ; FUNCTION OEM_Cmd_40 (END)

             ; FUNCTION OEM_Cmd_80 (BEGIN)
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
0000 7F01              MOV     R7,#01H
0002 020000      E     LJMP    _SetHandleCmdData
             ; FUNCTION OEM_Cmd_80 (END)

             ; FUNCTION OEM_Cmd_81 (BEGIN)
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 34
0000 7F02              MOV     R7,#02H
0002 020000      E     LJMP    _SetHandleCmdData
             ; FUNCTION OEM_Cmd_81 (END)

             ; FUNCTION OEM_Cmd_94 (BEGIN)
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
0000 7F64              MOV     R7,#064H
0002 020000      E     LJMP    _RamProgram
             ; FUNCTION OEM_Cmd_94 (END)

             ; FUNCTION OEM_Cmd_B4 (BEGIN)
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
0000 7F64              MOV     R7,#064H
0002 020000      E     LJMP    _RamProgram
             ; FUNCTION OEM_Cmd_B4 (END)

             ; FUNCTION OEM_Cmd_D8 (BEGIN)
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 7   

0000 7F64              MOV     R7,#064H
0002 020000      E     LJMP    _RamProgram
             ; FUNCTION OEM_Cmd_D8 (END)

             ; FUNCTION OEM_Cmd_D9 (BEGIN)
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
0000 7F01              MOV     R7,#01H
0002 020000      E     LJMP    _SetHandleCmdData
             ; FUNCTION OEM_Cmd_D9 (END)

             ; FUNCTION OEM_Cmd_DD (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0000 7F64              MOV     R7,#064H
0002 020000      E     LJMP    _RamProgram
             ; FUNCTION OEM_Cmd_DD (END)

             ; FUNCTION OEM_Cmd_40Data (BEGIN)
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
0000 E500        E     MOV     A,KBHIData
0002 547F              ANL     A,#07FH
0004 900000      E     MOV     DPTR,#CoolBootTime
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
0008 900000      E     MOV     DPTR,#CoolBootFlag
000B 7401              MOV     A,#01H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 84
000E 22                RET     
             ; FUNCTION OEM_Cmd_40Data (END)

             ; FUNCTION OEM_Cmd_80Data (BEGIN)
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0000 AF00        E     MOV     R7,KBHIData
0002 120000      E     LCALL   _Hook_ReadMapECSpace
0005 020000      E     LJMP    _ResponseKBData
             ; FUNCTION OEM_Cmd_80Data (END)

             ; FUNCTION OEM_Cmd_81Data (BEGIN)
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
0000 E500        E     MOV     A,KBHIStep
0002 B40204            CJNE    A,#02H,?C0011
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
0005 850000      E     MOV     KBHIData1,KBHIData
                                           ; SOURCE LINE # 102
0008 22                RET     
0009         ?C0011:
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
0009 AD00        E     MOV     R5,KBHIData
000B AF00        E     MOV     R7,KBHIData1
000D 120000      E     LCALL   _Hook_WriteMapECSpace
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 8   

                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
0010         ?C0013:
0010 22                RET     
             ; FUNCTION OEM_Cmd_81Data (END)

             ; FUNCTION _SendVerFunction (BEGIN)
                                           ; SOURCE LINE # 112
0000 900000      R     MOV     DPTR,#cpntr
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 115
0008 E4                CLR     A
0009 A3                INC     DPTR
000A F0                MOVX    @DPTR,A
000B         ?C0014:
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
000B 120000      R     LCALL   L?0055
000E B42403            CJNE    A,#024H,?C0016
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
0011 020000      E     LJMP    _Data_To_Host
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
0014         ?C0016:
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 126
0014 120000      R     LCALL   L?0055
0017 120000      E     LCALL   _Data_To_Host_nWait
                                           ; SOURCE LINE # 127
001A         ?C0017:
                                           ; SOURCE LINE # 128
001A 900000      R     MOV     DPTR,#cpntr
001D E4                CLR     A
001E 75F001            MOV     B,#01H
0021 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 130
0024 900000      R     MOV     DPTR,#index
0027 E0                MOVX    A,@DPTR
0028 04                INC     A
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
002A E0                MOVX    A,@DPTR
002B D3                SETB    C
002C 9420              SUBB    A,#020H
002E 40DB              JC      ?C0014
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0030         ?C0019:
0030 22                RET     
             ; FUNCTION _SendVerFunction (END)

             ; FUNCTION OEM_Cmd_D9Data (BEGIN)
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 9   

                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 141
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#index
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
0005 E500        E     MOV     A,KBHIData
0007 24FE              ADD     A,#0FEH
0009 6010              JZ      ?C0022
000B 14                DEC     A
000C 6013              JZ      ?C0023
000E 14                DEC     A
000F 6017              JZ      ?C0024
0011 2403              ADD     A,#03H
0013 7025              JNZ     ?C0026
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
0015         ?C0021:
                                           ; SOURCE LINE # 146
0015 7E00        E     MOV     R6,#HIGH P_rev
0017 7F00        E     MOV     R7,#LOW P_rev
                                           ; SOURCE LINE # 147
0019 800A              SJMP    ?C0053
                                           ; SOURCE LINE # 149
001B         ?C0022:
                                           ; SOURCE LINE # 150
001B 7E00        E     MOV     R6,#HIGH P_model
001D 7F00        E     MOV     R7,#LOW P_model
001F         ?C0052:
                                           ; SOURCE LINE # 151
001F 8004              SJMP    ?C0053
                                           ; SOURCE LINE # 153
0021         ?C0023:
                                           ; SOURCE LINE # 154
0021 7E00        E     MOV     R6,#HIGH P_date
0023 7F00        E     MOV     R7,#LOW P_date
0025         ?C0053:
0025 020000      R     LJMP    _SendVerFunction
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 157
0028         ?C0024:
                                           ; SOURCE LINE # 158
0028 900000      E     MOV     DPTR,#P_digit
002B E4                CLR     A
002C 93                MOVC    A,@A+DPTR
002D FF                MOV     R7,A
002E 120000      E     LCALL   _Data_To_Host_nWait
                                           ; SOURCE LINE # 159
0031 900000      E     MOV     DPTR,#P_digit+01H
0034 E4                CLR     A
0035 93                MOVC    A,@A+DPTR
0036 FF                MOV     R7,A
0037 120000      E     LCALL   _Data_To_Host
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
003A         ?C0026:
003A 22                RET     
             ; FUNCTION OEM_Cmd_D9Data (END)
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 10  


             ; FUNCTION _Hook_60Port (BEGIN)
                                           ; SOURCE LINE # 172
;---- Variable 'KBHIData' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
0000 EF                MOV     A,R7
0001 2480              ADD     A,#080H
0003 600E              JZ      ?C0029
0005 14                DEC     A
0006 600E              JZ      ?C0030
0008 24A8              ADD     A,#0A8H
000A 600D              JZ      ?C0031
000C 2499              ADD     A,#099H
000E 700C              JNZ     ?C0033
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
0010         ?C0028:
                                           ; SOURCE LINE # 177
0010 020000      R     LJMP    OEM_Cmd_40Data
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 180
0013         ?C0029:
                                           ; SOURCE LINE # 181
0013 020000      R     LJMP    OEM_Cmd_80Data
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 184
0016         ?C0030:
                                           ; SOURCE LINE # 185
0016 020000      R     LJMP    OEM_Cmd_81Data
                                           ; SOURCE LINE # 186
                                           ; SOURCE LINE # 188
0019         ?C0031:
                                           ; SOURCE LINE # 189
0019 120000      R     LCALL   OEM_Cmd_D9Data
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
001C         ?C0033:
001C 22                RET     
             ; FUNCTION _Hook_60Port (END)

             ; FUNCTION _Hook_64Port (BEGIN)
                                           ; SOURCE LINE # 201
;---- Variable 'KBHICmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
0000 EF                MOV     A,R7
0001 120000      E     LCALL   ?C?CCASE
0004 0000        R     DW      ?C0035
0006 40                DB      040H
0007 0000        R     DW      ?C0036
0009 80                DB      080H
000A 0000        R     DW      ?C0037
000C 81                DB      081H
000D 0000        R     DW      ?C0038
000F 94                DB      094H
0010 0000        R     DW      ?C0039
0012 B4                DB      0B4H
0013 0000        R     DW      ?C0040
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 11  

0015 D8                DB      0D8H
0016 0000        R     DW      ?C0041
0018 D9                DB      0D9H
0019 0000        R     DW      ?C0042
001B DD                DB      0DDH
001C 0000              DW      00H
001E 0000        R     DW      ?C0044
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
0020         ?C0035:
                                           ; SOURCE LINE # 206
0020 020000      R     LJMP    OEM_Cmd_40
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 209
0023         ?C0036:
                                           ; SOURCE LINE # 210
0023 020000      R     LJMP    OEM_Cmd_80
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 213
0026         ?C0037:
                                           ; SOURCE LINE # 214
0026 020000      R     LJMP    OEM_Cmd_81
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 217
0029         ?C0038:
                                           ; SOURCE LINE # 218
0029 020000      R     LJMP    OEM_Cmd_94
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 221
002C         ?C0039:
                                           ; SOURCE LINE # 222
002C 020000      R     LJMP    OEM_Cmd_B4
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 225
002F         ?C0040:
                                           ; SOURCE LINE # 226
002F 020000      R     LJMP    OEM_Cmd_D8
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 229
0032         ?C0041:
                                           ; SOURCE LINE # 230
0032 020000      R     LJMP    OEM_Cmd_D9
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 233
0035         ?C0042:
                                           ; SOURCE LINE # 234
0035 120000      R     LCALL   OEM_Cmd_DD
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
0038         ?C0044:
0038 22                RET     
             ; FUNCTION _Hook_64Port (END)

             ; FUNCTION _Hook_Keyboard_Cmd (BEGIN)
                                           ; SOURCE LINE # 245
0000 900000      R     MOV     DPTR,#kbcmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 246
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 12  

                                           ; SOURCE LINE # 248
0005 22                RET     
             ; FUNCTION _Hook_Keyboard_Cmd (END)

             ; FUNCTION _Hook_Keyboard_Cmd_Parameter (BEGIN)
                                           ; SOURCE LINE # 254
0000 900000      R     MOV     DPTR,#kbcmdp
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 255
                                           ; SOURCE LINE # 257
0005 22                RET     
             ; FUNCTION _Hook_Keyboard_Cmd_Parameter (END)

             ; FUNCTION _Hook_Mouse_D4Cmd (BEGIN)
                                           ; SOURCE LINE # 262
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 265
0005 22                RET     
             ; FUNCTION _Hook_Mouse_D4Cmd (END)

             ; FUNCTION _Hook_Mouse_90Cmd (BEGIN)
                                           ; SOURCE LINE # 270
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 273
0005 22                RET     
             ; FUNCTION _Hook_Mouse_90Cmd (END)

             ; FUNCTION _Hook_Mouse_91Cmd (BEGIN)
                                           ; SOURCE LINE # 278
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 281
0005 22                RET     
             ; FUNCTION _Hook_Mouse_91Cmd (END)

             ; FUNCTION _Hook_Mouse_92Cmd (BEGIN)
                                           ; SOURCE LINE # 286
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 289
0005 22                RET     
             ; FUNCTION _Hook_Mouse_92Cmd (END)

             ; FUNCTION _Hook_Mouse_93Cmd (BEGIN)
                                           ; SOURCE LINE # 294
0000 900000      R     MOV     DPTR,#mscmd
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 297
0005 22                RET     
C51 COMPILER V7.50   OEM_6064                                                              09/08/2020 15:56:24 PAGE 13  

             ; FUNCTION _Hook_Mouse_93Cmd (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    331    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

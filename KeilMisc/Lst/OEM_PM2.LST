C51 COMPILER V7.50   OEM_PM2                                                               09/08/2020 15:56:25 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE OEM_PM2
OBJECT MODULE PLACED IN Code\Oem\OEM_PM2.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Code\Oem\OEM_PM2.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\INC
                    -LUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*----------------------------------------------------------------------------
   2           * Filename: OEM_PM2.C  For Chipset: ITE.IT85XX
   3           *
   4           * Copyright (c) 2010 - , ITE Tech. Inc. All Rights Reserved. 
   5           *
   6           * You may not present,reproduce,distribute,publish,display,modify,adapt,
   7           * perform,transmit,broadcast,recite,release,license or otherwise exploit
   8           * any part of this publication in any form,by any means,without the prior
   9           * written permission of ITE Tech. Inc. 
  10           *---------------------------------------------------------------------------*/
  11          
  12          #include <CORE_INCLUDE.H>
  13          #include <OEM_INCLUDE.H>
  14          
  15          //Label:BLD_TIPIA_20160905_006    start
  16          void Pm2_Cmd_80Data(void)
  17          {
  18   1              if (PM2DataCount == 1)
  19   1              {
  20   2                      Tmp_XPntr=(ECRAM|PM2Data);
  21   2                      PM2DO = *Tmp_XPntr;
  22   2              }
  23   1      }
  24          
  25          void Pm2_Cmd_81Data(void)
  26          {
  27   1              if (PM2DataCount == 2)
  28   1              {
  29   2              PM2Data1=PM2Data;
  30   2              }
  31   1              else if(PM2DataCount == 1)
  32   1              {
  33   2                      Tmp_XPntr=(ECRAM|PM2Data1);
  34   2                      *Tmp_XPntr = PM2Data;
  35   2              }
  36   1      }
  37          
  38          
  39          void Pm2_Cmd_92Data(void)
  40          {
  41   1              switch(PM2DataCount)
  42   1              {
  43   2                      case 2:
  44   2                              PM2Data1=PM2Data;       // address high
  45   2                              break;
  46   2                      case 1:
  47   2                              Tmp_XPntr=((PM2Data1<<8)+PM2Data);
  48   2                              PM2DO = *Tmp_XPntr;
  49   2                              break;
  50   2                      default:break;
  51   2              }
  52   1      }
  53          
  54          void Pm2_Cmd_93Data(void)
C51 COMPILER V7.50   OEM_PM2                                                               09/08/2020 15:56:25 PAGE 2   

  55          {
  56   1              switch(PM2DataCount)
  57   1              {
  58   2                      case 3:
  59   2                              PM2Data2=PM2Data;  // address high
  60   2                              break;
  61   2                      case 2:
  62   2                              PM2Data1=PM2Data;  // address low
  63   2                              break;
  64   2                      case 1:
  65   2                              Tmp_XPntr=((PM2Data2<<8)+PM2Data1);
  66   2                              *Tmp_XPntr=PM2Data;
  67   2                              break;
  68   2                      default:break;
  69   2              }
  70   1      }
  71          
  72          void Pm2_Cmd_80(void)
  73          {
  74   1              PM2DataCount=0x01;
  75   1      }
  76          void Pm2_Cmd_81(void)
  77          {
  78   1              PM2DataCount=0x02;
  79   1      }
  80          void Pm2_Cmd_92(void)
  81          {
  82   1              PM2DataCount=0x02;
  83   1      
  84   1      }
  85          void Pm2_Cmd_93(void)
  86          {
  87   1              PM2DataCount=0x03;
  88   1      }
  89          void Pm2_Cmd_DC(void)
  90          {
  91   1              ITE_Flash_Utility();    // for 8500
  92   1      }
  93          
  94          
  95          
  96          //----------------------------------------------------------------------------
  97          // The function of debuging 68 port
  98          //----------------------------------------------------------------------------
  99          void Hook_68Port(BYTE PM2Data)
 100          {
 101   1              switch(PM2Data)
 102   1              {
 103   2                      case 0x80:
 104   2                              Pm2_Cmd_80Data();   // read ec ram
 105   2                              break;
 106   2                      case 0x81:
 107   2                              Pm2_Cmd_81Data();   // write ec ram
 108   2                              break;
 109   2                      case 0x92:
 110   2                              Pm2_Cmd_92Data();   // read extend ec ram
 111   2                              break;
 112   2                      case 0x93:
 113   2                              Pm2_Cmd_93Data();   // write extend ec ram
 114   2                              break;
 115   2                      default:break;
 116   2              }
C51 COMPILER V7.50   OEM_PM2                                                               09/08/2020 15:56:25 PAGE 3   

 117   1      }
 118          
 119          //----------------------------------------------------------------------------
 120          // The function of debuging 6C port
 121          //----------------------------------------------------------------------------
 122          void Hook_6CPort(BYTE PM2Cmd)
 123          {
 124   1              switch(PM2Cmd)
 125   1              {
 126   2                      case 0x80:
 127   2                              Pm2_Cmd_80();    // read ec ram
 128   2                              break;
 129   2                      case 0x81:
 130   2                              Pm2_Cmd_81();    // write ec ram
 131   2                              break;
 132   2                      case 0x92:
 133   2                              Pm2_Cmd_92();    // read extend ec ram
 134   2                              break;
 135   2                      case 0x93:
 136   2                              Pm2_Cmd_93();    // write extend ec ram
 137   2                              break;
 138   2                      case 0xDC:
 139   2                              Pm2_Cmd_DC();    // Flash EC ROM
 140   2                              break; 
 141   2                      default:break;
 142   2              }
 143   1      }
 144          //Label:BLD_TIPIA_20160905_006    end
 145          
 146          //----------------------------------------------------------------------------
 147          // Process Command/Data received from System via 68/6C interface
 148          //----------------------------------------------------------------------------
 149          void service_pci3(void)
 150          {
 151   1          if ( IS_MASK_CLEAR(PM2STS,P_IBF) )  
 152   1          {
 153   2                      return; 
 154   2          }
 155   1              
 156   1              if ( PM2STS & P_C_D)    // Command port
 157   1              {
 158   2              PM2DataCount =0;
 159   2                      PM2Cmd  = PM2DI;        // Load command
 160   2                      EnablePMCIBFInt();
 161   2                      Hook_6CPort(PM2Cmd);    // Handle command
 162   2              }
 163   1              else                                    // Data port
 164   1              {
 165   2              PM2Data = PM2DI;
 166   2              EnablePMCIBFInt();
 167   2              if (PM2DataCount!=0x00)
 168   2              {
 169   3                          Hook_68Port(PM2Cmd);   // Handle command data
 170   3                          PM2DataCount--;
 171   3                  }
 172   2              }
 173   1      }
 174          
C51 COMPILER V7.50   OEM_PM2                                                               09/08/2020 15:56:25 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com002B (BEGIN)
0000         L?0044:
0000 EF                MOV     A,R7
0001 FE                MOV     R6,A
0002 7C00              MOV     R4,#00H
0004 E4                CLR     A
0005 2D                ADD     A,R5
0006 FF                MOV     R7,A
0007 EC                MOV     A,R4
0008 3E                ADDC    A,R6
0009         L?0045:
0009 7800        E     MOV     R0,#LOW Tmp_XPntr
000B F6                MOV     @R0,A
000C 08                INC     R0
000D EF                MOV     A,R7
000E F6                MOV     @R0,A
000F 18                DEC     R0
0010 E6                MOV     A,@R0
0011 FE                MOV     R6,A
0012 08                INC     R0
0013 E6                MOV     A,@R0
0014 F582              MOV     DPL,A
0016 8E83              MOV     DPH,R6
0018 22                RET     
             ; FUNCTION Com002B (END)

             ; FUNCTION Pm2_Cmd_80Data (BEGIN)
                                           ; SOURCE LINE # 16
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
0000 E500        E     MOV     A,PM2DataCount
0002 B4010C            CJNE    A,#01H,?C0002
                                           ; SOURCE LINE # 19
                                           ; SOURCE LINE # 20
0005 AF00        E     MOV     R7,PM2Data
0007 7401              MOV     A,#01H
                                           ; SOURCE LINE # 21
0009 120000      R     LCALL   L?0045
000C E0                MOVX    A,@DPTR
000D 900000      E     MOV     DPTR,#PM2DO
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
0011         ?C0002:
0011 22                RET     
             ; FUNCTION Pm2_Cmd_80Data (END)

             ; FUNCTION Pm2_Cmd_81Data (BEGIN)
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 27
0000 E500        E     MOV     A,PM2DataCount
0002 B40204            CJNE    A,#02H,?C0003
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
0005 850000      E     MOV     PM2Data1,PM2Data
                                           ; SOURCE LINE # 30
0008 22                RET     
0009         ?C0003:
C51 COMPILER V7.50   OEM_PM2                                                               09/08/2020 15:56:25 PAGE 5   

                                           ; SOURCE LINE # 31
0009 E500        E     MOV     A,PM2DataCount
000B B4010A            CJNE    A,#01H,?C0006
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
000E AF00        E     MOV     R7,PM2Data1
0010 7401              MOV     A,#01H
                                           ; SOURCE LINE # 34
0012 120000      R     LCALL   L?0045
0015 E500        E     MOV     A,PM2Data
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
0018         ?C0006:
0018 22                RET     
             ; FUNCTION Pm2_Cmd_81Data (END)

             ; FUNCTION Pm2_Cmd_92Data (BEGIN)
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
0000 E500        E     MOV     A,PM2DataCount
0002 14                DEC     A
0003 6007              JZ      ?C0009
0005 14                DEC     A
0006 7010              JNZ     ?C0011
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
0008         ?C0008:
                                           ; SOURCE LINE # 44
0008 850000      E     MOV     PM2Data1,PM2Data
                                           ; SOURCE LINE # 45
000B 22                RET     
                                           ; SOURCE LINE # 46
000C         ?C0009:
                                           ; SOURCE LINE # 47
000C AF00        E     MOV     R7,PM2Data1
000E AD00        E     MOV     R5,PM2Data
                                           ; SOURCE LINE # 48
0010 120000      R     LCALL   L?0044
0013 E0                MOVX    A,@DPTR
0014 900000      E     MOV     DPTR,#PM2DO
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0018         ?C0011:
0018 22                RET     
             ; FUNCTION Pm2_Cmd_92Data (END)

             ; FUNCTION Pm2_Cmd_93Data (BEGIN)
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
0000 E500        E     MOV     A,PM2DataCount
0002 14                DEC     A
0003 600E              JZ      ?C0015
0005 14                DEC     A
0006 6007              JZ      ?C0014
0008 14                DEC     A
0009 7012              JNZ     ?C0017
C51 COMPILER V7.50   OEM_PM2                                                               09/08/2020 15:56:25 PAGE 6   

                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
000B         ?C0013:
                                           ; SOURCE LINE # 59
000B 850000      E     MOV     PM2Data2,PM2Data
                                           ; SOURCE LINE # 60
000E 22                RET     
                                           ; SOURCE LINE # 61
000F         ?C0014:
                                           ; SOURCE LINE # 62
000F 850000      E     MOV     PM2Data1,PM2Data
                                           ; SOURCE LINE # 63
0012 22                RET     
                                           ; SOURCE LINE # 64
0013         ?C0015:
                                           ; SOURCE LINE # 65
0013 AF00        E     MOV     R7,PM2Data2
0015 AD00        E     MOV     R5,PM2Data1
                                           ; SOURCE LINE # 66
0017 120000      R     LCALL   L?0044
001A E500        E     MOV     A,PM2Data
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
001D         ?C0017:
001D 22                RET     
             ; FUNCTION Pm2_Cmd_93Data (END)

             ; FUNCTION Pm2_Cmd_80 (BEGIN)
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0000 750001      E     MOV     PM2DataCount,#01H
                                           ; SOURCE LINE # 75
0003 22                RET     
             ; FUNCTION Pm2_Cmd_80 (END)

             ; FUNCTION Pm2_Cmd_81 (BEGIN)
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
0000 750002      E     MOV     PM2DataCount,#02H
                                           ; SOURCE LINE # 79
0003 22                RET     
             ; FUNCTION Pm2_Cmd_81 (END)

             ; FUNCTION Pm2_Cmd_92 (BEGIN)
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
0000 750002      E     MOV     PM2DataCount,#02H
                                           ; SOURCE LINE # 84
0003 22                RET     
             ; FUNCTION Pm2_Cmd_92 (END)

             ; FUNCTION Pm2_Cmd_93 (BEGIN)
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
0000 750003      E     MOV     PM2DataCount,#03H
C51 COMPILER V7.50   OEM_PM2                                                               09/08/2020 15:56:25 PAGE 7   

                                           ; SOURCE LINE # 88
0003 22                RET     
             ; FUNCTION Pm2_Cmd_93 (END)

             ; FUNCTION Pm2_Cmd_DC (BEGIN)
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0000 020000      E     LJMP    ITE_Flash_Utility
             ; FUNCTION Pm2_Cmd_DC (END)

             ; FUNCTION _Hook_68Port (BEGIN)
                                           ; SOURCE LINE # 99
;---- Variable 'PM2Data' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
0000 EF                MOV     A,R7
0001 247F              ADD     A,#07FH
0003 600E              JZ      ?C0025
0005 24EF              ADD     A,#0EFH
0007 600D              JZ      ?C0026
0009 14                DEC     A
000A 600D              JZ      ?C0027
000C 2413              ADD     A,#013H
000E 700C              JNZ     ?C0029
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0010         ?C0024:
                                           ; SOURCE LINE # 104
0010 020000      R     LJMP    Pm2_Cmd_80Data
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
0013         ?C0025:
                                           ; SOURCE LINE # 107
0013 020000      R     LJMP    Pm2_Cmd_81Data
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0016         ?C0026:
                                           ; SOURCE LINE # 110
0016 020000      R     LJMP    Pm2_Cmd_92Data
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
0019         ?C0027:
                                           ; SOURCE LINE # 113
0019 120000      R     LCALL   Pm2_Cmd_93Data
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
001C         ?C0029:
001C 22                RET     
             ; FUNCTION _Hook_68Port (END)

             ; FUNCTION _Hook_6CPort (BEGIN)
                                           ; SOURCE LINE # 122
;---- Variable 'PM2Cmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 124
0000 EF                MOV     A,R7
0001 247F              ADD     A,#07FH
0003 6012              JZ      ?C0032
0005 24EF              ADD     A,#0EFH
C51 COMPILER V7.50   OEM_PM2                                                               09/08/2020 15:56:25 PAGE 8   

0007 6011              JZ      ?C0033
0009 14                DEC     A
000A 6011              JZ      ?C0034
000C 24B7              ADD     A,#0B7H
000E 6010              JZ      ?C0035
0010 245C              ADD     A,#05CH
0012 700F              JNZ     ?C0037
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 126
0014         ?C0031:
                                           ; SOURCE LINE # 127
0014 020000      R     LJMP    Pm2_Cmd_80
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
0017         ?C0032:
                                           ; SOURCE LINE # 130
0017 020000      R     LJMP    Pm2_Cmd_81
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
001A         ?C0033:
                                           ; SOURCE LINE # 133
001A 020000      R     LJMP    Pm2_Cmd_92
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
001D         ?C0034:
                                           ; SOURCE LINE # 136
001D 020000      R     LJMP    Pm2_Cmd_93
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
0020         ?C0035:
                                           ; SOURCE LINE # 139
0020 120000      R     LCALL   Pm2_Cmd_DC
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
0023         ?C0037:
0023 22                RET     
             ; FUNCTION _Hook_6CPort (END)

             ; FUNCTION service_pci3 (BEGIN)
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
0000 900000      E     MOV     DPTR,#PM2STS
0003 E0                MOVX    A,@DPTR
0004 30E12C            JNB     ACC.1,?C0039
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 154
0007         ?C0038:
                                           ; SOURCE LINE # 156
0007 900000      E     MOV     DPTR,#PM2STS
000A E0                MOVX    A,@DPTR
000B 30E311            JNB     ACC.3,?C0040
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
000E E4                CLR     A
000F F500        E     MOV     PM2DataCount,A
                                           ; SOURCE LINE # 159
0011 900000      E     MOV     DPTR,#PM2DI
0014 E0                MOVX    A,@DPTR
0015 F500        E     MOV     PM2Cmd,A
C51 COMPILER V7.50   OEM_PM2                                                               09/08/2020 15:56:25 PAGE 9   

                                           ; SOURCE LINE # 160
0017 120000      E     LCALL   EnablePMCIBFInt
                                           ; SOURCE LINE # 161
001A AF00        E     MOV     R7,PM2Cmd
001C 020000      R     LJMP    _Hook_6CPort
                                           ; SOURCE LINE # 162
001F         ?C0040:
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
001F 900000      E     MOV     DPTR,#PM2DI
0022 E0                MOVX    A,@DPTR
0023 F500        E     MOV     PM2Data,A
                                           ; SOURCE LINE # 166
0025 120000      E     LCALL   EnablePMCIBFInt
                                           ; SOURCE LINE # 167
0028 E500        E     MOV     A,PM2DataCount
002A 6007              JZ      ?C0039
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
002C AF00        E     MOV     R7,PM2Cmd
002E 120000      R     LCALL   _Hook_68Port
                                           ; SOURCE LINE # 170
0031 1500        E     DEC     PM2DataCount
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 172
                                           ; SOURCE LINE # 173
0033         ?C0039:
0033 22                RET     
             ; FUNCTION service_pci3 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    259    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

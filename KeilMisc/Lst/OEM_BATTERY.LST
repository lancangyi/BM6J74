C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE OEM_BATTERY
OBJECT MODULE PLACED IN Code\OEM\OEM_BATTERY.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Code\OEM\OEM_BATTERY.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE
                    -\INCLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_BATTERY.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          //****************************************************************************
  14          // The function of smart battery
  15          //****************************************************************************
  16          
  17          const sbatINFO code BATDeviceNameTable[] =
  18          {
  19          //   Id     Device name  
  20              {0x01,      "XXXXXXX"       },          // model 1
  21              {0x02,      "YYYYYY"        },          // model 2
  22              {0x03,      "TW932SM"       },      // model 3
  23          };
  24          
  25          const sbatFirstData code BAT1_FirstDataTable[] =
  26          {
  27          //   command     address of variable  
  28              {BATCmd_temp,       &BAT1_temp_L        },  
  29              {BATCmd_volt,       &BAT1_volt_L        },
  30              {BATCmd_current,    &BAT1_current_L     },
  31              {BATCmd_RSOC,       &BAT1_RSOC          },  
  32              {BATCmd_RMcap,      &BAT1_RMcap_L       },
  33              {BATCmd_FCcap,      &BAT1_FCcap_L       },
  34              {BATCmd_CC,             &BAT1_CC_L          },      
  35              {BATCmd_CV,             &BAT1_CV_L          },
  36              {BATCmd_BatStatus,  &BAT1_ALARM1        },
  37              {BATCmd_AVcurrent,   &BAT1_AC_L         },  
  38              #if Lenovo_Support
  39                  {BATCmd_access,         &BAT1_ACCESSL       },
  40              {BATCmd_mode,       &BAT1_MODEL         }, 
  41              {BATCmd_MfgF2,      &BAT1_MFGF2L            },
  42                  #endif
  43          };
  44          
  45          BYTE AC_OFF(void)
  46          {
  47   1              XWORD cctemp;
  48   1              XWORD cvtemp;
  49   1              
  50   1              return 0;
  51   1              
  52   1              if(SmartCharger_Support)
  53   1              {               
  54   2                      #if Lenovo_Support
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 2   

  55   2                      cctemp = (BAT1_CC_H*256)+BAT1_CC_L;
  56   2                      cvtemp = (BAT1_CV_H*256)+BAT1_CV_L;
  57   2                      if((cctemp != 0) && (cvtemp != 0))
  58   2                      {
  59   3                              CHARGE_CURRENT_LO=cctemp;
  60   3                      CHARGE_CURRENT_HI=cctemp>>8;    
  61   3                      CHARGE_VOLTAGE_LO=BAT1_CV_L;
  62   3                      CHARGE_VOLTAGE_HI=BAT1_CV_H;
  63   3                      }
  64   2                      #endif          
  65   2                      
  66   2              if(SetSmartCharger()!=0x00)
  67   2              {
  68   3                              return FALSE;
  69   3              }
  70   2                      if(bRWSMBus(SmartChargerChannel, SMbusRW, Charger_Addr, _CMD_ChargerOption0, &CHARGER_OPTION_L, 0))
  71   2                      {
  72   3                              if(IS_MASK_CLEAR(CHARGER_OPTION_L, BIT0))
  73   3                              {
  74   4                                      SET_MASK(CHARGER_OPTION_L,BIT0);
  75   4                                      if(bRWSMBus(SmartChargerChannel, SMbusWW, Charger_Addr, _CMD_ChargerOption0, &CHARGER_OPTION_L, 0) == 
             -FALSE )
  76   4                                      {
  77   5                                              CLEAR_MASK(Oem_Globe_Flag2,Oem_AC_OFF_f);
  78   5                                              return FALSE;
  79   5                                      }
  80   4                                      else
  81   4                                      {
  82   5                                              SET_MASK(Oem_Globe_Flag2,Oem_AC_OFF_f);
  83   5                                              CLEAR_MASK(Oem_Globe_Flag2,Oem_AC_ON_f);                                
  84   5                                              return TRUE;
  85   5                                      }
  86   4                              }               
  87   3                              else
  88   3                                      return TRUE;
  89   3                      }
  90   2              }       
  91   1              return FALSE;   
  92   1      }
  93          
  94          BYTE AC_ON(void)
  95          {
  96   1              XWORD cctemp;
  97   1              XWORD cvtemp;
  98   1      
  99   1              return 0;
 100   1              
 101   1              if(SmartCharger_Support)
 102   1              {
 103   2      
 104   2                      #if Lenovo_Support
 105   2                       cctemp = (BAT1_CC_H*256)+BAT1_CC_L;
 106   2                       cvtemp = (BAT1_CV_H*256)+BAT1_CV_L;
 107   2                      if((cctemp != 0) && (cvtemp != 0))
 108   2                      {
 109   3                              CHARGE_CURRENT_LO=cctemp;
 110   3                      CHARGE_CURRENT_HI=cctemp>>8;    
 111   3                      CHARGE_VOLTAGE_LO=BAT1_CV_L;
 112   3                      CHARGE_VOLTAGE_HI=BAT1_CV_H;
 113   3                      }
 114   2                      #endif          
 115   2      
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 3   

 116   2              
 117   2                      INPUT_CURRENT_LO=InputCurrent;
 118   2                      INPUT_CURRENT_HI=InputCurrent >> 8; 
 119   2                      
 120   2                      if(SetSmartCharger()!=0x00)
 121   2                      {
 122   3                              return FALSE;
 123   3                      }
 124   2                      if(bRWSMBus(SmartChargerChannel, SMbusRW, Charger_Addr, _CMD_ChargerOption0, &CHARGER_OPTION_L, 0))
 125   2                      {
 126   3                              if(IS_MASK_SET(CHARGER_OPTION_L, BIT0))
 127   3                              {
 128   4                                      CLEAR_MASK(CHARGER_OPTION_L,BIT0);
 129   4                                      if(bRWSMBus(SmartChargerChannel, SMbusWW, Charger_Addr, _CMD_ChargerOption0, &CHARGER_OPTION_L, 0) == 
             -FALSE )
 130   4                                      {       
 131   5                                              CLEAR_MASK(Oem_Globe_Flag2,Oem_AC_ON_f);
 132   5                                              return FALSE;
 133   5                                      }
 134   4                                      else
 135   4                                      {
 136   5                                              SET_MASK(Oem_Globe_Flag2,Oem_AC_ON_f);
 137   5                                              CLEAR_MASK(Oem_Globe_Flag2,Oem_AC_OFF_f);
 138   5                                              return TRUE;
 139   5                                              
 140   5                                      }
 141   4                              }
 142   3                              else
 143   3                                      return TRUE;
 144   3                      }
 145   2              }
 146   1              return FALSE;
 147   1      }
 148          
 149          void Storage_Mode_Exit(void);
 150          
 151          
 152          //----------------------------------------------------------------------------
 153          //
 154          //----------------------------------------------------------------------------
 155          BYTE Battery_Auth_Lenovo(void)
 156          {
 157   1      //       old  authentication 
 158   1              unsigned int  PC_Npack,BAT_Npack;
 159   1              unsigned char AuthStr[4] = {0x00,0x00,0x32,0x44};
 160   1              
 161   1      
 162   1              if(IS_MASK_CLEAR(Oem_BatCtrl_F,Oem_BatAuth_WBK_f))
 163   1              {
 164   2                      Tmp_XPntr = AuthStr;
 165   2                      if(bWSMBusBlock(SmartBatChannel,SMbusWBK,SmartBat_Addr,BATCmd_MfgF4,Tmp_XPntr,4,0))
 166   2                      {               
 167   3                              SET_MASK(Oem_BatCtrl_F,Oem_BatAuth_WBK_f);
 168   3                              SetBAT1IDTimeOutCNT();
 169   3                      }
 170   2                      else
 171   2                  {
 172   3                      BAT1_ID_TimeOut_CNT--;
 173   3                      if(BAT1_ID_TimeOut_CNT==0x00)           // time out
 174   3                      {   
 175   4                          SetBAT1CtrlStep(BAT_Step_WC);       // Go to wake up charge
 176   4                      }
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 4   

 177   3                      }
 178   2              }
 179   1              else 
 180   1              {
 181   2                      if(bRSMBusBlock(SmartBatChannel,SMbusRBK,SmartBat_Addr,BATCmd_MfgF4,&SMB_DATA))
 182   2                      {
 183   3                              PC_Npack=(WORD)(SMB_DATA1[5]*16*SMB_DATA1[7]*16+0x339E);
 184   3                              BAT_Npack=(WORD)(SMB_DATA1[8]*256+SMB_DATA1[6]);
 185   3      
 186   3                              if(PC_Npack==BAT_Npack)
 187   3                              {
 188   4                                      BIOS_OEM_battery_health|=HOST_BAT_Authentication;
 189   4      
 190   4                                      BAT1IdentifyNextStep();         // next step 
 191   4                              }
 192   3                              else
 193   3                              {
 194   4                                      BIOS_OEM_battery_health&=~HOST_BAT_Authentication;
 195   4                                      BAT1_SetFail(Bat_AuthFail); 
 196   4                                      
 197   4                              }
 198   3                              
 199   3                              return 1;
 200   3                      }
 201   2                      else
 202   2                  {
 203   3                      BAT1_ID_TimeOut_CNT--;
 204   3                      if(BAT1_ID_TimeOut_CNT==0x00)           // time out
 205   3                      {   
 206   4                          SetBAT1CtrlStep(BAT_Step_WC);       // Go to wake up charge
 207   4                      }
 208   3                      }
 209   2                      
 210   2              }
 211   1              
 212   1              return 0;
 213   1      }
 214          
 215          
 216          
 217          //----------------------------------------------------------------------------
 218          // Get battery device name and checking battery is supported or not
 219          //----------------------------------------------------------------------------
 220          void BAT1ID_CheckDeviceName(void)
 221          {
 222   1      
 223   1              XBYTE index;                     // Battery item count
 224   1              XBYTE BCunt;                     // Battery name count
 225   1      
 226   1      
 227   1      #ifdef Lenovo_Support
 228   1               BAT1IdentifyNextStep();         // next step 
 229   1               return;
 230   1      #endif
 231   1      
 232   1          if(bRSMBusBlock(SmartBatChannel, SMbusRBK, SmartBat_Addr, BATCmd_Dname, &SMB_DATA))
 233   1          {
 234   2                  for(index=0x00;index<(sizeof(BATDeviceNameTable)/sizeof(sbatINFO));index++) // Compare all support li
             -st
 235   2                  {
 236   3                          Tmp_XPntr = &SMB_DATA;
 237   3                          for(BCunt=0x00;BCunt<SMB_BCNT;BCunt++)  // compare all char
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 5   

 238   3                          {
 239   4                                  if(BATDeviceNameTable[index].DeviceName[BCunt]!= *Tmp_XPntr)
 240   4                                  {
 241   5                                      break;                      // fail , point to next
 242   5                                  }
 243   4                                  Tmp_XPntr++;
 244   4                          }                                   // End of For Loop for check device name is meet
 245   3                      
 246   3                          if(BCunt==SMB_BCNT)                 // meet design name
 247   3                          {
 248   4                      BAT1_Number  = BATDeviceNameTable[index].DeviceNO;
 249   4                      BAT1IdentifyNextStep();         // next step                  
 250   4                                  return;
 251   4                          }                                   // End of meet battery device name
 252   3                  }                                       // End of FOR loop for check battery device name 
 253   2      
 254   2              BAT1_SetFail(Bat_NoSupport);            // battery isn't supportd model
 255   2      
 256   2          }         // End of Read SMBUS Block function
 257   1          else
 258   1          {
 259   2              BAT1_ID_TimeOut_CNT--;
 260   2              if(BAT1_ID_TimeOut_CNT==0x00)           // time out
 261   2              {   
 262   3                  SetBAT1CtrlStep(BAT_Step_WC);       // Go to wake up charge
 263   3              }
 264   2          }
 265   1      }
 266          
 267          //----------------------------------------------------------------------------
 268          // Set battery 1 fail
 269          //----------------------------------------------------------------------------
 270          void BAT1_SetFail(BYTE failcause)
 271          {
 272   1          BAT1_FailCause = failcause;
 273   1          SetBAT1CtrlStep(BAT_Step_SetFail);
 274   1      }
 275          
 276          //----------------------------------------------------------------------------
 277          // If battery is set fail Clear variables
 278          //----------------------------------------------------------------------------
 279          void BAT1_ClrVariables(void)
 280          {
 281   1          BT1_STATUS2 = 0x00;
 282   1          BT1_STATUS3 = 0x00;
 283   1      
 284   1      // clear battery flag, Don't chear bat_in flag
 285   1              CLEAR_MASK(BT1_STATUS1,(bat_InCharge+bat_Dischg+bat_Full));
 286   1      
 287   1          BAT1_CtrlStep = 0x00;
 288   1          BAT1_ID_Step = 0x00;
 289   1          BAT1_1SecTimer = 0x00;
 290   1      //    BAT1_S_Number = 0x00;     // battery cell number
 291   1          BAT1_ID_TimeOut_CNT = 0x00;
 292   1          BAT1_Number = 0x00;
 293   1          BAT1_FirstDataIndex = 0x00;
 294   1          Charger_TimeOut = 0x00;
 295   1          WakeUpChrCunt_Min = 0x00;
 296   1          PreChrCunt_Min = 0x00;
 297   1          NormalChrCunt_Min = 0x00;
 298   1          WakeUpChrCunt = 0x00;
 299   1          PreChrCunt = 0x00;
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 6   

 300   1          NormalChrCunt = 0x00;
 301   1          BAT1_OTCunt = 0x00;
 302   1          BAT1_OVCunt = 0x00; 
 303   1          CHARGE_CURRENT_BK = 0x00;
 304   1          CHARGE_VOLTAGE_BK = 0x00;
 305   1      }
 306          
 307          
 308          //----------------------------------------------------------------------------
 309          // If battery is pluged out Clear variables
 310          //----------------------------------------------------------------------------
 311          void BAT1_PlugOutClrVariables(void)
 312          {
 313   1          BAT1_temp_L= 0x00;
 314   1              BAT1_temp_H= 0x00;      
 315   1          BAT1_volt_L = 0x00;
 316   1              BAT1_volt_H = 0x00;
 317   1          BAT1_current_L = 0x00;
 318   1              BAT1_current_H = 0x00;
 319   1          BAT1_RMcap_L = 0x00;
 320   1              BAT1_RMcap_H = 0x00;
 321   1              BAT1_FCcap_L = 0x00;
 322   1              BAT1_FCcap_H = 0x00;
 323   1          BAT1_CC_L = 0x00;
 324   1              BAT1_CC_H = 0x00;
 325   1          BAT1_CV_L = 0x00;
 326   1              BAT1_CV_H = 0x00;
 327   1          BAT1_AC_L = 0x00;
 328   1              BAT1_AC_H = 0x00;
 329   1          BAT1_RSOC = 0x00;
 330   1              
 331   1          BAT1_ALARM1 = 0x00;
 332   1          BAT1_ALARM2 = 0x00;
 333   1          
 334   1          BT1_STATUS2 = 0x00;
 335   1          BT1_STATUS1 = 0x00;
 336   1          BT1_STATUS3 = 0x00;
 337   1          
 338   1          BAT1_CtrlStep = 0x00;
 339   1          BAT1_ID_Step = 0x00;
 340   1          BAT1_1SecTimer = 0x00;
 341   1          BAT1_S_Number = 0x00;
 342   1          BAT1_ID_TimeOut_CNT = 0x00;
 343   1          BAT1_Number = 0x00;
 344   1          BAT1_FirstDataIndex = 0x00;
 345   1              BAT1_FailCause = 0x00;
 346   1              
 347   1          Charger_TimeOut = 0x00;
 348   1          WakeUpChrCunt_Min = 0x00;
 349   1          PreChrCunt_Min = 0x00;
 350   1          NormalChrCunt_Min = 0x00;
 351   1          WakeUpChrCunt = 0x00;
 352   1          PreChrCunt = 0x00;
 353   1          NormalChrCunt = 0x00;
 354   1          BAT1_OTCunt = 0x00;
 355   1          BAT1_OVCunt = 0x00; 
 356   1          CHARGE_CURRENT_BK = 0x00;
 357   1          CHARGE_VOLTAGE_BK = 0x00;
 358   1      
 359   1              
 360   1      }
 361          
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 7   

 362          void Adapter_PlugOutClrVariables(void)
 363          {
 364   1              R_CHARGE_CTRL0          = 0x00; //0x01B7
 365   1              R_CHARGE_CTRL1          = 0x00; //0x01B9
 366   1              R_CHARGE_CTRL2          = 0x00; //0x01BB
 367   1              R_CHARGE_CURRENT        = 0x00; //0x01BD
 368   1              R_CHARGE_VOLTAGE        = 0x00; //0x01C0
 369   1              R_INPUT_CURRENT         = 0x00; //0x01C2
 370   1              R_MANUFACTURER_ID       = 0x00; //0x01C4
 371   1              CHG_STATUS                      = 0x00; //0x01C6
 372   1              TEMP_CHARGE_INPUT   = 0x00;     //0x01C8
 373   1      }
 374          
 375          
 376          //----------------------------------------------------------------------------
 377          // Polling battery 1 data function
 378          //----------------------------------------------------------------------------
 379          void PollingBAT1Data(void)
 380          {
 381   1          SMBus1Flag1 |= (B1_RSOC+B1_C+B1_V+B1_RMcap+B1_Status+B1_FCC+B1_Temp+B1_Cycle);
 382   1          SMBus1Flag2 |= (B1_CC+B1_CV+B1_ACCESS+B1_Mode+B1_MFGF2+B1_DScap+B1_AC);
 383   1              SMBus1Flag5 |= (B1_SerialNo+B1_Mname+B1_Dname+B1_Dvol);
 384   1      }       
 385          
 386          #if Lenovo_Support
 387          
 388          void BAT1MFGF2Polling(void)
 389          {
 390   1              EC_OptionalMfgFunction2 = BAT1_MFGF2L+ BAT1_MFGF2H * 256;
 391   1              
 392   1              if((BAT1_MFGF2H&0x01)&&(BAT1_STATUS&OS_AC_IN))
 393   1              {
 394   2                      SET_MASK(BIOS_OEM_battery_health,HOST_STM_NOTIFY);
 395   2              }
 396   1              else
 397   1              {
 398   2                      CLEAR_MASK(BIOS_OEM_battery_health,HOST_STM_NOTIFY);
 399   2              }
 400   1      
 401   1              if(temp_guoyong1 == 0x88)
 402   1              {
 403   2                      SET_MASK(BIOS_OEM_battery_health,HOST_STM_NOTIFY);
 404   2              }
 405   1                      
 406   1      }
 407          
 408          #endif
 409          
 410          
 411          //----------------------------------------------------------------------------
 412          // Polling battery 1 Optional Mfg Function2
 413          //----------------------------------------------------------------------------
 414          void PollingChargerData(void)
 415          {
 416   1              SMBus1Flag4 |= (Charge_Ctrl0+Charge_Ctrl1+Charge_Ctrl2+Charge_CC+Charge_CV+Charge_MFID+Charge_Input_CC);
 417   1      }
 418          
 419          //----------------------------------------------------------------------------
 420          // Polling battery 1 battery 0x00 , if Bit1=1   "Bad Battery" be detected. 
 421          //----------------------------------------------------------------------------
 422          #if Lenovo_Support
 423          void BAT1GoodOrBad(void)
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 8   

 424          {
 425   1              if((BAT1_ACCESSL & (bat_GoodOrBad_f+BIT0)) != 0)
 426   1              {
 427   2                      if(++BAT1_BADCunt>BatBadTimeOut)
 428   2                              {
 429   3                                      SET_MASK(Bios_Battery_Health_2,MBBD);
 430   3                              }
 431   2              }
 432   1              else
 433   1              {
 434   2                      BAT1_BADCunt = 0;
 435   2                      CLEAR_MASK(Bios_Battery_Health_2,MBBD);
 436   2              }
 437   1      }
 438          
 439          #endif
 440          
 441          
 442          //----------------------------------------------------------------------------
 443          // Battery 1 protect function
 444          //----------------------------------------------------------------------------
 445          void BAT1Protection(void)
 446          {
 447   1          XWORD voltage;
 448   1              XWORD tempTemperature;
 449   1      
 450   1      #if Lenovo_Support
 451   1              tempTemperature = BAT1_temp_H*256+ BAT1_temp_L;
 452   1              if((tempTemperature < CHARGE_INHIBIT_TEMP_LOW_KELVIN) || (tempTemperature > CHARGE_INHIBIT_TEMP_HIGH_KELV
             -IN))
 453   1                      SET_MASK(Oem_BAT1_ALARM,OverTemp_alarm);
 454   1              else if((tempTemperature > CHARGE_RESUME_TEMP_LOW_KELVIN) && (tempTemperature < CHARGE_RESUME_TEMP_HIGH_K
             -ELVIN))
 455   1                      CLEAR_MASK(Oem_BAT1_ALARM,OverTemp_alarm);
 456   1              #endif
 457   1      
 458   1          if((IS_MASK_SET(BAT1_ALARM2, OverTemp_alarm)) || (IS_MASK_SET(Oem_BAT1_ALARM, OverTemp_alarm)))   // O
             -T protect
 459   1          {
 460   2              if(++BAT1_OTCunt > BatOTTimeOut)
 461   2              {
 462   3                  BAT1_SetFail(Bat_OverTemperature);      // battery over temperature
 463   3              }
 464   2          }
 465   1          else
 466   1          {
 467   2              BAT1_OTCunt = 0x00;
 468   2          }
 469   1      
 470   1          voltage = (BAT1_volt_H*256)+BAT1_volt_L;        // OV protect
 471   1          if(voltage > BATOverVoltage)
 472   1          {
 473   2              if(++BAT1_OVCunt > BatOVTimeOut)
 474   2              {
 475   3                  BAT1_SetFail(Bat_OverVoltage);          // battery over voltage
 476   3              }
 477   2          }
 478   1          else
 479   1          {
 480   2              BAT1_OVCunt = 0x00;
 481   2          }
 482   1      }
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 9   

 483          
 484          //----------------------------------------------------------------------------
 485          // Set battery 1 identify re-try counter
 486          //----------------------------------------------------------------------------
 487          void SetBAT1IDTimeOutCNT(void)
 488          {
 489   1          BAT1_ID_TimeOut_CNT = BatIDTimeOut;
 490   1      }
 491          
 492          //----------------------------------------------------------------------------
 493          // First time to get battery design voltage and checking SMBus communication is OK
 494          //----------------------------------------------------------------------------
 495          void BAT1ID_GetDesignVoltage(void)
 496          {
 497   1          WORD DVTemp;
 498   1          if(bRWSMBus(SmartBatChannel, SMbusRW, SmartBat_Addr, BATCmd_DVolt, &ByteTemp01, SMBus_NoPEC))
 499   1          {
 500   2              DVTemp = (ByteTemp02*256)+ByteTemp01;   // Get Main battery desgin voltage
 501   2              if(bRWSMBus(SmartBatChannel, SMbusRW, SmartBat_Addr, BATCmd_DCap, &ByteTemp01, SMBus_NoPEC))
 502   2              {
 503   3                      RamDebug(ByteTemp02);
 504   3                              RamDebug(ByteTemp01);
 505   3              }
 506   2              if(DVTemp<8400)
 507   2              {
 508   3                  BAT1_S_Number = 0x02;       // Main battery is 2s
 509   3              }
 510   2              else if(DVTemp<12600)
 511   2              {
 512   3                  BAT1_S_Number = 0x03;       // Main battery is 3s
 513   3              }
 514   2              else
 515   2              {
 516   3                  BAT1_S_Number = 0x04;       // Main battery is 4s
 517   3              } 
 518   2              BAT1IdentifyNextStep();         // next step 
 519   2              ByteTemp01 = 0x00;
 520   2              ByteTemp02 = 0x00;
 521   2          }
 522   1          else
 523   1          {
 524   2              BAT1_ID_TimeOut_CNT--;
 525   2              if(BAT1_ID_TimeOut_CNT==0x00)   // time out
 526   2              {   
 527   3                  SetBAT1CtrlStep(BAT_Step_WC);// Go to wake up charge
 528   3              }
 529   2          }
 530   1      }
 531          
 532          //----------------------------------------------------------------------------
 533          // Battery Authentication if necessary
 534          //----------------------------------------------------------------------------
 535          void BAT1ID_CheckBatAuth(void)
 536          {
 537   1      
 538   1      #if Lenovo_Support
 539   1              //Battery_Auth_Lenovo();
 540   1              #if Sha1Support
                              if(Sha1Authentication() == TRUE)
                              {
                                      BAT1IdentifyNextStep();
                                      SET_MASK(BIOS_OEM_battery_health,HOST_BAT_Authentication);
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 10  

                              }       
                              else
                              {
                                      BAT1_SetFail(Bat_AuthFail);
                                      CLEAR_MASK(BIOS_OEM_battery_health,HOST_BAT_Authentication);
                              }
                      #else
 552   1      
 553   1                      BAT1IdentifyNextStep();         // next step 
 554   1                              
 555   1              #endif
 556   1      #else
                      BAT1IdentifyNextStep();         // next step 
              #endif  
 559   1      
 560   1      }
 561          
 562          //----------------------------------------------------------------------------
 563          // 
 564          //----------------------------------------------------------------------------
 565          void BAT1ID_PollingFirstData(void)
 566          {
 567   1          if(BAT1_FirstDataIndex < (sizeof(BAT1_FirstDataTable)/sizeof(sbatFirstData)))
 568   1          {
 569   2              if(bRWSMBus(SmartBatChannel, SMbusRW, SmartBat_Addr, BAT1_FirstDataTable[BAT1_FirstDataIndex].Cmd,
             - 
 570   2                  BAT1_FirstDataTable[BAT1_FirstDataIndex].Var, SMBus_NoPEC))
 571   2              {
 572   3                  BAT1_FirstDataIndex++;
 573   3              }
 574   2              else
 575   2              {
 576   3                  BAT1_ID_TimeOut_CNT--;
 577   3                  if(BAT1_ID_TimeOut_CNT==0x00)       // time out
 578   3                  {   
 579   4                      SetBAT1CtrlStep(BAT_Step_WC);   // Go to wake up charge
 580   4                  }
 581   3              }
 582   2          }
 583   1          else
 584   1          {
 585   2              BAT1IdentifyNextStep();                 // next step 
 586   2          }
 587   1      }
 588          
 589          //----------------------------------------------------------------------------
 590          // Battery 1 init. OK
 591          //----------------------------------------------------------------------------
 592          void BAT1ID_InitOK(void)
 593          {
 594   1              SET_MASK(BT1_STATUS1, bat_valid);
 595   1          if(IS_MASK_SET(POWER_FLAG1, adapter_in))
 596   1          {
 597   2              SetBAT1CtrlStep(BAT_Step_PC);           // Go to Pre-Charge
 598   2          }
 599   1          else                                        //Battery only
 600   1          {
 601   2              SetBAT1CtrlStep(BAT_Step_DC);           // Go to discharge
 602   2          }
 603   1      }
 604          
 605          //----------------------------------------------------------------------------
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 11  

 606          // The function of identify main battery
 607          //----------------------------------------------------------------------------
 608          void IdentifyBAT1(void)
 609          {
 610   1          switch(BAT1_ID_Step)
 611   1          {
 612   2              case BATID_Step_GetDV:      // First time to get battery design voltage and checking SMBus communi
             -cation is OK
 613   2                  BAT1ID_GetDesignVoltage();
 614   2                  break;
 615   2      
 616   2              case BATID_Step_Auth:       // Battery Authentication if necessary
 617   2                  BAT1ID_CheckBatAuth();
 618   2                              SET_MASK(BAT1_STATUS,Oem_BAT1_valid);
 619   2                  break;
 620   2      
 621   2              case BATID_Step_MFName:     // Get manufacturer name and checking battery is supported
 622   2                  BAT1ID_CheckDeviceName();
 623   2                  break;
 624   2      
 625   2              case BATID_Step_FirstData:  // Polling first data
 626   2                  BAT1ID_PollingFirstData();
 627   2                  break;
 628   2      
 629   2              case BATID_Step_InitOK:     // Init_OK,prepare Discharge/Pre-Charge ***(always at last step)***
 630   2                  BAT1ID_InitOK();
 631   2                  break;
 632   2                  
 633   2              default:                   // Restart Identify
 634   2                              BAT1_ID_Step = BATID_Step_GetDV;
 635   2                  break;
 636   2          }
 637   1      }
 638          
 639          //----------------------------------------------------------------------------
 640          // The function of setting battery 1 control step
 641          //----------------------------------------------------------------------------
 642          void SetBAT1CtrlStep(BYTE ctrlstep)
 643          {
 644   1          BAT1_CtrlStep = ctrlstep;
 645   1          Charger_TimeOut = 0x00;
 646   1          
 647   1          switch(BAT1_CtrlStep)
 648   1          {
 649   2              case BAT_Step_ID:
 650   2                  SetBAT1IDTimeOutCNT();
 651   2                  BAT1_ID_Step = BATID_Step_GetDV;
 652   2                  break;
 653   2      
 654   2              case BAT_Step_WC:
 655   2                              #if Lenovo_Support
 656   2                              CLEAR_MASK(Oem_BatCtrl_F,Oem_BatAuth_WBK_f);
 657   2                              #endif
 658   2      
 659   2                              CLEAR_MASK(BT1_STATUS1,(bat_InCharge+bat_Dischg+bat_Full));
 660   2                  BT1_STATUS2 = 0x00;
 661   2                  WakeUpChrCunt = 0x0000;
 662   2                  WakeUpChrCunt_Min = 0x00;
 663   2                  CLEAR_MASK(BT1_STATUS1, bat_valid);
 664   2                  SET_MASK(BT1_STATUS2, bat_WC);
 665   2                  break;
 666   2                  
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 12  

 667   2              case BAT_Step_PC:
 668   2                              CLEAR_MASK(BT1_STATUS1,(bat_InCharge+bat_Dischg+bat_Full));
 669   2                  BT1_STATUS2 = 0x00;
 670   2                  PreChrCunt = 0x0000;
 671   2                  PreChrCunt_Min = 0x0000;
 672   2                  SET_MASK(BT1_STATUS2, bat_PC);
 673   2                  break;
 674   2                  
 675   2              case BAT_Step_NC:
 676   2                              CLEAR_MASK(BT1_STATUS1,(bat_InCharge+bat_Dischg+bat_Full));
 677   2                  BT1_STATUS2 = 0x00;
 678   2                  NormalChrCunt = 0x0000;
 679   2                  NormalChrCunt_Min = 0x0000;
 680   2                  CHARGE_CURRENT_BK = 0x00;
 681   2                  CHARGE_VOLTAGE_BK = 0x00;
 682   2                  SET_MASK(BT1_STATUS2, bat_NC);
 683   2                  break;
 684   2                  
 685   2              case BAT_Step_DC:
 686   2                              CLEAR_MASK(BT1_STATUS1,(bat_InCharge+bat_Dischg+bat_Full));
 687   2                  BT1_STATUS2 = 0x00;
 688   2                  SET_MASK(BT1_STATUS2, bat_DC);
 689   2                  break;            
 690   2      
 691   2              case BAT_Step_FullyChg:
 692   2                              CLEAR_MASK(BT1_STATUS1,(bat_InCharge+bat_Dischg+bat_Full));
 693   2                  SET_MASK(BT1_STATUS1, bat_Full); 
 694   2                  BT1_STATUS2 = 0x00;
 695   2                  break;
 696   2          }
 697   1      }
 698          
 699          //----------------------------------------------------------------------------
 700          // The function of going to next step of identify control step
 701          //----------------------------------------------------------------------------
 702          void BAT1IdentifyNextStep(void)
 703          {
 704   1          BAT1_ID_Step++;
 705   1          if(BAT1_ID_Step==BATID_Step_FirstData)
 706   1          {
 707   2              BAT1_FirstDataIndex = 0x00;
 708   2          }
 709   1          SetBAT1IDTimeOutCNT();
 710   1      }
 711          
 712          //----------------------------------------------------------------------------
 713          // The function of on / off charge pin
 714          //----------------------------------------------------------------------------
 715          void Hook_BAT1_ChargePinON(BYTE on_off)
 716          {
 717   1      
 718   1      }
 719          
 720          void BAT1_CheckFullyCharged(void)
 721          {
 722   1          if((BAT1_CtrlStep==BAT_Step_PC)||(BAT1_CtrlStep==BAT_Step_NC))
 723   1          {
 724   2              if(IS_MASK_SET(BAT1_ALARM1, FullyChg))
 725   2              {
 726   3                  if(DisableCharger()==0x01)          // Disable charger first, then go to fully charged step
 727   3                  {
 728   4                      ECQEvent(BAT1_HOT_PLUG_EVT,SCIMode_Normal);
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 13  

 729   4                      SetBAT1CtrlStep(BAT_Step_FullyChg);
 730   4                  }
 731   3              }
 732   2      
 733   2          }
 734   1      }
 735          
 736          void BAT1_CheckFullyDisCharged(void)
 737          {
 738   1          if(BAT1_CtrlStep==BAT_Step_DC)
 739   1          {
 740   2              if(IS_MASK_SET(BAT1_ALARM1, FullyDsg))
 741   2              {
 742   3                  SetBAT1CtrlStep(BAT_Step_FullyDisChg);
 743   3              }
 744   2          }
 745   1      }
 746          
 747          //----------------------------------------------------------------------------
 748          // The function of pre-charge
 749          //----------------------------------------------------------------------------
 750          void BAT1_SETPreCharge(void)
 751          {
 752   1      
 753   1      XWORD cctemp;
 754   1      XWORD cvtemp;
 755   1      
 756   1          if(SmartCharger_Support)
 757   1          {
 758   2      
 759   2              #if Lenovo_Support
 760   2               cctemp = (BAT1_CC_H*256)+BAT1_CC_L;
 761   2               cvtemp = (BAT1_CV_H*256)+BAT1_CV_L;
 762   2                      if((cctemp != 0) && (cvtemp != 0))
 763   2                      {
 764   3                              CHARGE_CURRENT_LO=cctemp;
 765   3                      CHARGE_CURRENT_HI=cctemp>>8;    
 766   3                      CHARGE_VOLTAGE_LO=BAT1_CV_L;
 767   3                      CHARGE_VOLTAGE_HI=BAT1_CV_H;
 768   3                      }
 769   2              #else
                      
                          CHARGE_CURRENT_LO=BAT1_CURR_PRECHG;
                          CHARGE_CURRENT_HI=BAT1_CURR_PRECHG>>8;      
                          CHARGE_VOLTAGE_LO=BAT1_VOLT_PRECHG;
                          CHARGE_VOLTAGE_HI=BAT1_VOLT_PRECHG>>8;      
                      #endif
 776   2              
 777   2                      INPUT_CURRENT_LO=InputCurrent;
 778   2                  INPUT_CURRENT_HI=InputCurrent >> 8;
 779   2              if(SetSmartCharger()!=0x00)
 780   2              {
 781   3                  Charger_TimeOut++;
 782   3                  if(Charger_TimeOut>ChargerSettingTimeOut)
 783   3                  {
 784   4                      SetBAT1CtrlStep(BAT_Step_ChargerFail);  // Go to smart charger fail
 785   4                  }
 786   3              }
 787   2              else
 788   2              {
 789   3                  Hook_BAT1_ChargePinON(1);
 790   3                  SET_MASK(BT1_STATUS2, bat_PC_OK);
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 14  

 791   3                  SET_MASK(BT1_STATUS1, bat_InCharge);
 792   3                  Charger_TimeOut = 0x00;
 793   3              }
 794   2          }
 795   1          else
 796   1          { 
 797   2              // *** Set DAC CC CV value here ***
 798   2              Hook_BAT1_ChargePinON(1);
 799   2              SET_MASK(BT1_STATUS2, bat_PC_OK);
 800   2              SET_MASK(BT1_STATUS1, bat_InCharge);
 801   2          }
 802   1      }
 803          
 804          //----------------------------------------------------------------------------
 805          // The function of battery 1 Pre charge
 806          //----------------------------------------------------------------------------
 807          void BAT1_PreCharge(void)
 808          {
 809   1          XWORD cctemp;
 810   1      
 811   1              XWORD tempTemperature;
 812   1              
 813   1      #if Lenovo_Support
 814   1              tempTemperature = BAT1_temp_H*256+ BAT1_temp_L;
 815   1              if((tempTemperature < CHARGE_INHIBIT_TEMP_LOW_KELVIN_INITIAL) && (tempTemperature > CHARGE_INHIBIT_TEMP_H
             -IGH_KELVIN_INITIAL))
 816   1                      return;
 817   1              else if((tempTemperature > CHARGE_RESUME_TEMP_LOW_KELVIN_INITIAL) && (tempTemperature < CHARGE_RESUME_TEM
             -P_HIGH_KELVIN_INITIAL))
 818   1                      {
 819   2                              // do nothing
 820   2                      }       
 821   1      #endif
 822   1      
 823   1          if(IS_MASK_SET(POWER_FLAG1, adapter_in))
 824   1          { 
 825   2              if(IS_MASK_CLEAR(BT1_STATUS2, bat_PC_OK))
 826   2              {
 827   3                  PreChrCunt = 0x00;
 828   3                  BAT1_SETPreCharge();
 829   3              }
 830   2              else
 831   2              {
 832   3                  PreChrCunt++;
 833   3                  if((PreChrCunt%6000)==0)            // 1 min re-enable smart charger
 834   3                  {
 835   4                      BAT1_SETPreCharge();
 836   4                      PreChrCunt = 0x0000;
 837   4                      PreChrCunt_Min++;
 838   4                      if(PreChrCunt_Min>BatPCTimeOut) // Over 2hr
 839   4                      {
 840   5                          BAT1_SetFail(Bat_PreChargeFail);    // Pre_charge charge time-out
 841   5                      }
 842   4                  }
 843   3                  else if((PreChrCunt%600)==0)        // 6sec
 844   3                  {
 845   4                      cctemp = (BAT1_CC_H*256)+BAT1_CC_L; 
 846   4                      if(cctemp>Bat1_PC2NC_Cap)
 847   4                      {
 848   5                          SetBAT1CtrlStep(BAT_Step_NC);   // Go to battery normal charge
 849   5                      }
 850   4                  }
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 15  

 851   3              }
 852   2          }
 853   1          else
 854   1          {
 855   2              SetBAT1CtrlStep(BAT_Step_DC);           // Go to discharge
 856   2          }
 857   1      }
 858          
 859          //----------------------------------------------------------------------------
 860          // The function of setting battery 1 normal charge
 861          //----------------------------------------------------------------------------
 862          void BAT1_SETNormalCharge(void)
 863          {
 864   1          XWORD temp;
 865   1              XWORD cctemp;
 866   1              XWORD cvtemp;
 867   1      
 868   1          if(SmartCharger_Support)
 869   1          {
 870   2      
 871   2              #if Lenovo_Support
 872   2               CHARGE_CURRENT_BK = (BAT1_CC_H*256)+BAT1_CC_L;
 873   2               cctemp = (BAT1_CC_H*256)+BAT1_CC_L;
 874   2               cvtemp = (BAT1_CV_H*256)+BAT1_CV_L;
 875   2                      if((cctemp != 0) && (cvtemp != 0))
 876   2                      {
 877   3                              CHARGE_CURRENT_LO=cctemp;
 878   3                      CHARGE_CURRENT_HI=cctemp>>8;    
 879   3                      CHARGE_VOLTAGE_LO=BAT1_CV_L;
 880   3                      CHARGE_VOLTAGE_HI=BAT1_CV_H;
 881   3                      }
 882   2              #else
              
                              temp = (BAT1_CC_H*256)+BAT1_CC_L;
                      CHARGE_CURRENT_BK = (BAT1_CC_H*256)+BAT1_CC_L;
                      temp *=SC_Current_Sense;
                          CHARGE_CURRENT_LO=(BYTE)temp;
                          CHARGE_CURRENT_HI=temp>>8;
                          CHARGE_VOLTAGE_LO=BAT1_CV_L;
                          CHARGE_VOLTAGE_HI=BAT1_CV_H;
                      #endif
 892   2              
 893   2                  INPUT_CURRENT_LO=InputCurrent;
 894   2                  INPUT_CURRENT_HI=InputCurrent >> 8;
 895   2      
 896   2                      if((SystemWatts_CHRStatus & Change_BatChr_f) != 0)
 897   2                      {
 898   3                              CHARGE_CURRENT_LO=(BYTE)Pre_SystemWatts_BatChar_C;
 899   3                              CHARGE_CURRENT_HI=Pre_SystemWatts_BatChar_C>>8;
 900   3              }
 901   2                      
 902   2              if(SetSmartCharger()!=0x00)
 903   2              {
 904   3                  Charger_TimeOut++;
 905   3                  if(Charger_TimeOut>ChargerSettingTimeOut)
 906   3                  {
 907   4                      SetBAT1CtrlStep(BAT_Step_ChargerFail);  // Go to smart charger fail
 908   4                  }
 909   3              }
 910   2              else
 911   2              {
 912   3                  Hook_BAT1_ChargePinON(1);
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 16  

 913   3                  SET_MASK(BT1_STATUS2, bat_NC_OK);
 914   3                  SET_MASK(BT1_STATUS1, bat_InCharge);
 915   3                  Charger_TimeOut = 0x00;
 916   3              }
 917   2          }
 918   1          else
 919   1          { 
 920   2              // *** Set DAC CC CV value here ***
 921   2              Hook_BAT1_ChargePinON(1);
 922   2              SET_MASK(BT1_STATUS2, bat_NC_OK);
 923   2              SET_MASK(BT1_STATUS1, bat_InCharge);
 924   2          }
 925   1      }
 926          
 927          //----------------------------------------------------------------------------
 928          // The function of battery 1 normal charge
 929          //----------------------------------------------------------------------------
 930          void BAT1_NormalCharge(void)
 931          {
 932   1              if(IS_MASK_SET(POWER_FLAG1, adapter_in))
 933   1          {   
 934   2              if(IS_MASK_CLEAR(BT1_STATUS2, bat_NC_OK))
 935   2              {
 936   3                  CHARGE_CURRENT_BK=((BAT1_CC_H<<8)+BAT1_CC_L);
 937   3                  NormalChrCunt = 0x0000;
 938   3                  BAT1_SETNormalCharge();
 939   3              }
 940   2              else
 941   2              {
 942   3                  NormalChrCunt++;
 943   3                  if(CHARGE_CURRENT_BK != (BAT1_CC_H*256)+BAT1_CC_L)
 944   3                  {
 945   4                      CHARGE_CURRENT_BK=((BAT1_CC_H<<8)+BAT1_CC_L);
 946   4                      BAT1_SETNormalCharge();
 947   4                  }
 948   3                  else
 949   3                  {
 950   4                      if((NormalChrCunt%6000)==0)             // 1 min re-enable smart charger
 951   4                      {
 952   5                          NormalChrCunt_Min++;
 953   5                          if(NormalChrCunt_Min>BatNCTimeOut)  // 8hr
 954   5                          {
 955   6                              BAT1_SetFail(Bat_NormalChargeFail); // Normal charge time-out
 956   6                          }
 957   5                          BAT1_SETNormalCharge();
 958   5                          NormalChrCunt = 0x0000;
 959   5                      }
 960   4                  }
 961   3              }
 962   2          }
 963   1          else
 964   1          {
 965   2              SetBAT1CtrlStep(BAT_Step_DC);           // Go to discharge
 966   2          }
 967   1      }
 968          
 969          //----------------------------------------------------------------------------
 970          // The function of waking up charge
 971          //----------------------------------------------------------------------------
 972          void BAT1_SETWakeUpCharge(void)
 973          {
 974   1          if(SmartCharger_Support)
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 17  

 975   1          {
 976   2                  CHARGE_CURRENT_LO=BAT1_CURR_WUCHG;        
 977   2                  CHARGE_CURRENT_HI=BAT1_CURR_WUCHG>>8;       
 978   2                  CHARGE_VOLTAGE_LO=BAT1_VOLT_WUCHG;
 979   2                  CHARGE_VOLTAGE_HI=BAT1_VOLT_WUCHG>>8;       
 980   2                  INPUT_CURRENT_LO=InputCurrent;
 981   2                  INPUT_CURRENT_HI=InputCurrent >> 8;
 982   2              
 983   2              if(SetSmartCharger()!=0x00)     // Fail
 984   2              {
 985   3                  Charger_TimeOut++;
 986   3                  if(Charger_TimeOut>ChargerSettingTimeOut)
 987   3                  {
 988   4                      SetBAT1CtrlStep(BAT_Step_ChargerFail);  // Go to smart charger fail
 989   4                  }
 990   3              }
 991   2              else                            // OK
 992   2              {
 993   3                  Hook_BAT1_ChargePinON(1);
 994   3                  SET_MASK(BT1_STATUS2, bat_WC_OK);
 995   3                  SET_MASK(BT1_STATUS1, bat_InCharge);
 996   3                  Charger_TimeOut = 0x00;
 997   3              }
 998   2          }
 999   1          else
1000   1          {
1001   2              // *** Set DAC CC CV value here ***
1002   2              Hook_BAT1_ChargePinON(1);
1003   2              SET_MASK(BT1_STATUS2, bat_WC_OK);
1004   2              SET_MASK(BT1_STATUS1, bat_InCharge);
1005   2          }
1006   1      }
1007          
1008          //----------------------------------------------------------------------------
1009          // Battery 1 wake up charge
1010          //----------------------------------------------------------------------------
1011          void BAT1WakeUpCharge(void)
1012          {
1013   1          if(IS_MASK_SET(POWER_FLAG1, adapter_in))
1014   1          {
1015   2              if(IS_MASK_CLEAR(BT1_STATUS2, bat_WC_OK))
1016   2              {
1017   3                  BAT1_SETWakeUpCharge();
1018   3              }
1019   2              else
1020   2              {
1021   3                  WakeUpChrCunt++;
1022   3                  if((WakeUpChrCunt%6000)==0)             // 1 min re-enable smart charger
1023   3                  {
1024   4                      BAT1_SETWakeUpCharge();
1025   4                      WakeUpChrCunt = 0x0000;
1026   4                      WakeUpChrCunt_Min++;
1027   4                      if(WakeUpChrCunt_Min>BatWCTimeOut)  // Over 1hr
1028   4                      {
1029   5                          BAT1_SetFail(Bat_WakeUpChargeFail); // Wake up charge time-out
1030   5                      }
1031   4                  }
1032   3                  else if((WakeUpChrCunt%600)==0)         // 6 sec Check SMBus OK or not
1033   3                  {
1034   4                      if(bRWSMBus(SmartBatChannel, SMbusRW, SmartBat_Addr, BATCmd_RMcap, &BAT1_RMcap_L, SMBus_No
             -PEC))
1035   4                      {
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 18  

1036   5                          SetBAT1CtrlStep(BAT_Step_ID);   // Identify main battery
1037   5                      }
1038   4                  }
1039   3              }
1040   2          }
1041   1          else
1042   1          {
1043   2              BAT1_SetFail(Bat_Weak);             // main battery too low and AC doesn't plue-in
1044   2          }
1045   1      }
1046          
1047          //----------------------------------------------------------------------------
1048          // Battery 1 discharge
1049          //----------------------------------------------------------------------------
1050          void BAT1DisCharge(void)
1051          {
1052   1              if(IS_MASK_SET(POWER_FLAG1, adapter_in))
1053   1              {
1054   2              if(IS_MASK_SET(BT1_STATUS3, bat_ForceDischg))
1055   2              {
1056   3                  if(IS_MASK_CLEAR(BT1_STATUS2,bat_DC_OK))
1057   3                  {
1058   4                                      RamDebug(0x50);
1059   4                          DisableCharger();
1060   4                  }
1061   3              }
1062   2              else
1063   2              {
1064   3                  SetBAT1CtrlStep(BAT_Step_PC);
1065   3              }
1066   2          }
1067   1          else
1068   1          {
1069   2              if(IS_MASK_CLEAR(BT1_STATUS2,bat_DC_OK))
1070   2              {
1071   3                              RamDebug(0x51);
1072   3                      DisableCharger();
1073   3              }
1074   2              }
1075   1      }
1076          
1077          //----------------------------------------------------------------------------
1078          // Battery 1 fully charged
1079          //----------------------------------------------------------------------------
1080          void BAT1FullyCharged(void)
1081          {
1082   1          if(IS_MASK_CLEAR(POWER_FLAG1, adapter_in))
1083   1          {
1084   2              SetBAT1CtrlStep(BAT_Step_DC);           // Go to discharge
1085   2          }
1086   1              else if(IS_MASK_CLEAR(BAT1_ALARM1, FullyChg))
1087   1              {
1088   2                      SetBAT1CtrlStep(BAT_Step_NC);
1089   2              }
1090   1      }
1091          
1092          //----------------------------------------------------------------------------
1093          // Battery 1 fully discharged
1094          //----------------------------------------------------------------------------
1095          void BAT1FullyDisharged(void)
1096          {
1097   1          if(IS_MASK_SET(POWER_FLAG1, adapter_in))
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 19  

1098   1          {
1099   2      
1100   2          }
1101   1          else
1102   1          {
1103   2      
1104   2          }
1105   1      }
1106          
1107          //----------------------------------------------------------------------------
1108          // Check Battery 1 discharge low cap
1109          //----------------------------------------------------------------------------
1110          void BAT1CheckDisChargeLow(void)
1111          {
1112   1          if(IS_MASK_SET(BT1_STATUS2,bat_DC_OK))
1113   1          {
1114   2      
1115   2          }
1116   1      }
1117          
1118          //----------------------------------------------------------------------------
1119          // Battery 1 abnormal
1120          //----------------------------------------------------------------------------
1121          void BAT1SetFail(void)
1122          {
1123   1          if(DisableCharger()==0x01)          // Disable charger first, then go to BAT_Step_Fail step
1124   1          {
1125   2              BAT1_ClrVariables();
1126   2              SetBAT1CtrlStep(BAT_Step_Fail);
1127   2          }
1128   1      }
1129          
1130          //----------------------------------------------------------------------------
1131          // Force charge Battery 1
1132          //----------------------------------------------------------------------------
1133          void BAT1ForceCharge(void)
1134          {
1135   1              SET_MASK(BT1_STATUS3,bat_ForceChg);
1136   1      }
1137          
1138          //----------------------------------------------------------------------------
1139          // Force discharge Battery 1
1140          //----------------------------------------------------------------------------
1141          void BAT1ForceDischarge(void)
1142          {
1143   1              SET_MASK(BT1_STATUS3,bat_ForceDischg);
1144   1      }
1145          
1146          //----------------------------------------------------------------------------
1147          // Battery 1 in auto learning
1148          //----------------------------------------------------------------------------
1149          void BAT1AutoLearning(void)
1150          {
1151   1      
1152   1      }
1153          
1154          //----------------------------------------------------------------------------
1155          // Check Battery 1 force charge / force discharge / auto learning
1156          //----------------------------------------------------------------------------
1157          void BAT1ForceStep(void)
1158          {
1159   1          if(IS_MASK_SET(BT1_STATUS3, bat_ForceChg))
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 20  

1160   1          {
1161   2              if(IS_MASK_SET(POWER_FLAG1, adapter_in))
1162   2              {
1163   3                  if(IS_MASK_SET(BT1_STATUS1, bat_Dischg))
1164   3                  {
1165   4                      SetBAT1CtrlStep(BAT_Step_PC);           // Go to Pre-Charge
1166   4                  }
1167   3              }
1168   2          }
1169   1          else if(IS_MASK_SET(BT1_STATUS3, bat_ForceDischg))
1170   1          {
1171   2              if(IS_MASK_SET(POWER_FLAG1, adapter_in))
1172   2              {
1173   3                  if(IS_MASK_SET(BT1_STATUS1, bat_InCharge))
1174   3                  {
1175   4                      SetBAT1CtrlStep(BAT_Step_DC);           // Go to Discharge
1176   4                  }
1177   3              }
1178   2          }
1179   1          else if(IS_MASK_SET(BT1_STATUS3, bat_AL))
1180   1          {
1181   2      
1182   2          }   
1183   1      }
1184          
1185          
1186          void BAT1FWUpdata(void)
1187          {
1188   1              if (IS_MASK_CLEAR(SYS_MISC1, BAT_FW_UP))
1189   1              {
1190   2                      if(DisableCharger() == FALSE)  
1191   2                      {
1192   3                              DisableCharger();
1193   3                              CLEAR_MASK(SYS_MISC1, BAT_FW_UP);       // Go to FW updata charge
1194   3                      }
1195   2                      else
1196   2                      {
1197   3                              SET_MASK(SYS_MISC1, BAT_FW_UP);         // Go to FW updata charge
1198   3                              ChangePLLFrequency(PLLFreqSetting07);
1199   3                      }
1200   2              }
1201   1      }
1202          
1203          
1204          
1205          //----------------------------------------------------------------------------
1206          // The function of main battery control center  (10ms timer base)
1207          //----------------------------------------------------------------------------
1208          void Battey1ControlCenter(void)
1209          {
1210   1          if(IS_MASK_CLEAR(BT1_STATUS1, bat_in))  // If battery 1 isn't exit, return function.
1211   1          {
1212   2                      CLEAR_MASK(BAT1_STATUS,Oem_BAT1_valid);
1213   2              return;
1214   2          }
1215   1      
1216   1              BAT1_1SecTimer++;
1217   1              if(BAT1_1SecTimer>150)      // 150*10ms
1218   1              {
1219   2                      BAT1_1SecTimer = 0x00;
1220   2                      
1221   2                      #if Lenovo_Support
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 21  

1222   2                      BAT1GoodOrBad();
1223   2                      BAT1MFGF2Polling();
1224   2                      #endif
1225   2                      
1226   2                  PollingBAT1Data();      // Set the polling battery 1 data flag
1227   2                  if(IS_MASK_SET(BT1_STATUS1, bat_valid))
1228   2                  {
1229   3                      BAT1Protection();       // Check battery normal or abnormal,    OT  and  OV
1230   3                  }
1231   2              }
1232   1      
1233   1              if(IS_MASK_SET(BT1_STATUS1, bat_valid))
1234   1              {
1235   2              BAT1ForceStep();            // Check Battery 1 force charge / force discharge / auto learning
1236   2              
1237   2              if(IS_MASK_SET(POWER_FLAG1, adapter_in))
1238   2              {
1239   3                  BAT1_CheckFullyCharged();   // Check battery fully charged or not
1240   3              }
1241   2              else
1242   2              {
1243   3                  BAT1_CheckFullyDisCharged();// Check battery fully discharged or not
1244   3              }
1245   2              }
1246   1      
1247   1              switch(BAT1_CtrlStep)           // Battery 1 control step
1248   1              {
1249   2                      case BAT_Step_ID:                       // Identify main battery
1250   2                              IdentifyBAT1();
1251   2                              break;  
1252   2          
1253   2                      case BAT_Step_WC:                       // Battery wake up charge
1254   2                  BAT1WakeUpCharge();
1255   2                              break;
1256   2      
1257   2              case BAT_Step_PC:                       // Battery pre-charge
1258   2                  BAT1_PreCharge();
1259   2                  break;
1260   2      
1261   2              case BAT_Step_NC:                       // Battery normal charge
1262   2                  BAT1_NormalCharge();    
1263   2                  break;            
1264   2                                      
1265   2                      case BAT_Step_DC:                       // Battery discharge       
1266   2                          BAT1DisCharge();
1267   2                  BAT1CheckDisChargeLow();
1268   2                              break;
1269   2      
1270   2              case BAT_Step_FullyChg:         // Battery fully charged
1271   2                  BAT1FullyCharged();
1272   2                  break;
1273   2      
1274   2              case BAT_Step_FullyDisChg:      // Battery fully discharged
1275   2                  BAT1FullyDisharged();
1276   2                  break;
1277   2      
1278   2              case BAT_Step_SetFail:          // Battery abnormal
1279   2                  BAT1SetFail();
1280   2                  break;
1281   2      
1282   2              case BAT_Step_Fail:                     // Battery abnormal need main battery plug-out to reset
1283   2                              break;     
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 22  

1284   2      
1285   2              case BAT_Step_ForceDC:      // Battery force discharge
1286   2                  BAT1ForceDischarge();
1287   2                  break;
1288   2      
1289   2              case BAT_Step_ForceC:           // Battery force charge
1290   2                  BAT1ForceCharge();
1291   2                  break;            
1292   2      
1293   2              case BAT_Step_AutoLN:           // Battery auto learning
1294   2                  BAT1AutoLearning();
1295   2                  break; 
1296   2                  
1297   2              case BAT_Step_ChargerFail:  // Smart charger abnormal
1298   2                  break;
1299   2      
1300   2                      case BAT_Step_Out:                      // Battery plug out
1301   2                              break;
1302   2                              
1303   2      #if Lenovo_Support
1304   2                      case BAT_Step_keep:                     // Battery keep
1305   2                              break;
1306   2      #endif                  
1307   2                  
1308   2                      default:                    // Unknow step
1309   2                              break;
1310   2              }
1311   1      }
1312          
1313          //****************************************************************************
1314          // The function of smart charger
1315          //****************************************************************************
1316          //----------------------------------------------------------------------------
1317          // The function of setting charger CC CV IC 
1318          // return : 
1319          //          0 : charger setting OK
1320          //          !=0 charger setting fail
1321          //----------------------------------------------------------------------------
1322          BYTE SetSmartCharger(void)
1323          {   //if return 0,it represent as battery will enter charging success.
1324   1          BYTE doneindex;
1325   1          doneindex = 0x00;
1326   1      
1327   1              if(IS_MASK_CLEAR(POWER_FLAG1, adapter_in))
1328   1              {
1329   2                      return(doneindex);
1330   2              }
1331   1      
1332   1              INPUT_CURRENT_LO = InputCurrent;
1333   1              INPUT_CURRENT_HI = InputCurrent >> 8;           
1334   1              if ((Read_ACIN()) && (IS_BATTERY1_IN()) && (BAT1_CV_L == 0) && (BAT1_CV_H == 0))
1335   1              {
1336   2                      CHARGE_CURRENT_LO=BAT1_CURR_PRECHG;
1337   2                  CHARGE_CURRENT_HI=BAT1_CURR_PRECHG>>8;      
1338   2                      CHARGE_VOLTAGE_LO=BAT1_VOLT_WUCHG;
1339   2                      CHARGE_VOLTAGE_HI=BAT1_VOLT_WUCHG >> 8;
1340   2              }
1341   1              else if((IS_BATTERY1_OUT()) && (BAT1_CV_L != 0) && (BAT1_CV_H != 0))
1342   1              {
1343   2                      CHARGE_CURRENT_LO=0;
1344   2                      CHARGE_CURRENT_HI=0;
1345   2                      CHARGE_VOLTAGE_LO=0;
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 23  

1346   2                      CHARGE_VOLTAGE_HI=0;
1347   2              }
1348   1              else
1349   1              {
1350   2                      CHARGE_CURRENT_LO=BAT1_CC_L;
1351   2                      CHARGE_CURRENT_HI=BAT1_CC_H;
1352   2                      CHARGE_VOLTAGE_LO=BAT1_CV_L;
1353   2                      CHARGE_VOLTAGE_HI=BAT1_CV_H;
1354   2              }       
1355   1                      
1356   1              if(!bRWSMBus(SmartChargerChannel, SMbusWW, Charger_Addr, _CMD_ChargerInputCurrent, &INPUT_CURRENT_LO, SMB
             -us_NoPEC))
1357   1          {
1358   2              doneindex++;    //SMBUS fail to set input current
1359   2          }
1360   1              
1361   1              if(!bRWSMBus(SmartChargerChannel, SMbusWW, Charger_Addr, _CMD_ChargerVoltage, &CHARGE_VOLTAGE_LO, SMBus_N
             -oPEC))
1362   1          {
1363   2              doneindex++;    //SMBUS fail to set charge voltage
1364   2          }
1365   1      
1366   1              if(!bRWSMBus(SmartChargerChannel, SMbusWW, Charger_Addr, _CMD_ChargerCurrent, &CHARGE_CURRENT_LO, SMBus_N
             -oPEC))
1367   1      
1368   1          {
1369   2              doneindex++;    //SMBUS fail to set charge current
1370   2          }   
1371   1              
1372   1          return(doneindex); 
1373   1      }
1374          
1375          //****************************************************************************
1376          // The function of polling smart charger
1377          //****************************************************************************
1378          //----------------------------------------------------------------------------
1379          // The function of setting charger CC CV IC 
1380          // return : 
1381          //          0 : charger setting OK
1382          //          !=0 charger setting fail
1383          //----------------------------------------------------------------------------
1384          
1385          BYTE PollingChargerIC(void)
1386          {
1387   1              //if return 0,it represent as battery will enter charging success.
1388   1          BYTE chargeindex;
1389   1          chargeindex = 0x00;
1390   1      
1391   1              if(IS_MASK_CLEAR(POWER_FLAG1, adapter_in))
1392   1              {
1393   2                      return(chargeindex);
1394   2              }
1395   1      
1396   1              PollingChargerData();
1397   1              
1398   1              INPUT_CURRENT_LO=InputCurrent;
1399   1              INPUT_CURRENT_HI=InputCurrent >> 8;
1400   1              if ((Read_ACIN()) && (IS_BATTERY1_IN()) && (BAT1_CV_L == 0) && (BAT1_CV_H == 0))
1401   1              {
1402   2                      CHARGE_CURRENT_LO=BAT1_CURR_PRECHG;
1403   2                  CHARGE_CURRENT_HI=BAT1_CURR_PRECHG>>8;      
1404   2                      CHARGE_VOLTAGE_LO=BAT1_VOLT_WUCHG;
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 24  

1405   2                      CHARGE_VOLTAGE_HI=BAT1_VOLT_WUCHG >> 8;
1406   2              }
1407   1              else if((IS_BATTERY1_OUT()) && (BAT1_CV_L != 0) && (BAT1_CV_H != 0))
1408   1              {
1409   2                      CHARGE_CURRENT_LO=0;
1410   2                      CHARGE_CURRENT_HI=0;
1411   2                      CHARGE_VOLTAGE_LO=0;
1412   2                      CHARGE_VOLTAGE_HI=0;
1413   2              }
1414   1              else
1415   1              {
1416   2                      CHARGE_CURRENT_LO=BAT1_CC_L;
1417   2                      CHARGE_CURRENT_HI=BAT1_CC_H;
1418   2                      CHARGE_VOLTAGE_LO=BAT1_CV_L;
1419   2                      CHARGE_VOLTAGE_HI=BAT1_CV_H;
1420   2              }       
1421   1          if(!bRWSMBus(SmartChargerChannel, SMbusWW, Charger_Addr, _CMD_ChargerInputCurrent, &INPUT_CURRENT_LO, 
             -SMBus_NoPEC))
1422   1          {
1423   2              chargeindex++;    //SMBUS fail to set input current
1424   2          }
1425   1              
1426   1              if(!bRWSMBus(SmartChargerChannel, SMbusWW, Charger_Addr, _CMD_ChargerVoltage, &CHARGE_VOLTAGE_LO, SMBus_N
             -oPEC))
1427   1          {
1428   2              chargeindex++;    //SMBUS fail to set charge voltage
1429   2          }
1430   1      
1431   1              if(!bRWSMBus(SmartChargerChannel, SMbusWW, Charger_Addr, _CMD_ChargerCurrent, &CHARGE_CURRENT_LO, SMBus_N
             -oPEC))
1432   1      
1433   1          {
1434   2              chargeindex++;    //SMBUS fail to set charge current
1435   2          }
1436   1          return(chargeindex);
1437   1      }
1438          
1439          //----------------------------------------------------------------------------
1440          // The function of disable charger
1441          // return
1442          //  0 : disable charger fail
1443          //  1 : disable charger OK
1444          //----------------------------------------------------------------------------
1445          BYTE DisableCharger(void)
1446          {
1447   1          BYTE result;
1448   1          result = 0x00;
1449   1          if(SmartCharger_Support)
1450   1          {
1451   2              CHARGE_CURRENT_LO=00;
1452   2                  CHARGE_CURRENT_HI=00;
1453   2              if(SetSmartCharger()!=0x00)
1454   2              {
1455   3                  Charger_TimeOut++;
1456   3                  if(Charger_TimeOut>ChargerSettingTimeOut)
1457   3                  {
1458   4                                      
1459   4                      SetBAT1CtrlStep(BAT_Step_ChargerFail);  // Go to smart charger fail
1460   4                  }
1461   3                  result = 0x00;
1462   3              }
1463   2              else
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 25  

1464   2              {                
1465   3                  if(IS_MASK_SET(POWER_FLAG1, adapter_in))    // AC mode disable charger
1466   3                  {
1467   4                      if(IS_MASK_SET(BT1_STATUS3, bat_ForceDischg))
1468   4                      {
1469   5                          Hook_BAT1_ChargePinON(0);
1470   5                      }
1471   4                      else
1472   4                      {
1473   5                          Hook_BAT1_ChargePinON(1);
1474   5                      }
1475   4                  }
1476   3                  else
1477   3                  {
1478   4                      Hook_BAT1_ChargePinON(0);
1479   4                      SET_MASK(BT1_STATUS2, bat_DC_OK);       // DC mode disable charger
1480   4                      SET_MASK(BT1_STATUS1, bat_Dischg);
1481   4                  }
1482   3                  Charger_TimeOut = 0x00;
1483   3                  result = 0x01;
1484   3              }
1485   2          }
1486   1          else
1487   1          {
1488   2              // *** Set DAC CC CV value here ***
1489   2              if(IS_MASK_SET(POWER_FLAG1, adapter_in))    // AC mode disable charger
1490   2              {
1491   3                  if(IS_MASK_SET(BT1_STATUS3, bat_ForceDischg))
1492   3                  {
1493   4                      Hook_BAT1_ChargePinON(0);
1494   4                  }
1495   3                  else
1496   3                  {
1497   4                      Hook_BAT1_ChargePinON(1);
1498   4                  }
1499   3              }
1500   2              else                                        // DC mode disable charger
1501   2              {
1502   3                  Hook_BAT1_ChargePinON(0);
1503   3                  SET_MASK(BT1_STATUS2, bat_DC_OK);
1504   3                  SET_MASK(BT1_STATUS1, bat_Dischg);
1505   3              }
1506   2              result = 0x01;
1507   2          }       
1508   1          return(result);
1509   1      }
1510          
1511          
1512          
1513          void Battey1FrimUp(void)    // 10ms  timebase   in s0
1514          {
1515   1              if (IS_MASK_SET(SYS_MISC1, Bat1_Firm_En))
1516   1              {
1517   2                      if (IS_MASK_CLEAR(SYS_MISC1, BAT_FW_UP))
1518   2                      {
1519   3      //                      SET_MASK(SYS_MISC1, BAT_FW_UP); // Go to FW updata charge
1520   3      //                      SetBAT1CtrlStep(BAT_Step_FWUP); 
1521   3                              BAT1FWUpdata( );
1522   3                      }
1523   2              }
1524   1              else
1525   1              {
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 26  

1526   2                      if (IS_MASK_SET(SYS_MISC1, BAT_FW_UP))
1527   2                      {
1528   3                              CLEAR_MASK(SYS_MISC1, BAT_FW_UP);       // Go to FW updata charge
1529   3                              SetBAT1CtrlStep(BAT_Step_ID);   
1530   3                      }
1531   2              }
1532   1      }
1533          
1534          
1535          #if Lenovo_Support
1536          //----------------------------------------------------------------------------
1537          // Lenovo  feature       battery 
1538          //----------------------------------------------------------------------------
1539          
1540          void Calibrate_Mode_PreDC(void)
1541          {
1542   1      
1543   1              if(BAT1_RSOC < 95)
1544   1              {
1545   2                      //BAT1ForceCharge();
1546   2                      AC_ON();
1547   2                      BAT_Calibrate_Step = BAT_Calibrate_Step_NC;
1548   2              }else
1549   1              {
1550   2                      AC_OFF();               
1551   2              }
1552   1      
1553   1      }
1554          
1555          void Calibrate_Mode_NC(void)
1556          {
1557   1              if(BAT1_RSOC >= 100)
1558   1              {
1559   2                      //BAT1ForceDischarge();
1560   2                      AC_OFF();
1561   2                      BAT_Calibrate_Step = BAT_Calibrate_Step_DC;
1562   2      
1563   2              }
1564   1      }
1565          
1566          
1567          void Calibrate_Mode_DC(void)
1568          {
1569   1              if(BAT1_RSOC < 1) //(BAT1_CtrlStep == BAT_Step_FullyDisChg)
1570   1              {
1571   2                      //BAT1ForceCharge();
1572   2                      AC_ON();
1573   2                      BAT_Calibrate_Step = BAT_Calibrate_Step_Exit;
1574   2      
1575   2              }
1576   1      }
1577          
1578          
1579          void Calibrate_Mode_Exit()
1580          {
1581   1      
1582   1              AC_ON();
1583   1              SET_MASK(VPC_Lenovo,Genenal_Bit_vpc);
1584   1              ECQEvent(0x44,SCIMode_Normal);
1585   1              
1586   1              BAT_Calibrate_Step = 0x00;
1587   1      
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 27  

1588   1      }
1589          
1590          
1591          void Battery_Calibrate_Mode()
1592          {
1593   1              if(BAT_Calibrate_Step ==0)
1594   1              {
1595   2                      if(BAT1_RSOC >= 95)
1596   2                              BAT_Calibrate_Step= BAT_Calibrate_Step_PreDC;
1597   2                      else
1598   2                              BAT_Calibrate_Step=BAT_Calibrate_Step_NC;
1599   2      
1600   2                      BAT_Storagemode_Step=BAT_Storagemode_Step_Exit;
1601   2      
1602   2              }
1603   1              if((Sys_Power_Status & 0x7f) == 5)
1604   1              {
1605   2                      Sys_Power_Status = 0;
1606   2                      BAT_Calibrate_Step = BAT_Calibrate_Step_Exit;
1607   2              }
1608   1      
1609   1              //s5 can exit battery calibrate mode
1610   1              if(SysPowState == SYSTEM_S5)
1611   1              {
1612   2                      BAT_Calibrate_Step = BAT_Calibrate_Step_Exit;
1613   2      
1614   2              }
1615   1      
1616   1          //Battery has something wrong
1617   1              if(BAT1_FailCause != 0x00)
1618   1              {
1619   2                      BAT_Calibrate_Step = BAT_Calibrate_Step_Exit;
1620   2      
1621   2              }
1622   1      
1623   1      
1624   1      
1625   1          // if >95% preDisCharge  --->  charge to 100% ----> discharge 0%  ----> exit calibrate mode
1626   1          
1627   1              switch(BAT_Calibrate_Step)                       // Battery 1 control step
1628   1              {
1629   2                      case BAT_Calibrate_Step_PreDC:            // battery predischarge
1630   2                              Calibrate_Mode_PreDC();
1631   2                              break;  
1632   2      
1633   2                      case BAT_Calibrate_Step_NC:               // normal charge
1634   2                              Calibrate_Mode_NC();
1635   2                              break;  
1636   2      
1637   2                      case BAT_Calibrate_Step_DC:               // discharge
1638   2                              Calibrate_Mode_DC();
1639   2                              break;
1640   2      
1641   2                      case BAT_Calibrate_Step_Exit:             // exit calibrate mode
1642   2                              Calibrate_Mode_Exit();
1643   2                              break;     
1644   2                              
1645   2                      default:                                                  // Unknow step
1646   2                              break;
1647   2              }
1648   1      
1649   1              
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 28  

1650   1      }
1651          
1652          void Storage_Mode_Check(void)
1653          {
1654   1              BAT_Storagemode_Step=BAT_Storagemode_Step_DC;
1655   1      }
1656          
1657          
1658          void Storage_Mode_DC(void)
1659          {
1660   1              if(BAT1_RSOC > 60)
1661   1              {
1662   2                      AC_OFF();
1663   2              }
1664   1              else
1665   1              {
1666   2                      AC_ON();
1667   2                      BAT_Storagemode_Step=BAT_Storagemode_Step_NC;
1668   2              }
1669   1      }
1670          
1671          void Storage_Mode_NC(void)
1672          {
1673   1              if(BAT1_RSOC>=60)
1674   1              {
1675   2                      SET_MASK(BT1_STATUS3,bat_ForceDischg);
1676   2              }
1677   1              else if(BAT1_RSOC<55)
1678   1              {
1679   2                      CLEAR_MASK(BT1_STATUS3,bat_ForceDischg);
1680   2              }
1681   1      }
1682          
1683          
1684          void Storage_Mode_Exit(void)
1685          {
1686   1              AC_ON();
1687   1      
1688   1              BAT_Storagemode_Step = BAT_Storagemode_Check;
1689   1              CLEAR_MASK(BT1_STATUS3,bat_ForceDischg);
1690   1              CLEAR_MASK(BIOS_OEM_battery_health,HOST_BTCM);
1691   1              
1692   1              
1693   1      }
1694          
1695          void Battery_Storage_Mode(void)
1696          {
1697   1              if(IS_MASK_SET(BIOS_OEM_battery_health,HOST_BTCM))//when host end cycle exit
1698   1              {
1699   2                      BAT_Storagemode_Step = BAT_Storagemode_Step_Exit;               
1700   2              }
1701   1              
1702   1              switch(BAT_Storagemode_Step)                     // Battery 1 control step
1703   1              {
1704   2                      case BAT_Storagemode_Check:                             //check if enter storage mode
1705   2                              Storage_Mode_Check();
1706   2                              break;
1707   2                      case BAT_Storagemode_Step_DC:             // battery discharge
1708   2                              Storage_Mode_DC();
1709   2                              break;  
1710   2                      case BAT_Storagemode_Step_NC:             // normal charge
1711   2                              Storage_Mode_NC();
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 29  

1712   2                              break;  
1713   2                      case BAT_Storagemode_Step_Exit:                   // normal charge
1714   2                              Storage_Mode_Exit();
1715   2                              break;                  
1716   2                      default:
1717   2                              BAT_Storagemode_Step=0;
1718   2                              break;
1719   2              }
1720   1      
1721   1      
1722   1      }
1723          
1724          void Lenovo_Battery_Health(void)
1725          {       
1726   1              if(BAT_Storagemode_Step != BAT_Storagemode_Check)
1727   1                      BAT_Storagemode_Step = BAT_Storagemode_Step_Exit;
1728   1              else
1729   1              {
1730   2                      Battery_Calibrate_Mode();
1731   2                      return;
1732   2              }
1733   1      
1734   1              if((Sys_Power_Status & 0x7f) == 5)
1735   1              {
1736   2                      Sys_Power_Status = 0;
1737   2              }
1738   1      
1739   1              if(BIOS_OEM_battery_health & HOST_end_calibrate)//when host end calibrate exit battery calibrate
1740   1              {
1741   2                      CLEAR_MASK(BIOS_OEM_battery_health,HOST_end_calibrate);
1742   2                      BAT_Calibrate_Step = BAT_Calibrate_Step_Exit;
1743   2              }
1744   1      
1745   1              Battery_Storage_Mode();
1746   1      }
1747          
1748          #endif
1749          
1750          void CheckBatShipMode(void)
1751          {
1752   1              if (IS_MASK_CLEAR(Bat_ShipMode_Cmd,BAST) && IS_MASK_SET(Bat_ShipMode_Cmd,BASM))
1753   1              {       
1754   2                      RamDebug(0x95);
1755   2                      Delay1MS(10);
1756   2                      
1757   2                      Bat_ShipMode_Data_L = 0x10;
1758   2                      Bat_ShipMode_Data_H = 0x00;
1759   2                      
1760   2                      if (bRWSMBus(SMbusCh1, SMbusWW, 0x16, 0x00, &Bat_ShipMode_Data_L, SMBus_NoPEC))         // write 0x0000 to 0x34
1761   2                      {
1762   3                              RamDebug(0x96);
1763   3                              Bat_ShipMode_Data_L = 0x10;
1764   3                              if (bRWSMBus(SMbusCh1, SMbusWW, 0x16, 0x00, &Bat_ShipMode_Data_L, SMBus_NoPEC))         //write 0x1000 to 0x34
1765   3                              {
1766   4                                      RamDebug(0x97);
1767   4                                      Bat_ShipMode_Cmd &= ~BASM;
1768   4                                      Bat_ShipMode_Cmd |= BASS;
1769   4                                      /*
1770   4                                      if (bRWSMBus(SMbusCh1, SMbusRW, 0x16, 0x34, &Bat_ShipMode_Data_L, SMBus_NoPEC))                 //read data from 0x3
             -4
1771   4                                      {
1772   4                                              RamDebug(0x98);
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 30  

1773   4                                              if (Bat_ShipMode_Data_L==0x00 && Bat_ShipMode_Data_H==0x01)                                     // return 0x0100, ship mode done!
1774   4                                              {
1775   4                                                      Bat_ShipMode_Cmd &= ~BASM;
1776   4                                                      Bat_ShipMode_Cmd |= BASS;
1777   4                                              }
1778   4                                      }
1779   4                                      */
1780   4                              }
1781   3                      }
1782   2              }
1783   1              else
1784   1                      Bat_ShipMode_Cmd = 0x00;                  
1785   1      }
1786          
1787          
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 31  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com014D (BEGIN)
0000         L?0334:
0000         L?0335:
0000 900000      E     MOV     DPTR,#BAT1_CC_H
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
0005 900000      E     MOV     DPTR,#BAT1_CC_L
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#CHARGE_CURRENT_BK
000C         L?0336:
000C 7C00              MOV     R4,#00H
000E 2400              ADD     A,#00H
0010 FF                MOV     R7,A
0011 EC                MOV     A,R4
0012 3E                ADDC    A,R6
0013 F0                MOVX    @DPTR,A
0014 A3                INC     DPTR
0015 EF                MOV     A,R7
0016 22                RET     
0017         L?0337:
0017 F0                MOVX    @DPTR,A
0018 900000      E     MOV     DPTR,#Charger_TimeOut
001B F0                MOVX    @DPTR,A
001C 900000      E     MOV     DPTR,#WakeUpChrCunt_Min
001F F0                MOVX    @DPTR,A
0020 900000      E     MOV     DPTR,#PreChrCunt_Min
0023 F0                MOVX    @DPTR,A
0024 A3                INC     DPTR
0025 F0                MOVX    @DPTR,A
0026 900000      E     MOV     DPTR,#NormalChrCunt_Min
0029 F0                MOVX    @DPTR,A
002A A3                INC     DPTR
002B F0                MOVX    @DPTR,A
002C 900000      E     MOV     DPTR,#WakeUpChrCunt
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 F0                MOVX    @DPTR,A
0032 900000      E     MOV     DPTR,#PreChrCunt
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 F0                MOVX    @DPTR,A
0038 900000      E     MOV     DPTR,#NormalChrCunt
003B F0                MOVX    @DPTR,A
003C A3                INC     DPTR
003D F0                MOVX    @DPTR,A
003E 900000      E     MOV     DPTR,#BAT1_OTCunt
0041 F0                MOVX    @DPTR,A
0042 900000      E     MOV     DPTR,#BAT1_OVCunt
0045 F0                MOVX    @DPTR,A
0046         L?0338:
0046 900000      E     MOV     DPTR,#CHARGE_CURRENT_BK
0049 F0                MOVX    @DPTR,A
004A A3                INC     DPTR
004B F0                MOVX    @DPTR,A
004C 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_BK
004F F0                MOVX    @DPTR,A
0050 A3                INC     DPTR
0051 F0                MOVX    @DPTR,A
0052 22                RET     
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 32  

0053         L?0339:
0053         L?0340:
0053 900000      E     MOV     DPTR,#InputCurrent
0056 E0                MOVX    A,@DPTR
0057 A3                INC     DPTR
0058 E0                MOVX    A,@DPTR
0059 900000      E     MOV     DPTR,#INPUT_CURRENT_LO
005C F0                MOVX    @DPTR,A
005D 900000      E     MOV     DPTR,#InputCurrent
0060 E0                MOVX    A,@DPTR
0061 900000      E     MOV     DPTR,#INPUT_CURRENT_HI
0064 F0                MOVX    @DPTR,A
0065 22                RET     
0066         L?0341:
0066 7C00              MOV     R4,#00H
0068 2400              ADD     A,#00H
006A FF                MOV     R7,A
006B EC                MOV     A,R4
006C 3E                ADDC    A,R6
006D F0                MOVX    @DPTR,A
006E A3                INC     DPTR
006F EF                MOV     A,R7
0070 F0                MOVX    @DPTR,A
0071 22                RET     
0072         L?0342:
0072 900000      E     MOV     DPTR,#BAT1_CC_L
0075 E0                MOVX    A,@DPTR
0076 900000      E     MOV     DPTR,#CHARGE_CURRENT_LO
0079 F0                MOVX    @DPTR,A
007A 900000      E     MOV     DPTR,#BAT1_CC_H
007D E0                MOVX    A,@DPTR
007E         L?0343:
007E 900000      E     MOV     DPTR,#CHARGE_CURRENT_HI
0081 F0                MOVX    @DPTR,A
0082 900000      E     MOV     DPTR,#BAT1_CV_L
0085 E0                MOVX    A,@DPTR
0086 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_LO
0089 F0                MOVX    @DPTR,A
008A 900000      E     MOV     DPTR,#BAT1_CV_H
008D E0                MOVX    A,@DPTR
008E 22                RET     
008F         L?0344:
008F 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0092 743F              MOV     A,#03FH
0094 F0                MOVX    @DPTR,A
0095 7E00        E     MOV     R6,#HIGH INPUT_CURRENT_LO
0097 A3                INC     DPTR
0098 7400        E     MOV     A,#HIGH INPUT_CURRENT_LO
009A F0                MOVX    @DPTR,A
009B 7400        E     MOV     A,#LOW INPUT_CURRENT_LO
009D         L?0345:
009D A3                INC     DPTR
009E         L?0346:
009E F0                MOVX    @DPTR,A
009F E4                CLR     A
00A0 A3                INC     DPTR
00A1 F0                MOVX    @DPTR,A
00A2 7B12              MOV     R3,#012H
00A4 7D8C              MOV     R5,#08CH
00A6 FF                MOV     R7,A
00A7 22                RET     
00A8         L?0347:
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 33  

00A8 7C00              MOV     R4,#00H
00AA 2400              ADD     A,#00H
00AC FF                MOV     R7,A
00AD EC                MOV     A,R4
00AE 3E                ADDC    A,R6
00AF F0                MOVX    @DPTR,A
00B0 A3                INC     DPTR
00B1 EF                MOV     A,R7
00B2 F0                MOVX    @DPTR,A
00B3 22                RET     
00B4         L?0348:
00B4         L?0349:
00B4 7C17              MOV     R4,#017H
00B6 7D70              MOV     R5,#070H
00B8         L?0350:
00B8 E0                MOVX    A,@DPTR
00B9 FE                MOV     R6,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC FF                MOV     R7,A
00BD 120000      E     LCALL   ?C?UIDIV
00C0 ED                MOV     A,R5
00C1 4C                ORL     A,R4
00C2 22                RET     
00C3         L?0351:
00C3 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
00C6 F0                MOVX    @DPTR,A
00C7 7E00        E     MOV     R6,#HIGH ByteTemp01
00C9 A3                INC     DPTR
00CA 7400        E     MOV     A,#HIGH ByteTemp01
00CC F0                MOVX    @DPTR,A
00CD 7400        E     MOV     A,#LOW ByteTemp01
00CF         L?0352:
00CF A3                INC     DPTR
00D0         L?0353:
00D0 F0                MOVX    @DPTR,A
00D1 E4                CLR     A
00D2 A3                INC     DPTR
00D3 F0                MOVX    @DPTR,A
00D4 7B16              MOV     R3,#016H
00D6 22                RET     
00D7         L?0354:
00D7         L?0355:
00D7 900000      E     MOV     DPTR,#BT1_STATUS1
00DA E0                MOVX    A,@DPTR
00DB 54E3              ANL     A,#0E3H
00DD         L?0356:
00DD F0                MOVX    @DPTR,A
00DE E4                CLR     A
00DF 900000      E     MOV     DPTR,#BT1_STATUS2
00E2 F0                MOVX    @DPTR,A
00E3 22                RET     
00E4         L?0357:
00E4 900000      E     MOV     DPTR,#CHARGE_CURRENT_LO
00E7 F0                MOVX    @DPTR,A
00E8 900000      E     MOV     DPTR,#CHARGE_CURRENT_HI
00EB 04                INC     A
00EC         L?0358:
00EC F0                MOVX    @DPTR,A
00ED 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_LO
00F0 74FA              MOV     A,#0FAH
00F2 F0                MOVX    @DPTR,A
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 34  

00F3 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_HI
00F6 7432              MOV     A,#032H
00F8 F0                MOVX    @DPTR,A
00F9 22                RET     
00FA         L?0359:
00FA 7C00              MOV     R4,#00H
00FC 2400              ADD     A,#00H
00FE FF                MOV     R7,A
00FF EC                MOV     A,R4
0100 3E                ADDC    A,R6
0101 F0                MOVX    @DPTR,A
0102 A3                INC     DPTR
0103 EF                MOV     A,R7
0104 F0                MOVX    @DPTR,A
0105 22                RET     
0106         L?0360:
0106         L?0361:
0106 F0                MOVX    @DPTR,A
0107 900000      E     MOV     DPTR,#BT1_STATUS1
010A E0                MOVX    A,@DPTR
010B 4404              ORL     A,#04H
010D         L?0362:
010D F0                MOVX    @DPTR,A
010E E4                CLR     A
010F 900000      E     MOV     DPTR,#Charger_TimeOut
0112 F0                MOVX    @DPTR,A
0113 22                RET     
0114         L?0363:
0114         L?0364:
0114 900000      E     MOV     DPTR,#Charger_TimeOut
0117 E0                MOVX    A,@DPTR
0118 04                INC     A
0119 F0                MOVX    @DPTR,A
011A E0                MOVX    A,@DPTR
011B D3                SETB    C
011C 9403              SUBB    A,#03H
011E 22                RET     
011F         L?0365:
011F         L?0366:
011F 900000      E     MOV     DPTR,#BAT1_CC_H
0122 E0                MOVX    A,@DPTR
0123 FE                MOV     R6,A
0124 900000      E     MOV     DPTR,#BAT1_CC_L
0127 E0                MOVX    A,@DPTR
0128 22                RET     
0129         L?0367:
0129         L?0368:
0129 E4                CLR     A
012A         L?0369:
012A 75F001            MOV     B,#01H
012D 020000      E     LJMP    ?C?IILDX
0130         L?0370:
0130 F0                MOVX    @DPTR,A
0131         L?0371:
0131 900000      E     MOV     DPTR,#BAT_Calibrate_Step
0134 7408              MOV     A,#08H
0136 F0                MOVX    @DPTR,A
0137 22                RET     
0138         L?0372:
0138         L?0373:
0138 900000      E     MOV     DPTR,#BAT1_ID_TimeOut_CNT
013B E0                MOVX    A,@DPTR
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 35  

013C 14                DEC     A
013D F0                MOVX    @DPTR,A
013E E0                MOVX    A,@DPTR
013F 22                RET     
0140         L?0374:
0140 2400              ADD     A,#00H
0142 FF                MOV     R7,A
0143 EC                MOV     A,R4
0144 3E                ADDC    A,R6
0145 F0                MOVX    @DPTR,A
0146 A3                INC     DPTR
0147 EF                MOV     A,R7
0148 F0                MOVX    @DPTR,A
0149 22                RET     
014A         L?0375:
014A 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
014D 7414              MOV     A,#014H
014F F0                MOVX    @DPTR,A
0150 7E00        E     MOV     R6,#HIGH CHARGE_CURRENT_LO
0152 A3                INC     DPTR
0153 7400        E     MOV     A,#HIGH CHARGE_CURRENT_LO
0155 F0                MOVX    @DPTR,A
0156 A3                INC     DPTR
0157 7400        E     MOV     A,#LOW CHARGE_CURRENT_LO
0159 22                RET     
015A         L?0376:
015A E4                CLR     A
015B         L?0377:
015B 900000      E     MOV     DPTR,#CHARGE_CURRENT_LO
015E F0                MOVX    @DPTR,A
015F 900000      E     MOV     DPTR,#CHARGE_CURRENT_HI
0162 F0                MOVX    @DPTR,A
0163 22                RET     
0164         L?0378:
0164 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0167 F0                MOVX    @DPTR,A
0168 7E00        E     MOV     R6,#HIGH Bat_ShipMode_Data_L
016A A3                INC     DPTR
016B 7400        E     MOV     A,#HIGH Bat_ShipMode_Data_L
016D F0                MOVX    @DPTR,A
016E A3                INC     DPTR
016F 7400        E     MOV     A,#LOW Bat_ShipMode_Data_L
0171 22                RET     
0172         L?0379:
0172 900000      E     MOV     DPTR,#BAT1_CtrlStep
0175 F0                MOVX    @DPTR,A
0176 900000      E     MOV     DPTR,#BAT1_ID_Step
0179 F0                MOVX    @DPTR,A
017A 900000      E     MOV     DPTR,#BAT1_1SecTimer
017D F0                MOVX    @DPTR,A
017E 22                RET     
017F         L?0380:
017F 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0182 7415              MOV     A,#015H
0184 F0                MOVX    @DPTR,A
0185 7E00        E     MOV     R6,#HIGH CHARGE_VOLTAGE_LO
0187 A3                INC     DPTR
0188 7400        E     MOV     A,#HIGH CHARGE_VOLTAGE_LO
018A F0                MOVX    @DPTR,A
018B 22                RET     
018C         L?0381:
018C 900000      E     MOV     DPTR,#BAT1_ID_TimeOut_CNT
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 36  

018F F0                MOVX    @DPTR,A
0190 900000      E     MOV     DPTR,#BAT1_Number
0193 F0                MOVX    @DPTR,A
0194 900000      E     MOV     DPTR,#BAT1_FirstDataIndex
0197 22                RET     
0198         L?0382:
0198         L?0383:
0198 E0                MOVX    A,@DPTR
0199 A3                INC     DPTR
019A E0                MOVX    A,@DPTR
019B 900000      E     MOV     DPTR,#CHARGE_CURRENT_LO
019E F0                MOVX    @DPTR,A
019F 22                RET     
01A0         L?0384:
01A0 E4                CLR     A
01A1         L?0385:
01A1 900000      E     MOV     DPTR,#PreChrCunt
01A4 F0                MOVX    @DPTR,A
01A5 A3                INC     DPTR
01A6 F0                MOVX    @DPTR,A
01A7 22                RET     
01A8         L?0386:
01A8 900000      E     MOV     DPTR,#BAT1_temp_H
01AB E0                MOVX    A,@DPTR
01AC FE                MOV     R6,A
01AD 900000      E     MOV     DPTR,#BAT1_temp_L
01B0 E0                MOVX    A,@DPTR
01B1 22                RET     
01B2         L?0387:
01B2 900000      E     MOV     DPTR,#WakeUpChrCunt
01B5 F0                MOVX    @DPTR,A
01B6 A3                INC     DPTR
01B7 F0                MOVX    @DPTR,A
01B8 900000      E     MOV     DPTR,#WakeUpChrCunt_Min
01BB 22                RET     
01BC         L?0388:
01BC 900000      E     MOV     DPTR,#BAT1_CV_H
01BF E0                MOVX    A,@DPTR
01C0 FE                MOV     R6,A
01C1 900000      E     MOV     DPTR,#BAT1_CV_L
01C4 E0                MOVX    A,@DPTR
01C5 22                RET     
01C6         L?0389:
01C6         L?0390:
01C6 900000      R     MOV     DPTR,#doneindex
01C9 E0                MOVX    A,@DPTR
01CA 04                INC     A
01CB F0                MOVX    @DPTR,A
01CC 22                RET     
01CD         L?0391:
01CD         L?0392:
01CD 900000      R     MOV     DPTR,#chargeindex
01D0 E0                MOVX    A,@DPTR
01D1 04                INC     A
01D2 F0                MOVX    @DPTR,A
01D3 22                RET     
             ; FUNCTION Com014D (END)

             ; FUNCTION AC_OFF (BEGIN)
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 50
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 37  

0000 7F00              MOV     R7,#00H
0002 22                RET     
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
             ; FUNCTION AC_OFF (END)

             ; FUNCTION AC_ON (BEGIN)
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 99
0000 7F00              MOV     R7,#00H
0002 22                RET     
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
             ; FUNCTION AC_ON (END)

C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 38  

             ; FUNCTION Battery_Auth_Lenovo (BEGIN)
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 159
0000 7800        R     MOV     R0,#LOW AuthStr
0002 7C00        R     MOV     R4,#HIGH AuthStr
0004 7D01              MOV     R5,#01H
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1000
000A 7900        R     MOV     R1,#LOW _?ix1000
000C 7E00              MOV     R6,#00H
000E 7F04              MOV     R7,#04H
0010 120000      E     LCALL   ?C?COPY
                                           ; SOURCE LINE # 162
0013 900000      E     MOV     DPTR,#Oem_BatCtrl_F
0016 E0                MOVX    A,@DPTR
0017 20E03C            JB      ACC.0,?C0019
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
001A 7800        E     MOV     R0,#LOW Tmp_XPntr
001C 7400        R     MOV     A,#HIGH AuthStr
001E F6                MOV     @R0,A
001F 08                INC     R0
0020 7400        R     MOV     A,#LOW AuthStr
0022 F6                MOV     @R0,A
                                           ; SOURCE LINE # 165
0023 900000      E     MOV     DPTR,#?_bWSMBusBlock?BYTE+03H
0026 743C              MOV     A,#03CH
0028 F0                MOVX    @DPTR,A
0029 18                DEC     R0
002A E6                MOV     A,@R0
002B FF                MOV     R7,A
002C 08                INC     R0
002D E6                MOV     A,@R0
002E A3                INC     DPTR
002F CF                XCH     A,R7
0030 F0                MOVX    @DPTR,A
0031 A3                INC     DPTR
0032 EF                MOV     A,R7
0033 F0                MOVX    @DPTR,A
0034 7404              MOV     A,#04H
0036 120000      R     LCALL   L?0352
0039 7D94              MOV     R5,#094H
003B FF                MOV     R7,A
003C 120000      E     LCALL   _bWSMBusBlock
003F EF                MOV     A,R7
0040 600D              JZ      ?C0020
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 167
0042 900000      E     MOV     DPTR,#Oem_BatCtrl_F
0045 E0                MOVX    A,@DPTR
0046 4401              ORL     A,#01H
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
0049 120000      R     LCALL   SetBAT1IDTimeOutCNT
                                           ; SOURCE LINE # 169
004C 020000      R     LJMP    ?C0023
004F         ?C0020:
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 172
                                           ; SOURCE LINE # 173
004F 120000      R     LCALL   L?0372
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 39  

0052 7077              JNZ     ?C0023
                                           ; SOURCE LINE # 174
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 178
0054 8070              SJMP    ?C0319
0056         ?C0019:
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
0056 900000      E     MOV     DPTR,#?_bRSMBusBlock?BYTE+03H
0059 743C              MOV     A,#03CH
005B F0                MOVX    @DPTR,A
005C 7E00        E     MOV     R6,#HIGH SMB_DATA
005E A3                INC     DPTR
005F 7400        E     MOV     A,#HIGH SMB_DATA
0061 F0                MOVX    @DPTR,A
0062 A3                INC     DPTR
0063 7400        E     MOV     A,#LOW SMB_DATA
0065 F0                MOVX    @DPTR,A
0066 7B16              MOV     R3,#016H
0068 7D14              MOV     R5,#014H
006A E4                CLR     A
006B FF                MOV     R7,A
006C 120000      E     LCALL   _bRSMBusBlock
006F EF                MOV     A,R7
0070 604F              JZ      ?C0024
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
0072 900000      E     MOV     DPTR,#SMB_DATA1+05H
0075 E0                MOVX    A,@DPTR
0076 C4                SWAP    A
0077 54F0              ANL     A,#0F0H
0079 FF                MOV     R7,A
007A 900000      E     MOV     DPTR,#SMB_DATA1+07H
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F EF                MOV     A,R7
0080 8EF0              MOV     B,R6
0082 A4                MUL     AB
0083 75F010            MOV     B,#010H
0086 A4                MUL     AB
0087 249E              ADD     A,#09EH
0089 FF                MOV     R7,A
008A E5F0              MOV     A,B
008C 3433              ADDC    A,#033H
;---- Variable 'PC_Npack' assigned to Register 'R4/R5' ----
008E CD                XCH     A,R5
008F EF                MOV     A,R7
0090 CD                XCH     A,R5
0091 FC                MOV     R4,A
                                           ; SOURCE LINE # 184
0092 A3                INC     DPTR
0093 E0                MOVX    A,@DPTR
0094 FE                MOV     R6,A
0095 900000      E     MOV     DPTR,#SMB_DATA1+06H
0098 E0                MOVX    A,@DPTR
0099 7A00              MOV     R2,#00H
009B 2400              ADD     A,#00H
009D FF                MOV     R7,A
009E EA                MOV     A,R2
009F 3E                ADDC    A,R6
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 40  

00A0 FE                MOV     R6,A
;---- Variable 'BAT_Npack' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 186
00A1 ED                MOV     A,R5
00A2 6F                XRL     A,R7
00A3 7002              JNZ     ?C0312
00A5 EC                MOV     A,R4
00A6 6E                XRL     A,R6
00A7         ?C0312:
00A7 900000      E     MOV     DPTR,#BIOS_OEM_battery_health
00AA 7009              JNZ     ?C0025
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
00AC E0                MOVX    A,@DPTR
00AD 4410              ORL     A,#010H
00AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
00B0 120000      R     LCALL   BAT1IdentifyNextStep
                                           ; SOURCE LINE # 191
00B3 8009              SJMP    ?C0026
00B5         ?C0025:
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
00B5 E0                MOVX    A,@DPTR
00B6 54EF              ANL     A,#0EFH
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
00B9 7F08              MOV     R7,#08H
00BB 120000      R     LCALL   _BAT1_SetFail
                                           ; SOURCE LINE # 197
00BE         ?C0026:
                                           ; SOURCE LINE # 199
00BE 7F01              MOV     R7,#01H
00C0 22                RET     
                                           ; SOURCE LINE # 200
00C1         ?C0024:
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
00C1 120000      R     LCALL   L?0372
00C4 7005              JNZ     ?C0023
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
00C6         ?C0319:
00C6 7F02              MOV     R7,#02H
00C8 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 210
00CB         ?C0023:
                                           ; SOURCE LINE # 212
00CB 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 213
00CD         ?C0027:
00CD 22                RET     
             ; FUNCTION Battery_Auth_Lenovo (END)

             ; FUNCTION BAT1ID_CheckDeviceName (BEGIN)
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 232
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 41  

                                           ; SOURCE LINE # 233
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
0000         ?C0320:
0000 020000      R     LJMP    BAT1IdentifyNextStep
             ; FUNCTION BAT1ID_CheckDeviceName (END)

             ; FUNCTION _BAT1_SetFail (BEGIN)
                                           ; SOURCE LINE # 270
;---- Variable 'failcause' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
0000 900000      E     MOV     DPTR,#BAT1_FailCause
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 273
0005 7F20              MOV     R7,#020H
0007 020000      R     LJMP    _SetBAT1CtrlStep
             ; FUNCTION _BAT1_SetFail (END)

             ; FUNCTION BAT1_ClrVariables (BEGIN)
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#BT1_STATUS2
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 282
0005 900000      E     MOV     DPTR,#BT1_STATUS3
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 285
0009 900000      E     MOV     DPTR,#BT1_STATUS1
000C E0                MOVX    A,@DPTR
000D 54E3              ANL     A,#0E3H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 287
0010 E4                CLR     A
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
0011 120000      R     LCALL   L?0379
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 293
0014 120000      R     LCALL   L?0381
                                           ; SOURCE LINE # 294
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 297
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 303
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 42  

                                           ; SOURCE LINE # 304
0017 120000      R     LCALL   L?0337
                                           ; SOURCE LINE # 305
001A 22                RET     
             ; FUNCTION BAT1_ClrVariables (END)

             ; FUNCTION BAT1_PlugOutClrVariables (BEGIN)
                                           ; SOURCE LINE # 311
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#BAT1_temp_L
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 314
0005 900000      E     MOV     DPTR,#BAT1_temp_H
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 315
0009 900000      E     MOV     DPTR,#BAT1_volt_L
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 316
000D 900000      E     MOV     DPTR,#BAT1_volt_H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 317
0011 900000      E     MOV     DPTR,#BAT1_current_L
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 318
0015 900000      E     MOV     DPTR,#BAT1_current_H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
0019 900000      E     MOV     DPTR,#BAT1_RMcap_L
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 320
001D 900000      E     MOV     DPTR,#BAT1_RMcap_H
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 321
0021 900000      E     MOV     DPTR,#BAT1_FCcap_L
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 322
0025 900000      E     MOV     DPTR,#BAT1_FCcap_H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 323
0029 900000      E     MOV     DPTR,#BAT1_CC_L
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 324
002D 900000      E     MOV     DPTR,#BAT1_CC_H
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 325
0031 900000      E     MOV     DPTR,#BAT1_CV_L
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 326
0035 900000      E     MOV     DPTR,#BAT1_CV_H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 327
0039 900000      E     MOV     DPTR,#BAT1_AC_L
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 328
003D 900000      E     MOV     DPTR,#BAT1_AC_H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 329
0041 900000      E     MOV     DPTR,#BAT1_RSOC
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 331
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 43  

0045 900000      E     MOV     DPTR,#BAT1_ALARM1
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 332
0049 900000      E     MOV     DPTR,#BAT1_ALARM2
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 334
004D 900000      E     MOV     DPTR,#BT1_STATUS2
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 335
0051 900000      E     MOV     DPTR,#BT1_STATUS1
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 336
0055 900000      E     MOV     DPTR,#BT1_STATUS3
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 339
                                           ; SOURCE LINE # 340
0059 120000      R     LCALL   L?0379
                                           ; SOURCE LINE # 341
005C 900000      E     MOV     DPTR,#BAT1_S_Number
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 344
0060 120000      R     LCALL   L?0381
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 345
0064 900000      E     MOV     DPTR,#BAT1_FailCause
                                           ; SOURCE LINE # 347
                                           ; SOURCE LINE # 348
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 351
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
0067 120000      R     LCALL   L?0337
                                           ; SOURCE LINE # 360
006A 22                RET     
             ; FUNCTION BAT1_PlugOutClrVariables (END)

             ; FUNCTION Adapter_PlugOutClrVariables (BEGIN)
                                           ; SOURCE LINE # 362
                                           ; SOURCE LINE # 363
                                           ; SOURCE LINE # 364
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#R_CHARGE_CTRL0
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 365
0007 900000      E     MOV     DPTR,#R_CHARGE_CTRL1
000A F0                MOVX    @DPTR,A
000B A3                INC     DPTR
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 366
000D 900000      E     MOV     DPTR,#R_CHARGE_CTRL2
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 44  

0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 367
0013 900000      E     MOV     DPTR,#R_CHARGE_CURRENT
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 368
0019 900000      E     MOV     DPTR,#R_CHARGE_VOLTAGE
001C F0                MOVX    @DPTR,A
001D A3                INC     DPTR
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 369
001F 900000      E     MOV     DPTR,#R_INPUT_CURRENT
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 370
0025 900000      E     MOV     DPTR,#R_MANUFACTURER_ID
0028 F0                MOVX    @DPTR,A
0029 A3                INC     DPTR
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 371
002B 900000      E     MOV     DPTR,#CHG_STATUS
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 372
002F 900000      E     MOV     DPTR,#TEMP_CHARGE_INPUT
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 373
0035 22                RET     
             ; FUNCTION Adapter_PlugOutClrVariables (END)

             ; FUNCTION PollingBAT1Data (BEGIN)
                                           ; SOURCE LINE # 379
                                           ; SOURCE LINE # 380
                                           ; SOURCE LINE # 381
0000 900000      E     MOV     DPTR,#SMBus1Flag1
0003 E0                MOVX    A,@DPTR
0004 74FF              MOV     A,#0FFH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 382
0007 900000      E     MOV     DPTR,#SMBus1Flag2
000A E0                MOVX    A,@DPTR
000B 447F              ORL     A,#07FH
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 383
000E 900000      E     MOV     DPTR,#SMBus1Flag5
0011 E0                MOVX    A,@DPTR
0012 441E              ORL     A,#01EH
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 384
0015 22                RET     
             ; FUNCTION PollingBAT1Data (END)

             ; FUNCTION BAT1MFGF2Polling (BEGIN)
                                           ; SOURCE LINE # 388
                                           ; SOURCE LINE # 389
                                           ; SOURCE LINE # 390
0000 900000      E     MOV     DPTR,#BAT1_MFGF2H
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 45  

0005 900000      E     MOV     DPTR,#BAT1_MFGF2L
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#EC_OptionalMfgFunction2
000C 120000      R     LCALL   L?0336
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 392
0010 900000      E     MOV     DPTR,#BAT1_MFGF2H
0013 E0                MOVX    A,@DPTR
0014 30E010            JNB     ACC.0,?C0047
0017 900000      E     MOV     DPTR,#BAT1_STATUS
001A E0                MOVX    A,@DPTR
001B 30E009            JNB     ACC.0,?C0047
                                           ; SOURCE LINE # 393
                                           ; SOURCE LINE # 394
001E 900000      E     MOV     DPTR,#BIOS_OEM_battery_health
0021 E0                MOVX    A,@DPTR
0022 4408              ORL     A,#08H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 395
0025 8007              SJMP    ?C0048
0027         ?C0047:
                                           ; SOURCE LINE # 397
                                           ; SOURCE LINE # 398
0027 900000      E     MOV     DPTR,#BIOS_OEM_battery_health
002A E0                MOVX    A,@DPTR
002B 54F7              ANL     A,#0F7H
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 399
002E         ?C0048:
                                           ; SOURCE LINE # 401
002E 900000      E     MOV     DPTR,#temp_guoyong1
0031 E0                MOVX    A,@DPTR
0032 B48807            CJNE    A,#088H,?C0050
                                           ; SOURCE LINE # 402
                                           ; SOURCE LINE # 403
0035 900000      E     MOV     DPTR,#BIOS_OEM_battery_health
0038 E0                MOVX    A,@DPTR
0039 4408              ORL     A,#08H
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 404
                                           ; SOURCE LINE # 406
003C         ?C0050:
003C 22                RET     
             ; FUNCTION BAT1MFGF2Polling (END)

             ; FUNCTION PollingChargerData (BEGIN)
                                           ; SOURCE LINE # 414
                                           ; SOURCE LINE # 415
                                           ; SOURCE LINE # 416
0000 900000      E     MOV     DPTR,#SMBus1Flag4
0003 E0                MOVX    A,@DPTR
0004 447F              ORL     A,#07FH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 417
0007 22                RET     
             ; FUNCTION PollingChargerData (END)

             ; FUNCTION BAT1GoodOrBad (BEGIN)
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 424
                                           ; SOURCE LINE # 425
0000 900000      E     MOV     DPTR,#BAT1_ACCESSL
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 46  

0003 E0                MOVX    A,@DPTR
0004 5403              ANL     A,#03H
0006 6013              JZ      ?C0052
                                           ; SOURCE LINE # 426
                                           ; SOURCE LINE # 427
0008 900000      E     MOV     DPTR,#BAT1_BADCunt
000B E0                MOVX    A,@DPTR
000C 04                INC     A
000D F0                MOVX    @DPTR,A
000E D3                SETB    C
000F 940A              SUBB    A,#0AH
0011 4014              JC      ?C0055
                                           ; SOURCE LINE # 428
                                           ; SOURCE LINE # 429
0013 900000      E     MOV     DPTR,#Bios_Battery_Health_2
0016 E0                MOVX    A,@DPTR
0017 4402              ORL     A,#02H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 430
                                           ; SOURCE LINE # 431
001A 22                RET     
001B         ?C0052:
                                           ; SOURCE LINE # 433
                                           ; SOURCE LINE # 434
001B E4                CLR     A
001C 900000      E     MOV     DPTR,#BAT1_BADCunt
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 435
0020 900000      E     MOV     DPTR,#Bios_Battery_Health_2
0023 E0                MOVX    A,@DPTR
0024 54FD              ANL     A,#0FDH
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 437
0027         ?C0055:
0027 22                RET     
             ; FUNCTION BAT1GoodOrBad (END)

             ; FUNCTION BAT1Protection (BEGIN)
                                           ; SOURCE LINE # 445
                                           ; SOURCE LINE # 446
                                           ; SOURCE LINE # 451
0000 120000      R     LCALL   L?0386
0003 900000      R     MOV     DPTR,#tempTemperature
0006 120000      R     LCALL   L?0341
                                           ; SOURCE LINE # 452
0009 C3                CLR     C
000A 900000      R     MOV     DPTR,#tempTemperature+01H
000D E0                MOVX    A,@DPTR
000E 94AC              SUBB    A,#0ACH
0010 900000      R     MOV     DPTR,#tempTemperature
0013 E0                MOVX    A,@DPTR
0014 940A              SUBB    A,#0AH
0016 400D              JC      ?C0057
0018 D3                SETB    C
0019 A3                INC     DPTR
001A E0                MOVX    A,@DPTR
001B 9404              SUBB    A,#04H
001D 900000      R     MOV     DPTR,#tempTemperature
0020 E0                MOVX    A,@DPTR
0021 940D              SUBB    A,#0DH
0023 4009              JC      ?C0056
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 47  

0025         ?C0057:
                                           ; SOURCE LINE # 453
0025 900000      E     MOV     DPTR,#Oem_BAT1_ALARM
0028 E0                MOVX    A,@DPTR
0029 4410              ORL     A,#010H
002B F0                MOVX    @DPTR,A
002C 8022              SJMP    ?C0058
002E         ?C0056:
                                           ; SOURCE LINE # 454
002E D3                SETB    C
002F 900000      R     MOV     DPTR,#tempTemperature+01H
0032 E0                MOVX    A,@DPTR
0033 94DE              SUBB    A,#0DEH
0035 900000      R     MOV     DPTR,#tempTemperature
0038 E0                MOVX    A,@DPTR
0039 940A              SUBB    A,#0AH
003B 4013              JC      ?C0058
003D A3                INC     DPTR
003E E0                MOVX    A,@DPTR
003F 94D2              SUBB    A,#0D2H
0041 900000      R     MOV     DPTR,#tempTemperature
0044 E0                MOVX    A,@DPTR
0045 940C              SUBB    A,#0CH
0047 5007              JNC     ?C0058
                                           ; SOURCE LINE # 455
0049 900000      E     MOV     DPTR,#Oem_BAT1_ALARM
004C E0                MOVX    A,@DPTR
004D 54EF              ANL     A,#0EFH
004F F0                MOVX    @DPTR,A
0050         ?C0058:
                                           ; SOURCE LINE # 458
0050 900000      E     MOV     DPTR,#BAT1_ALARM2
0053 E0                MOVX    A,@DPTR
0054 20E407            JB      ACC.4,?C0061
0057 900000      E     MOV     DPTR,#Oem_BAT1_ALARM
005A E0                MOVX    A,@DPTR
005B 30E412            JNB     ACC.4,?C0060
005E         ?C0061:
                                           ; SOURCE LINE # 459
                                           ; SOURCE LINE # 460
005E 900000      E     MOV     DPTR,#BAT1_OTCunt
0061 E0                MOVX    A,@DPTR
0062 04                INC     A
0063 F0                MOVX    @DPTR,A
0064 D3                SETB    C
0065 940A              SUBB    A,#0AH
0067 400C              JC      ?C0063
                                           ; SOURCE LINE # 461
                                           ; SOURCE LINE # 462
0069 7F06              MOV     R7,#06H
006B 120000      R     LCALL   _BAT1_SetFail
                                           ; SOURCE LINE # 463
                                           ; SOURCE LINE # 464
006E 8005              SJMP    ?C0063
0070         ?C0060:
                                           ; SOURCE LINE # 466
                                           ; SOURCE LINE # 467
0070 E4                CLR     A
0071 900000      E     MOV     DPTR,#BAT1_OTCunt
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 468
0075         ?C0063:
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 48  

                                           ; SOURCE LINE # 470
0075 900000      E     MOV     DPTR,#BAT1_volt_H
0078 E0                MOVX    A,@DPTR
0079 FE                MOV     R6,A
007A 900000      E     MOV     DPTR,#BAT1_volt_L
007D E0                MOVX    A,@DPTR
007E 900000      R     MOV     DPTR,#voltage
0081 120000      R     LCALL   L?0341
                                           ; SOURCE LINE # 471
0084 900000      E     MOV     DPTR,#BAT1_S_Number
0087 E0                MOVX    A,@DPTR
0088 FF                MOV     R7,A
0089 7E00              MOV     R6,#00H
008B 7C11              MOV     R4,#011H
008D 7D49              MOV     R5,#049H
008F 120000      E     LCALL   ?C?IMUL
0092 D3                SETB    C
0093 900000      R     MOV     DPTR,#voltage+01H
0096 E0                MOVX    A,@DPTR
0097 9F                SUBB    A,R7
0098 900000      R     MOV     DPTR,#voltage
009B E0                MOVX    A,@DPTR
009C 9E                SUBB    A,R6
009D 4010              JC      ?C0064
                                           ; SOURCE LINE # 472
                                           ; SOURCE LINE # 473
009F 900000      E     MOV     DPTR,#BAT1_OVCunt
00A2 E0                MOVX    A,@DPTR
00A3 04                INC     A
00A4 F0                MOVX    @DPTR,A
00A5 D3                SETB    C
00A6 9405              SUBB    A,#05H
00A8 400A              JC      ?C0067
                                           ; SOURCE LINE # 474
                                           ; SOURCE LINE # 475
00AA 7F05              MOV     R7,#05H
00AC 020000      R     LJMP    _BAT1_SetFail
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 477
00AF         ?C0064:
                                           ; SOURCE LINE # 479
                                           ; SOURCE LINE # 480
00AF E4                CLR     A
00B0 900000      E     MOV     DPTR,#BAT1_OVCunt
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 481
                                           ; SOURCE LINE # 482
00B4         ?C0067:
00B4 22                RET     
             ; FUNCTION BAT1Protection (END)

             ; FUNCTION SetBAT1IDTimeOutCNT (BEGIN)
                                           ; SOURCE LINE # 487
                                           ; SOURCE LINE # 488
                                           ; SOURCE LINE # 489
0000 900000      E     MOV     DPTR,#BAT1_ID_TimeOut_CNT
0003 7405              MOV     A,#05H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 490
0006 22                RET     
             ; FUNCTION SetBAT1IDTimeOutCNT (END)

C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 49  

             ; FUNCTION BAT1ID_GetDesignVoltage (BEGIN)
                                           ; SOURCE LINE # 495
                                           ; SOURCE LINE # 496
                                           ; SOURCE LINE # 498
0000 7419              MOV     A,#019H
0002 120000      R     LCALL   L?0351
0005 7D0C              MOV     R5,#0CH
0007 FF                MOV     R7,A
0008 120000      E     LCALL   _bRWSMBus
000B EF                MOV     A,R7
000C 606B              JZ      ?C0069
                                           ; SOURCE LINE # 499
                                           ; SOURCE LINE # 500
000E 900000      E     MOV     DPTR,#ByteTemp02
0011 E0                MOVX    A,@DPTR
0012 FE                MOV     R6,A
0013 900000      E     MOV     DPTR,#ByteTemp01
0016 E0                MOVX    A,@DPTR
0017 900000      R     MOV     DPTR,#DVTemp
001A 120000      R     LCALL   L?0347
                                           ; SOURCE LINE # 501
001D 7418              MOV     A,#018H
001F 120000      R     LCALL   L?0351
0022 7D0C              MOV     R5,#0CH
0024 FF                MOV     R7,A
0025 120000      E     LCALL   _bRWSMBus
0028 EF                MOV     A,R7
0029 6010              JZ      ?C0070
                                           ; SOURCE LINE # 502
                                           ; SOURCE LINE # 503
002B 900000      E     MOV     DPTR,#ByteTemp02
002E E0                MOVX    A,@DPTR
002F FF                MOV     R7,A
0030 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 504
0033 900000      E     MOV     DPTR,#ByteTemp01
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
0038 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 505
003B         ?C0070:
                                           ; SOURCE LINE # 506
003B C3                CLR     C
003C 900000      R     MOV     DPTR,#DVTemp+01H
003F E0                MOVX    A,@DPTR
0040 94D0              SUBB    A,#0D0H
0042 900000      R     MOV     DPTR,#DVTemp
0045 E0                MOVX    A,@DPTR
0046 9420              SUBB    A,#020H
0048 5008              JNC     ?C0071
                                           ; SOURCE LINE # 507
                                           ; SOURCE LINE # 508
004A 900000      E     MOV     DPTR,#BAT1_S_Number
004D 7402              MOV     A,#02H
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 509
0050 801A              SJMP    ?C0072
0052         ?C0071:
                                           ; SOURCE LINE # 510
0052 C3                CLR     C
0053 900000      R     MOV     DPTR,#DVTemp+01H
0056 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 50  

0057 9438              SUBB    A,#038H
0059 900000      R     MOV     DPTR,#DVTemp
005C E0                MOVX    A,@DPTR
005D 9431              SUBB    A,#031H
005F 900000      E     MOV     DPTR,#BAT1_S_Number
0062 5005              JNC     ?C0073
                                           ; SOURCE LINE # 511
                                           ; SOURCE LINE # 512
0064 7403              MOV     A,#03H
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 513
0067 8003              SJMP    ?C0072
0069         ?C0073:
                                           ; SOURCE LINE # 515
                                           ; SOURCE LINE # 516
0069 7404              MOV     A,#04H
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 517
006C         ?C0072:
                                           ; SOURCE LINE # 518
006C 120000      R     LCALL   BAT1IdentifyNextStep
                                           ; SOURCE LINE # 519
006F E4                CLR     A
0070 900000      E     MOV     DPTR,#ByteTemp01
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 520
0074 900000      E     MOV     DPTR,#ByteTemp02
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 521
0078 22                RET     
0079         ?C0069:
                                           ; SOURCE LINE # 523
                                           ; SOURCE LINE # 524
                                           ; SOURCE LINE # 525
0079 120000      R     LCALL   L?0373
007C 7005              JNZ     ?C0077
                                           ; SOURCE LINE # 526
                                           ; SOURCE LINE # 527
007E 7F02              MOV     R7,#02H
0080 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 528
                                           ; SOURCE LINE # 529
                                           ; SOURCE LINE # 530
0083         ?C0077:
0083 22                RET     
             ; FUNCTION BAT1ID_GetDesignVoltage (END)

             ; FUNCTION BAT1ID_CheckBatAuth (BEGIN)
                                           ; SOURCE LINE # 535
                                           ; SOURCE LINE # 536
                                           ; SOURCE LINE # 553
0000 020000      R     LJMP    BAT1IdentifyNextStep
             ; FUNCTION BAT1ID_CheckBatAuth (END)

             ; FUNCTION BAT1ID_PollingFirstData (BEGIN)
                                           ; SOURCE LINE # 565
                                           ; SOURCE LINE # 566
                                           ; SOURCE LINE # 567
0000 900000      E     MOV     DPTR,#BAT1_FirstDataIndex
0003 E0                MOVX    A,@DPTR
0004 C3                CLR     C
0005 940D              SUBB    A,#0DH
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 51  

0007 5056              JNC     ?C0079
                                           ; SOURCE LINE # 568
                                           ; SOURCE LINE # 569
0009 E0                MOVX    A,@DPTR
000A 75F003            MOV     B,#03H
000D A4                MUL     AB
000E 2400        R     ADD     A,#LOW BAT1_FirstDataTable
0010 F582              MOV     DPL,A
0012 E4                CLR     A
0013 3400        R     ADDC    A,#HIGH BAT1_FirstDataTable
0015 F583              MOV     DPH,A
0017 E4                CLR     A
0018 93                MOVC    A,@A+DPTR
0019 FF                MOV     R7,A
001A 900000      E     MOV     DPTR,#BAT1_FirstDataIndex
001D E0                MOVX    A,@DPTR
001E 75F003            MOV     B,#03H
0021 A4                MUL     AB
0022 2400        R     ADD     A,#LOW BAT1_FirstDataTable+01H
0024 F582              MOV     DPL,A
0026 E4                CLR     A
0027 3400        R     ADDC    A,#HIGH BAT1_FirstDataTable+01H
0029 F583              MOV     DPH,A
002B E4                CLR     A
002C 93                MOVC    A,@A+DPTR
002D FD                MOV     R5,A
002E 7401              MOV     A,#01H
0030 93                MOVC    A,@A+DPTR
0031 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+04H
0034 CD                XCH     A,R5
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 ED                MOV     A,R5
0038 F0                MOVX    @DPTR,A
0039 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
003C EF                MOV     A,R7
003D F0                MOVX    @DPTR,A
003E E4                CLR     A
003F 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+06H
0042 F0                MOVX    @DPTR,A
0043 7B16              MOV     R3,#016H
0045 7D0C              MOV     R5,#0CH
0047 FF                MOV     R7,A
0048 120000      E     LCALL   _bRWSMBus
004B EF                MOV     A,R7
004C 6007              JZ      ?C0080
                                           ; SOURCE LINE # 571
                                           ; SOURCE LINE # 572
004E 900000      E     MOV     DPTR,#BAT1_FirstDataIndex
0051 E0                MOVX    A,@DPTR
0052 04                INC     A
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 573
0054 22                RET     
0055         ?C0080:
                                           ; SOURCE LINE # 575
                                           ; SOURCE LINE # 576
                                           ; SOURCE LINE # 577
0055 120000      R     LCALL   L?0373
0058 7008              JNZ     ?C0084
                                           ; SOURCE LINE # 578
                                           ; SOURCE LINE # 579
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 52  

005A 7F02              MOV     R7,#02H
005C 020000      R     LJMP    _SetBAT1CtrlStep
                                           ; SOURCE LINE # 580
                                           ; SOURCE LINE # 581
                                           ; SOURCE LINE # 582
005F         ?C0079:
                                           ; SOURCE LINE # 584
                                           ; SOURCE LINE # 585
005F 120000      R     LCALL   BAT1IdentifyNextStep
                                           ; SOURCE LINE # 586
                                           ; SOURCE LINE # 587
0062         ?C0084:
0062 22                RET     
             ; FUNCTION BAT1ID_PollingFirstData (END)

             ; FUNCTION BAT1ID_InitOK (BEGIN)
                                           ; SOURCE LINE # 592
                                           ; SOURCE LINE # 593
                                           ; SOURCE LINE # 594
0000 900000      E     MOV     DPTR,#BT1_STATUS1
0003 E0                MOVX    A,@DPTR
0004 4402              ORL     A,#02H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 595
0007 900000      E     MOV     DPTR,#POWER_FLAG1
000A E0                MOVX    A,@DPTR
000B 30E004            JNB     ACC.0,?C0085
                                           ; SOURCE LINE # 596
                                           ; SOURCE LINE # 597
000E 7F03              MOV     R7,#03H
                                           ; SOURCE LINE # 598
0010 8002              SJMP    ?C0321
0012         ?C0085:
                                           ; SOURCE LINE # 600
                                           ; SOURCE LINE # 601
0012 7F05              MOV     R7,#05H
0014         ?C0321:
0014 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 602
                                           ; SOURCE LINE # 603
0017         ?C0087:
0017 22                RET     
             ; FUNCTION BAT1ID_InitOK (END)

             ; FUNCTION IdentifyBAT1 (BEGIN)
                                           ; SOURCE LINE # 608
                                           ; SOURCE LINE # 609
                                           ; SOURCE LINE # 610
0000 900000      E     MOV     DPTR,#BAT1_ID_Step
0003 E0                MOVX    A,@DPTR
0004 24FE              ADD     A,#0FEH
0006 6010              JZ      ?C0090
0008 14                DEC     A
0009 6018              JZ      ?C0091
000B 14                DEC     A
000C 6018              JZ      ?C0092
000E 14                DEC     A
000F 6018              JZ      ?C0093
0011 2404              ADD     A,#04H
0013 7017              JNZ     ?C0094
                                           ; SOURCE LINE # 611
                                           ; SOURCE LINE # 612
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 53  

0015         ?C0089:
                                           ; SOURCE LINE # 613
0015 020000      R     LJMP    BAT1ID_GetDesignVoltage
                                           ; SOURCE LINE # 614
                                           ; SOURCE LINE # 616
0018         ?C0090:
                                           ; SOURCE LINE # 617
0018 120000      R     LCALL   BAT1ID_CheckBatAuth
                                           ; SOURCE LINE # 618
001B 900000      E     MOV     DPTR,#BAT1_STATUS
001E E0                MOVX    A,@DPTR
001F 4402              ORL     A,#02H
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 619
0022 22                RET     
                                           ; SOURCE LINE # 621
0023         ?C0091:
                                           ; SOURCE LINE # 622
0023 020000      R     LJMP    BAT1ID_CheckDeviceName
                                           ; SOURCE LINE # 623
                                           ; SOURCE LINE # 625
0026         ?C0092:
                                           ; SOURCE LINE # 626
0026 020000      R     LJMP    BAT1ID_PollingFirstData
                                           ; SOURCE LINE # 627
                                           ; SOURCE LINE # 629
0029         ?C0093:
                                           ; SOURCE LINE # 630
0029 020000      R     LJMP    BAT1ID_InitOK
                                           ; SOURCE LINE # 631
                                           ; SOURCE LINE # 633
002C         ?C0094:
                                           ; SOURCE LINE # 634
002C 900000      E     MOV     DPTR,#BAT1_ID_Step
002F 7401              MOV     A,#01H
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 635
                                           ; SOURCE LINE # 636
                                           ; SOURCE LINE # 637
0032         ?C0095:
0032 22                RET     
             ; FUNCTION IdentifyBAT1 (END)

             ; FUNCTION _SetBAT1CtrlStep (BEGIN)
                                           ; SOURCE LINE # 642
;---- Variable 'ctrlstep' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 643
                                           ; SOURCE LINE # 644
0000 900000      E     MOV     DPTR,#BAT1_CtrlStep
0003 EF                MOV     A,R7
                                           ; SOURCE LINE # 645
0004 120000      R     LCALL   L?0362
                                           ; SOURCE LINE # 647
0007 900000      E     MOV     DPTR,#BAT1_CtrlStep
000A E0                MOVX    A,@DPTR
000B 24FE              ADD     A,#0FEH
000D 601B              JZ      ?C0098
000F 14                DEC     A
0010 6035              JZ      ?C0099
0012 14                DEC     A
0013 6046              JZ      ?C0100
0015 14                DEC     A
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 54  

0016 605D              JZ      ?C0101
0018 24F5              ADD     A,#0F5H
001A 6061              JZ      ?C0102
001C 240F              ADD     A,#0FH
001E 706A              JNZ     ?C0103
                                           ; SOURCE LINE # 648
                                           ; SOURCE LINE # 649
0020         ?C0097:
                                           ; SOURCE LINE # 650
0020 120000      R     LCALL   SetBAT1IDTimeOutCNT
                                           ; SOURCE LINE # 651
0023 900000      E     MOV     DPTR,#BAT1_ID_Step
0026 7401              MOV     A,#01H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 652
0029 22                RET     
                                           ; SOURCE LINE # 654
002A         ?C0098:
                                           ; SOURCE LINE # 656
002A 900000      E     MOV     DPTR,#Oem_BatCtrl_F
002D E0                MOVX    A,@DPTR
002E 54FE              ANL     A,#0FEH
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 659
                                           ; SOURCE LINE # 660
0031 120000      R     LCALL   L?0354
                                           ; SOURCE LINE # 661
                                           ; SOURCE LINE # 662
0034 120000      R     LCALL   L?0387
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 663
0038 900000      E     MOV     DPTR,#BT1_STATUS1
003B E0                MOVX    A,@DPTR
003C 54FD              ANL     A,#0FDH
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 664
003F 900000      E     MOV     DPTR,#BT1_STATUS2
0042 E0                MOVX    A,@DPTR
0043 4402              ORL     A,#02H
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 665
0046 22                RET     
                                           ; SOURCE LINE # 667
0047         ?C0099:
                                           ; SOURCE LINE # 668
                                           ; SOURCE LINE # 669
0047 120000      R     LCALL   L?0354
                                           ; SOURCE LINE # 670
004A 120000      R     LCALL   L?0385
                                           ; SOURCE LINE # 671
004D 900000      E     MOV     DPTR,#PreChrCunt_Min
0050 F0                MOVX    @DPTR,A
0051 A3                INC     DPTR
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 672
0053 900000      E     MOV     DPTR,#BT1_STATUS2
0056 E0                MOVX    A,@DPTR
0057 4404              ORL     A,#04H
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 673
005A 22                RET     
                                           ; SOURCE LINE # 675
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 55  

005B         ?C0100:
                                           ; SOURCE LINE # 676
                                           ; SOURCE LINE # 677
005B 120000      R     LCALL   L?0355
                                           ; SOURCE LINE # 678
005E 900000      E     MOV     DPTR,#NormalChrCunt
0061 F0                MOVX    @DPTR,A
0062 A3                INC     DPTR
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 679
0064 900000      E     MOV     DPTR,#NormalChrCunt_Min
0067 F0                MOVX    @DPTR,A
0068 A3                INC     DPTR
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 680
                                           ; SOURCE LINE # 681
006A 120000      R     LCALL   L?0338
                                           ; SOURCE LINE # 682
006D 900000      E     MOV     DPTR,#BT1_STATUS2
0070 E0                MOVX    A,@DPTR
0071 4408              ORL     A,#08H
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 683
0074 22                RET     
                                           ; SOURCE LINE # 685
0075         ?C0101:
                                           ; SOURCE LINE # 686
                                           ; SOURCE LINE # 687
0075 120000      R     LCALL   L?0355
                                           ; SOURCE LINE # 688
0078 E0                MOVX    A,@DPTR
0079 4401              ORL     A,#01H
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 689
007C 22                RET     
                                           ; SOURCE LINE # 691
007D         ?C0102:
                                           ; SOURCE LINE # 692
007D 900000      E     MOV     DPTR,#BT1_STATUS1
0080 E0                MOVX    A,@DPTR
0081 54E3              ANL     A,#0E3H
0083 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 693
0084 E0                MOVX    A,@DPTR
0085 4408              ORL     A,#08H
                                           ; SOURCE LINE # 694
0087 120000      R     LCALL   L?0356
                                           ; SOURCE LINE # 695
                                           ; SOURCE LINE # 696
                                           ; SOURCE LINE # 697
008A         ?C0103:
008A 22                RET     
             ; FUNCTION _SetBAT1CtrlStep (END)

             ; FUNCTION BAT1IdentifyNextStep (BEGIN)
                                           ; SOURCE LINE # 702
                                           ; SOURCE LINE # 703
                                           ; SOURCE LINE # 704
0000 900000      E     MOV     DPTR,#BAT1_ID_Step
0003 E0                MOVX    A,@DPTR
0004 04                INC     A
0005 F0                MOVX    @DPTR,A
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 56  

                                           ; SOURCE LINE # 705
0006 E0                MOVX    A,@DPTR
0007 B40405            CJNE    A,#04H,?C0104
                                           ; SOURCE LINE # 706
                                           ; SOURCE LINE # 707
000A E4                CLR     A
000B 900000      E     MOV     DPTR,#BAT1_FirstDataIndex
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 708
000F         ?C0104:
                                           ; SOURCE LINE # 709
000F 020000      R     LJMP    SetBAT1IDTimeOutCNT
             ; FUNCTION BAT1IdentifyNextStep (END)

             ; FUNCTION _Hook_BAT1_ChargePinON (BEGIN)
                                           ; SOURCE LINE # 715
0000 900000      R     MOV     DPTR,#on_off
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 716
                                           ; SOURCE LINE # 718
0005 22                RET     
             ; FUNCTION _Hook_BAT1_ChargePinON (END)

             ; FUNCTION BAT1_CheckFullyCharged (BEGIN)
                                           ; SOURCE LINE # 720
                                           ; SOURCE LINE # 721
                                           ; SOURCE LINE # 722
0000 900000      E     MOV     DPTR,#BAT1_CtrlStep
0003 E0                MOVX    A,@DPTR
0004 6403              XRL     A,#03H
0006 6004              JZ      ?C0108
0008 E0                MOVX    A,@DPTR
0009 B40419            CJNE    A,#04H,?C0111
000C         ?C0108:
                                           ; SOURCE LINE # 723
                                           ; SOURCE LINE # 724
000C 900000      E     MOV     DPTR,#BAT1_ALARM1
000F E0                MOVX    A,@DPTR
0010 30E512            JNB     ACC.5,?C0111
                                           ; SOURCE LINE # 725
                                           ; SOURCE LINE # 726
0013 120000      R     LCALL   DisableCharger
0016 BF010C            CJNE    R7,#01H,?C0111
                                           ; SOURCE LINE # 727
                                           ; SOURCE LINE # 728
0019 E4                CLR     A
001A FD                MOV     R5,A
001B 7F22              MOV     R7,#022H
001D 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 729
0020 7F10              MOV     R7,#010H
0022 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 730
                                           ; SOURCE LINE # 731
                                           ; SOURCE LINE # 733
                                           ; SOURCE LINE # 734
0025         ?C0111:
0025 22                RET     
             ; FUNCTION BAT1_CheckFullyCharged (END)

             ; FUNCTION BAT1_CheckFullyDisCharged (BEGIN)
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 57  

                                           ; SOURCE LINE # 736
                                           ; SOURCE LINE # 737
                                           ; SOURCE LINE # 738
0000 900000      E     MOV     DPTR,#BAT1_CtrlStep
0003 E0                MOVX    A,@DPTR
0004 B4050C            CJNE    A,#05H,?C0114
                                           ; SOURCE LINE # 739
                                           ; SOURCE LINE # 740
0007 900000      E     MOV     DPTR,#BAT1_ALARM1
000A E0                MOVX    A,@DPTR
000B 30E405            JNB     ACC.4,?C0114
                                           ; SOURCE LINE # 741
                                           ; SOURCE LINE # 742
000E 7F11              MOV     R7,#011H
0010 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 743
                                           ; SOURCE LINE # 744
                                           ; SOURCE LINE # 745
0013         ?C0114:
0013 22                RET     
             ; FUNCTION BAT1_CheckFullyDisCharged (END)

             ; FUNCTION BAT1_SETPreCharge (BEGIN)
                                           ; SOURCE LINE # 750
                                           ; SOURCE LINE # 751
                                           ; SOURCE LINE # 756
                                           ; SOURCE LINE # 757
                                           ; SOURCE LINE # 760
0000 120000      R     LCALL   L?0365
0003 900000      R     MOV     DPTR,#cctemp
0006 120000      R     LCALL   L?0347
                                           ; SOURCE LINE # 761
0009 120000      R     LCALL   L?0388
000C 900000      R     MOV     DPTR,#cvtemp
000F 120000      R     LCALL   L?0374
                                           ; SOURCE LINE # 762
0012 900000      R     MOV     DPTR,#cctemp
0015 E0                MOVX    A,@DPTR
0016 7002              JNZ     ?C0314
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A         ?C0314:
001A 601B              JZ      ?C0116
001C 900000      R     MOV     DPTR,#cvtemp
001F E0                MOVX    A,@DPTR
0020 7002              JNZ     ?C0315
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024         ?C0315:
0024 6011              JZ      ?C0116
                                           ; SOURCE LINE # 763
                                           ; SOURCE LINE # 764
0026 900000      R     MOV     DPTR,#cctemp
0029 120000      R     LCALL   L?0382
                                           ; SOURCE LINE # 765
002C 900000      R     MOV     DPTR,#cctemp
002F E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 766
                                           ; SOURCE LINE # 767
0030 120000      R     LCALL   L?0343
0033 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_HI
0036 F0                MOVX    @DPTR,A
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 58  

                                           ; SOURCE LINE # 768
0037         ?C0116:
                                           ; SOURCE LINE # 777
                                           ; SOURCE LINE # 778
0037 120000      R     LCALL   L?0339
                                           ; SOURCE LINE # 779
003A 120000      R     LCALL   SetSmartCharger
003D EF                MOV     A,R7
003E 600A              JZ      ?C0117
                                           ; SOURCE LINE # 780
                                           ; SOURCE LINE # 781
                                           ; SOURCE LINE # 782
0040 120000      R     LCALL   L?0363
0043 4013              JC      ?C0121
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 784
0045 7F40              MOV     R7,#040H
0047 020000      R     LJMP    _SetBAT1CtrlStep
                                           ; SOURCE LINE # 785
                                           ; SOURCE LINE # 786
004A         ?C0117:
                                           ; SOURCE LINE # 788
                                           ; SOURCE LINE # 789
004A 7F01              MOV     R7,#01H
004C 120000      R     LCALL   _Hook_BAT1_ChargePinON
                                           ; SOURCE LINE # 790
004F 900000      E     MOV     DPTR,#BT1_STATUS2
0052 E0                MOVX    A,@DPTR
0053 4440              ORL     A,#040H
                                           ; SOURCE LINE # 791
                                           ; SOURCE LINE # 792
0055 120000      R     LCALL   L?0360
                                           ; SOURCE LINE # 793
                                           ; SOURCE LINE # 794
                                           ; SOURCE LINE # 796
                                           ; SOURCE LINE # 798
                                           ; SOURCE LINE # 799
                                           ; SOURCE LINE # 800
                                           ; SOURCE LINE # 801
                                           ; SOURCE LINE # 802
0058         ?C0121:
0058 22                RET     
             ; FUNCTION BAT1_SETPreCharge (END)

             ; FUNCTION BAT1_PreCharge (BEGIN)
                                           ; SOURCE LINE # 807
                                           ; SOURCE LINE # 808
                                           ; SOURCE LINE # 814
0000 120000      R     LCALL   L?0386
0003 900000      R     MOV     DPTR,#tempTemperature
0006 120000      R     LCALL   L?0359
                                           ; SOURCE LINE # 815
0009 C3                CLR     C
000A 900000      R     MOV     DPTR,#tempTemperature+01H
000D E0                MOVX    A,@DPTR
000E 94AC              SUBB    A,#0ACH
0010 900000      R     MOV     DPTR,#tempTemperature
0013 E0                MOVX    A,@DPTR
0014 940A              SUBB    A,#0AH
0016 500F              JNC     ?C0122
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 59  

001A 94A0              SUBB    A,#0A0H
001C 900000      R     MOV     DPTR,#tempTemperature
001F E0                MOVX    A,@DPTR
0020 940C              SUBB    A,#0CH
0022 4003              JC      $ + 5H
0024 020000      R     LJMP    ?C0123
0027         ?C0122:
                                           ; SOURCE LINE # 817
0027 D3                SETB    C
0028 900000      R     MOV     DPTR,#tempTemperature+01H
002B E0                MOVX    A,@DPTR
002C 94DE              SUBB    A,#0DEH
002E 900000      R     MOV     DPTR,#tempTemperature
0031 E0                MOVX    A,@DPTR
0032 940A              SUBB    A,#0AH
0034 4005              JC      ?C0124
0036 E0                MOVX    A,@DPTR
0037 FE                MOV     R6,A
0038 A3                INC     DPTR
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
                                           ; SOURCE LINE # 818
                                           ; SOURCE LINE # 820
003B         ?C0124:
                                           ; SOURCE LINE # 823
003B 900000      E     MOV     DPTR,#POWER_FLAG1
003E E0                MOVX    A,@DPTR
003F 30E063            JNB     ACC.0,?C0126
                                           ; SOURCE LINE # 824
                                           ; SOURCE LINE # 825
0042 900000      E     MOV     DPTR,#BT1_STATUS2
0045 E0                MOVX    A,@DPTR
0046 20E606            JB      ACC.6,?C0127
                                           ; SOURCE LINE # 826
                                           ; SOURCE LINE # 827
0049 120000      R     LCALL   L?0384
                                           ; SOURCE LINE # 828
004C 020000      R     LJMP    BAT1_SETPreCharge
                                           ; SOURCE LINE # 829
004F         ?C0127:
                                           ; SOURCE LINE # 831
                                           ; SOURCE LINE # 832
004F 900000      E     MOV     DPTR,#PreChrCunt
0052 120000      R     LCALL   L?0367
                                           ; SOURCE LINE # 833
0055 900000      E     MOV     DPTR,#PreChrCunt
0058 120000      R     LCALL   L?0348
005B 7020              JNZ     ?C0129
                                           ; SOURCE LINE # 834
                                           ; SOURCE LINE # 835
005D 120000      R     LCALL   BAT1_SETPreCharge
                                           ; SOURCE LINE # 836
0060 120000      R     LCALL   L?0384
                                           ; SOURCE LINE # 837
0063 900000      E     MOV     DPTR,#PreChrCunt_Min
0066 120000      R     LCALL   L?0369
                                           ; SOURCE LINE # 838
0069 D3                SETB    C
006A 900000      E     MOV     DPTR,#PreChrCunt_Min+01H
006D E0                MOVX    A,@DPTR
006E 9478              SUBB    A,#078H
0070 900000      E     MOV     DPTR,#PreChrCunt_Min
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 60  

0073 E0                MOVX    A,@DPTR
0074 9400              SUBB    A,#00H
0076 4032              JC      ?C0123
                                           ; SOURCE LINE # 839
                                           ; SOURCE LINE # 840
0078 7F02              MOV     R7,#02H
007A 020000      R     LJMP    _BAT1_SetFail
                                           ; SOURCE LINE # 841
                                           ; SOURCE LINE # 842
007D         ?C0129:
                                           ; SOURCE LINE # 843
007D 900000      E     MOV     DPTR,#PreChrCunt
0080 7C02              MOV     R4,#02H
0082 7D58              MOV     R5,#058H
0084 120000      R     LCALL   L?0350
0087 7021              JNZ     ?C0123
                                           ; SOURCE LINE # 844
                                           ; SOURCE LINE # 845
0089 120000      R     LCALL   L?0365
008C 900000      R     MOV     DPTR,#cctemp
008F 120000      R     LCALL   L?0359
                                           ; SOURCE LINE # 846
0092 D3                SETB    C
0093 900000      R     MOV     DPTR,#cctemp+01H
0096 E0                MOVX    A,@DPTR
0097 9400              SUBB    A,#00H
0099 900000      R     MOV     DPTR,#cctemp
009C E0                MOVX    A,@DPTR
009D 9401              SUBB    A,#01H
009F 4009              JC      ?C0123
                                           ; SOURCE LINE # 847
                                           ; SOURCE LINE # 848
00A1 7F04              MOV     R7,#04H
                                           ; SOURCE LINE # 849
                                           ; SOURCE LINE # 850
                                           ; SOURCE LINE # 851
                                           ; SOURCE LINE # 852
00A3 8002              SJMP    ?C0322
00A5         ?C0126:
                                           ; SOURCE LINE # 854
                                           ; SOURCE LINE # 855
00A5 7F05              MOV     R7,#05H
00A7         ?C0322:
00A7 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 856
                                           ; SOURCE LINE # 857
00AA         ?C0123:
00AA 22                RET     
             ; FUNCTION BAT1_PreCharge (END)

             ; FUNCTION BAT1_SETNormalCharge (BEGIN)
                                           ; SOURCE LINE # 862
                                           ; SOURCE LINE # 863
                                           ; SOURCE LINE # 868
                                           ; SOURCE LINE # 869
                                           ; SOURCE LINE # 872
0000 120000      R     LCALL   L?0334
0003 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 873
0004 120000      R     LCALL   L?0366
0007 900000      R     MOV     DPTR,#cctemp
000A 120000      R     LCALL   L?0374
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 61  

                                           ; SOURCE LINE # 874
000D 120000      R     LCALL   L?0388
0010 2400              ADD     A,#00H
0012 FF                MOV     R7,A
0013 EC                MOV     A,R4
0014 3E                ADDC    A,R6
0015 900000      R     MOV     DPTR,#cvtemp
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 875
001C 900000      R     MOV     DPTR,#cctemp
001F E0                MOVX    A,@DPTR
0020 7002              JNZ     ?C0316
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024         ?C0316:
0024 601B              JZ      ?C0136
0026 900000      R     MOV     DPTR,#cvtemp
0029 E0                MOVX    A,@DPTR
002A 7002              JNZ     ?C0317
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E         ?C0317:
002E 6011              JZ      ?C0136
                                           ; SOURCE LINE # 876
                                           ; SOURCE LINE # 877
0030 900000      R     MOV     DPTR,#cctemp
0033 120000      R     LCALL   L?0382
                                           ; SOURCE LINE # 878
0036 900000      R     MOV     DPTR,#cctemp
0039 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 879
                                           ; SOURCE LINE # 880
003A 120000      R     LCALL   L?0343
003D 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_HI
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 881
0041         ?C0136:
                                           ; SOURCE LINE # 893
                                           ; SOURCE LINE # 894
0041 120000      R     LCALL   L?0339
                                           ; SOURCE LINE # 896
0044 900000      E     MOV     DPTR,#SystemWatts_CHRStatus
0047 E0                MOVX    A,@DPTR
0048 30E20E            JNB     ACC.2,?C0137
                                           ; SOURCE LINE # 897
                                           ; SOURCE LINE # 898
004B 900000      E     MOV     DPTR,#Pre_SystemWatts_BatChar_C
004E 120000      R     LCALL   L?0383
                                           ; SOURCE LINE # 899
0051 900000      E     MOV     DPTR,#Pre_SystemWatts_BatChar_C
0054 E0                MOVX    A,@DPTR
0055 900000      E     MOV     DPTR,#CHARGE_CURRENT_HI
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 900
0059         ?C0137:
                                           ; SOURCE LINE # 902
0059 120000      R     LCALL   SetSmartCharger
005C EF                MOV     A,R7
005D 600A              JZ      ?C0138
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 62  

                                           ; SOURCE LINE # 903
                                           ; SOURCE LINE # 904
                                           ; SOURCE LINE # 905
005F 120000      R     LCALL   L?0363
0062 4013              JC      ?C0142
                                           ; SOURCE LINE # 906
                                           ; SOURCE LINE # 907
0064 7F40              MOV     R7,#040H
0066 020000      R     LJMP    _SetBAT1CtrlStep
                                           ; SOURCE LINE # 908
                                           ; SOURCE LINE # 909
0069         ?C0138:
                                           ; SOURCE LINE # 911
                                           ; SOURCE LINE # 912
0069 7F01              MOV     R7,#01H
006B 120000      R     LCALL   _Hook_BAT1_ChargePinON
                                           ; SOURCE LINE # 913
006E 900000      E     MOV     DPTR,#BT1_STATUS2
0071 E0                MOVX    A,@DPTR
0072 4480              ORL     A,#080H
                                           ; SOURCE LINE # 914
                                           ; SOURCE LINE # 915
0074 120000      R     LCALL   L?0360
                                           ; SOURCE LINE # 916
                                           ; SOURCE LINE # 917
                                           ; SOURCE LINE # 919
                                           ; SOURCE LINE # 921
                                           ; SOURCE LINE # 922
                                           ; SOURCE LINE # 923
                                           ; SOURCE LINE # 924
                                           ; SOURCE LINE # 925
0077         ?C0142:
0077 22                RET     
             ; FUNCTION BAT1_SETNormalCharge (END)

             ; FUNCTION BAT1_NormalCharge (BEGIN)
                                           ; SOURCE LINE # 930
                                           ; SOURCE LINE # 931
                                           ; SOURCE LINE # 932
0000 900000      E     MOV     DPTR,#POWER_FLAG1
0003 E0                MOVX    A,@DPTR
0004 30E064            JNB     ACC.0,?C0143
                                           ; SOURCE LINE # 933
                                           ; SOURCE LINE # 934
0007 900000      E     MOV     DPTR,#BT1_STATUS2
000A E0                MOVX    A,@DPTR
000B 20E70C            JB      ACC.7,?C0144
                                           ; SOURCE LINE # 935
                                           ; SOURCE LINE # 936
000E 120000      R     LCALL   L?0334
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 937
0012 E4                CLR     A
0013 900000      E     MOV     DPTR,#NormalChrCunt
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
                                           ; SOURCE LINE # 938
                                           ; SOURCE LINE # 939
0018 8020              SJMP    ?C0323
001A         ?C0144:
                                           ; SOURCE LINE # 941
                                           ; SOURCE LINE # 942
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 63  

001A 900000      E     MOV     DPTR,#NormalChrCunt
001D 120000      R     LCALL   L?0367
                                           ; SOURCE LINE # 943
0020 120000      R     LCALL   L?0366
0023 7C00              MOV     R4,#00H
0025 2400              ADD     A,#00H
0027 FF                MOV     R7,A
0028 EC                MOV     A,R4
0029 3E                ADDC    A,R6
002A FE                MOV     R6,A
002B 900000      E     MOV     DPTR,#CHARGE_CURRENT_BK
002E E0                MOVX    A,@DPTR
002F 6E                XRL     A,R6
0030 7003              JNZ     ?C0318
0032 A3                INC     DPTR
0033 E0                MOVX    A,@DPTR
0034 6F                XRL     A,R7
0035         ?C0318:
0035 6007              JZ      ?C0146
                                           ; SOURCE LINE # 944
                                           ; SOURCE LINE # 945
0037 120000      R     LCALL   L?0335
003A         ?C0323:
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 946
003B 020000      R     LJMP    BAT1_SETNormalCharge
                                           ; SOURCE LINE # 947
003E         ?C0146:
                                           ; SOURCE LINE # 949
                                           ; SOURCE LINE # 950
003E 900000      E     MOV     DPTR,#NormalChrCunt
0041 120000      R     LCALL   L?0348
0044 702A              JNZ     ?C0151
                                           ; SOURCE LINE # 951
                                           ; SOURCE LINE # 952
0046 900000      E     MOV     DPTR,#NormalChrCunt_Min
0049 120000      R     LCALL   L?0369
                                           ; SOURCE LINE # 953
004C D3                SETB    C
004D 900000      E     MOV     DPTR,#NormalChrCunt_Min+01H
0050 E0                MOVX    A,@DPTR
0051 94E0              SUBB    A,#0E0H
0053 900000      E     MOV     DPTR,#NormalChrCunt_Min
0056 E0                MOVX    A,@DPTR
0057 9401              SUBB    A,#01H
0059 4005              JC      ?C0149
                                           ; SOURCE LINE # 954
                                           ; SOURCE LINE # 955
005B 7F03              MOV     R7,#03H
005D 120000      R     LCALL   _BAT1_SetFail
                                           ; SOURCE LINE # 956
0060         ?C0149:
                                           ; SOURCE LINE # 957
0060 120000      R     LCALL   BAT1_SETNormalCharge
                                           ; SOURCE LINE # 958
0063 E4                CLR     A
0064 900000      E     MOV     DPTR,#NormalChrCunt
0067 F0                MOVX    @DPTR,A
0068 A3                INC     DPTR
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 959
                                           ; SOURCE LINE # 960
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 64  

                                           ; SOURCE LINE # 961
                                           ; SOURCE LINE # 962
006A 22                RET     
006B         ?C0143:
                                           ; SOURCE LINE # 964
                                           ; SOURCE LINE # 965
006B 7F05              MOV     R7,#05H
006D 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 966
                                           ; SOURCE LINE # 967
0070         ?C0151:
0070 22                RET     
             ; FUNCTION BAT1_NormalCharge (END)

             ; FUNCTION BAT1_SETWakeUpCharge (BEGIN)
                                           ; SOURCE LINE # 972
                                           ; SOURCE LINE # 973
                                           ; SOURCE LINE # 974
                                           ; SOURCE LINE # 975
                                           ; SOURCE LINE # 976
0000 900000      E     MOV     DPTR,#CHARGE_CURRENT_LO
0003 7480              MOV     A,#080H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 977
0006 E4                CLR     A
0007 900000      E     MOV     DPTR,#CHARGE_CURRENT_HI
                                           ; SOURCE LINE # 978
                                           ; SOURCE LINE # 979
000A 120000      R     LCALL   L?0358
                                           ; SOURCE LINE # 980
                                           ; SOURCE LINE # 981
000D 120000      R     LCALL   L?0340
                                           ; SOURCE LINE # 983
0010 120000      R     LCALL   SetSmartCharger
0013 EF                MOV     A,R7
0014 600A              JZ      ?C0153
                                           ; SOURCE LINE # 984
                                           ; SOURCE LINE # 985
                                           ; SOURCE LINE # 986
0016 120000      R     LCALL   L?0364
0019 4013              JC      ?C0157
                                           ; SOURCE LINE # 987
                                           ; SOURCE LINE # 988
001B 7F40              MOV     R7,#040H
001D 020000      R     LJMP    _SetBAT1CtrlStep
                                           ; SOURCE LINE # 989
                                           ; SOURCE LINE # 990
0020         ?C0153:
                                           ; SOURCE LINE # 992
                                           ; SOURCE LINE # 993
0020 7F01              MOV     R7,#01H
0022 120000      R     LCALL   _Hook_BAT1_ChargePinON
                                           ; SOURCE LINE # 994
0025 900000      E     MOV     DPTR,#BT1_STATUS2
0028 E0                MOVX    A,@DPTR
0029 4420              ORL     A,#020H
                                           ; SOURCE LINE # 995
                                           ; SOURCE LINE # 996
002B 120000      R     LCALL   L?0361
                                           ; SOURCE LINE # 997
                                           ; SOURCE LINE # 998
                                           ; SOURCE LINE # 1000
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 65  

                                           ; SOURCE LINE # 1002
                                           ; SOURCE LINE # 1003
                                           ; SOURCE LINE # 1004
                                           ; SOURCE LINE # 1005
                                           ; SOURCE LINE # 1006
002E         ?C0157:
002E 22                RET     
             ; FUNCTION BAT1_SETWakeUpCharge (END)

             ; FUNCTION BAT1WakeUpCharge (BEGIN)
                                           ; SOURCE LINE # 1011
                                           ; SOURCE LINE # 1012
                                           ; SOURCE LINE # 1013
0000 900000      E     MOV     DPTR,#POWER_FLAG1
0003 E0                MOVX    A,@DPTR
0004 30E05F            JNB     ACC.0,?C0158
                                           ; SOURCE LINE # 1014
                                           ; SOURCE LINE # 1015
0007 900000      E     MOV     DPTR,#BT1_STATUS2
000A E0                MOVX    A,@DPTR
000B 20E503            JB      ACC.5,?C0159
                                           ; SOURCE LINE # 1016
                                           ; SOURCE LINE # 1017
000E 020000      R     LJMP    BAT1_SETWakeUpCharge
                                           ; SOURCE LINE # 1018
0011         ?C0159:
                                           ; SOURCE LINE # 1020
                                           ; SOURCE LINE # 1021
0011 900000      E     MOV     DPTR,#WakeUpChrCunt
0014 120000      R     LCALL   L?0368
                                           ; SOURCE LINE # 1022
0017 900000      E     MOV     DPTR,#WakeUpChrCunt
001A 120000      R     LCALL   L?0349
001D 7014              JNZ     ?C0161
                                           ; SOURCE LINE # 1023
                                           ; SOURCE LINE # 1024
001F 120000      R     LCALL   BAT1_SETWakeUpCharge
                                           ; SOURCE LINE # 1025
0022 E4                CLR     A
                                           ; SOURCE LINE # 1026
0023 120000      R     LCALL   L?0387
0026 E0                MOVX    A,@DPTR
0027 04                INC     A
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1027
0029 E0                MOVX    A,@DPTR
002A D3                SETB    C
002B 943C              SUBB    A,#03CH
002D 403C              JC      ?C0167
                                           ; SOURCE LINE # 1028
                                           ; SOURCE LINE # 1029
002F 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 1030
                                           ; SOURCE LINE # 1031
0031 8035              SJMP    ?C0324
0033         ?C0161:
                                           ; SOURCE LINE # 1032
0033 900000      E     MOV     DPTR,#WakeUpChrCunt
0036 E0                MOVX    A,@DPTR
0037 FE                MOV     R6,A
0038 A3                INC     DPTR
0039 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 66  

003A FF                MOV     R7,A
003B 7C02              MOV     R4,#02H
003D 7D58              MOV     R5,#058H
003F 120000      E     LCALL   ?C?UIDIV
0042 ED                MOV     A,R5
0043 4C                ORL     A,R4
0044 7025              JNZ     ?C0167
                                           ; SOURCE LINE # 1033
                                           ; SOURCE LINE # 1034
0046 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
0049 740F              MOV     A,#0FH
004B F0                MOVX    @DPTR,A
004C 7E00        E     MOV     R6,#HIGH BAT1_RMcap_L
004E A3                INC     DPTR
004F 7400        E     MOV     A,#HIGH BAT1_RMcap_L
0051 F0                MOVX    @DPTR,A
0052 A3                INC     DPTR
0053 7400        E     MOV     A,#LOW BAT1_RMcap_L
0055 120000      R     LCALL   L?0353
0058 7D0C              MOV     R5,#0CH
005A FF                MOV     R7,A
005B 120000      E     LCALL   _bRWSMBus
005E EF                MOV     A,R7
005F 600A              JZ      ?C0167
                                           ; SOURCE LINE # 1035
                                           ; SOURCE LINE # 1036
0061 7F01              MOV     R7,#01H
0063 020000      R     LJMP    _SetBAT1CtrlStep
                                           ; SOURCE LINE # 1037
                                           ; SOURCE LINE # 1038
                                           ; SOURCE LINE # 1039
                                           ; SOURCE LINE # 1040
0066         ?C0158:
                                           ; SOURCE LINE # 1042
                                           ; SOURCE LINE # 1043
0066 7F04              MOV     R7,#04H
0068         ?C0324:
0068 120000      R     LCALL   _BAT1_SetFail
                                           ; SOURCE LINE # 1044
                                           ; SOURCE LINE # 1045
006B         ?C0167:
006B 22                RET     
             ; FUNCTION BAT1WakeUpCharge (END)

             ; FUNCTION BAT1DisCharge (BEGIN)
                                           ; SOURCE LINE # 1050
                                           ; SOURCE LINE # 1051
                                           ; SOURCE LINE # 1052
0000 900000      E     MOV     DPTR,#POWER_FLAG1
0003 E0                MOVX    A,@DPTR
0004 30E017            JNB     ACC.0,?C0168
                                           ; SOURCE LINE # 1053
                                           ; SOURCE LINE # 1054
0007 900000      E     MOV     DPTR,#BT1_STATUS3
000A E0                MOVX    A,@DPTR
000B 30E10B            JNB     ACC.1,?C0169
                                           ; SOURCE LINE # 1055
                                           ; SOURCE LINE # 1056
000E 900000      E     MOV     DPTR,#BT1_STATUS2
0011 E0                MOVX    A,@DPTR
0012 20E418            JB      ACC.4,?C0174
                                           ; SOURCE LINE # 1057
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 67  

                                           ; SOURCE LINE # 1058
0015 7F50              MOV     R7,#050H
                                           ; SOURCE LINE # 1059
                                           ; SOURCE LINE # 1060
                                           ; SOURCE LINE # 1061
0017 800E              SJMP    ?C0325
0019         ?C0169:
                                           ; SOURCE LINE # 1063
                                           ; SOURCE LINE # 1064
0019 7F03              MOV     R7,#03H
001B 020000      R     LJMP    _SetBAT1CtrlStep
                                           ; SOURCE LINE # 1065
                                           ; SOURCE LINE # 1066
001E         ?C0168:
                                           ; SOURCE LINE # 1068
                                           ; SOURCE LINE # 1069
001E 900000      E     MOV     DPTR,#BT1_STATUS2
0021 E0                MOVX    A,@DPTR
0022 20E408            JB      ACC.4,?C0174
                                           ; SOURCE LINE # 1070
                                           ; SOURCE LINE # 1071
0025 7F51              MOV     R7,#051H
0027         ?C0325:
0027 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1072
002A 120000      R     LCALL   DisableCharger
                                           ; SOURCE LINE # 1073
                                           ; SOURCE LINE # 1074
                                           ; SOURCE LINE # 1075
002D         ?C0174:
002D 22                RET     
             ; FUNCTION BAT1DisCharge (END)

             ; FUNCTION BAT1FullyCharged (BEGIN)
                                           ; SOURCE LINE # 1080
                                           ; SOURCE LINE # 1081
                                           ; SOURCE LINE # 1082
0000 900000      E     MOV     DPTR,#POWER_FLAG1
0003 E0                MOVX    A,@DPTR
0004 20E004            JB      ACC.0,?C0175
                                           ; SOURCE LINE # 1083
                                           ; SOURCE LINE # 1084
0007 7F05              MOV     R7,#05H
                                           ; SOURCE LINE # 1085
0009 8009              SJMP    ?C0326
000B         ?C0175:
                                           ; SOURCE LINE # 1086
000B 900000      E     MOV     DPTR,#BAT1_ALARM1
000E E0                MOVX    A,@DPTR
000F 20E505            JB      ACC.5,?C0178
                                           ; SOURCE LINE # 1087
                                           ; SOURCE LINE # 1088
0012 7F04              MOV     R7,#04H
0014         ?C0326:
0014 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 1089
                                           ; SOURCE LINE # 1090
0017         ?C0178:
0017 22                RET     
             ; FUNCTION BAT1FullyCharged (END)

             ; FUNCTION BAT1FullyDisharged (BEGIN)
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 68  

                                           ; SOURCE LINE # 1095
                                           ; SOURCE LINE # 1096
                                           ; SOURCE LINE # 1097
0000 900000      E     MOV     DPTR,#POWER_FLAG1
0003 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 1098
                                           ; SOURCE LINE # 1100
                                           ; SOURCE LINE # 1102
                                           ; SOURCE LINE # 1104
                                           ; SOURCE LINE # 1105
0004         ?C0181:
0004 22                RET     
             ; FUNCTION BAT1FullyDisharged (END)

             ; FUNCTION BAT1CheckDisChargeLow (BEGIN)
                                           ; SOURCE LINE # 1110
                                           ; SOURCE LINE # 1111
                                           ; SOURCE LINE # 1112
0000 900000      E     MOV     DPTR,#BT1_STATUS2
0003 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 1113
                                           ; SOURCE LINE # 1115
                                           ; SOURCE LINE # 1116
0004         ?C0183:
0004 22                RET     
             ; FUNCTION BAT1CheckDisChargeLow (END)

             ; FUNCTION BAT1SetFail (BEGIN)
                                           ; SOURCE LINE # 1121
                                           ; SOURCE LINE # 1122
                                           ; SOURCE LINE # 1123
0000 120000      R     LCALL   DisableCharger
0003 BF0108            CJNE    R7,#01H,?C0185
                                           ; SOURCE LINE # 1124
                                           ; SOURCE LINE # 1125
0006 120000      R     LCALL   BAT1_ClrVariables
                                           ; SOURCE LINE # 1126
0009 7F21              MOV     R7,#021H
000B 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 1127
                                           ; SOURCE LINE # 1128
000E         ?C0185:
000E 22                RET     
             ; FUNCTION BAT1SetFail (END)

             ; FUNCTION BAT1ForceCharge (BEGIN)
                                           ; SOURCE LINE # 1133
                                           ; SOURCE LINE # 1134
                                           ; SOURCE LINE # 1135
0000 900000      E     MOV     DPTR,#BT1_STATUS3
0003 E0                MOVX    A,@DPTR
0004 4401              ORL     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1136
0007 22                RET     
             ; FUNCTION BAT1ForceCharge (END)

             ; FUNCTION BAT1ForceDischarge (BEGIN)
                                           ; SOURCE LINE # 1141
                                           ; SOURCE LINE # 1142
                                           ; SOURCE LINE # 1143
0000 900000      E     MOV     DPTR,#BT1_STATUS3
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 69  

0003 E0                MOVX    A,@DPTR
0004 4402              ORL     A,#02H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1144
0007 22                RET     
             ; FUNCTION BAT1ForceDischarge (END)

             ; FUNCTION BAT1AutoLearning (BEGIN)
                                           ; SOURCE LINE # 1149
                                           ; SOURCE LINE # 1150
                                           ; SOURCE LINE # 1152
0000 22                RET     
             ; FUNCTION BAT1AutoLearning (END)

             ; FUNCTION BAT1ForceStep (BEGIN)
                                           ; SOURCE LINE # 1157
                                           ; SOURCE LINE # 1158
                                           ; SOURCE LINE # 1159
0000 900000      E     MOV     DPTR,#BT1_STATUS3
0003 E0                MOVX    A,@DPTR
0004 30E012            JNB     ACC.0,?C0189
                                           ; SOURCE LINE # 1160
                                           ; SOURCE LINE # 1161
0007 900000      E     MOV     DPTR,#POWER_FLAG1
000A E0                MOVX    A,@DPTR
000B 30E029            JNB     ACC.0,?C0198
                                           ; SOURCE LINE # 1162
                                           ; SOURCE LINE # 1163
000E 900000      E     MOV     DPTR,#BT1_STATUS1
0011 E0                MOVX    A,@DPTR
0012 30E422            JNB     ACC.4,?C0198
                                           ; SOURCE LINE # 1164
                                           ; SOURCE LINE # 1165
0015 7F03              MOV     R7,#03H
                                           ; SOURCE LINE # 1166
                                           ; SOURCE LINE # 1167
                                           ; SOURCE LINE # 1168
0017 8017              SJMP    ?C0327
0019         ?C0189:
                                           ; SOURCE LINE # 1169
0019 900000      E     MOV     DPTR,#BT1_STATUS3
001C E0                MOVX    A,@DPTR
001D 30E113            JNB     ACC.1,?C0193
                                           ; SOURCE LINE # 1170
                                           ; SOURCE LINE # 1171
0020 900000      E     MOV     DPTR,#POWER_FLAG1
0023 E0                MOVX    A,@DPTR
0024 30E010            JNB     ACC.0,?C0198
                                           ; SOURCE LINE # 1172
                                           ; SOURCE LINE # 1173
0027 900000      E     MOV     DPTR,#BT1_STATUS1
002A E0                MOVX    A,@DPTR
002B 30E209            JNB     ACC.2,?C0198
                                           ; SOURCE LINE # 1174
                                           ; SOURCE LINE # 1175
002E 7F05              MOV     R7,#05H
0030         ?C0327:
0030 020000      R     LJMP    _SetBAT1CtrlStep
                                           ; SOURCE LINE # 1176
                                           ; SOURCE LINE # 1177
                                           ; SOURCE LINE # 1178
0033         ?C0193:
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 70  

                                           ; SOURCE LINE # 1179
0033 900000      E     MOV     DPTR,#BT1_STATUS3
0036 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 1180
                                           ; SOURCE LINE # 1182
                                           ; SOURCE LINE # 1183
0037         ?C0198:
0037 22                RET     
             ; FUNCTION BAT1ForceStep (END)

             ; FUNCTION BAT1FWUpdata (BEGIN)
                                           ; SOURCE LINE # 1186
                                           ; SOURCE LINE # 1187
                                           ; SOURCE LINE # 1188
0000 900000      E     MOV     DPTR,#SYS_MISC1
0003 E0                MOVX    A,@DPTR
0004 20E21D            JB      ACC.2,?C0202
                                           ; SOURCE LINE # 1189
                                           ; SOURCE LINE # 1190
0007 120000      R     LCALL   DisableCharger
000A EF                MOV     A,R7
000B 700B              JNZ     ?C0200
                                           ; SOURCE LINE # 1191
                                           ; SOURCE LINE # 1192
000D 120000      R     LCALL   DisableCharger
                                           ; SOURCE LINE # 1193
0010 900000      E     MOV     DPTR,#SYS_MISC1
0013 E0                MOVX    A,@DPTR
0014 54FB              ANL     A,#0FBH
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1194
0017 22                RET     
0018         ?C0200:
                                           ; SOURCE LINE # 1196
                                           ; SOURCE LINE # 1197
0018 900000      E     MOV     DPTR,#SYS_MISC1
001B E0                MOVX    A,@DPTR
001C 4404              ORL     A,#04H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1198
001F 7F07              MOV     R7,#07H
0021 120000      E     LCALL   _ChangePLLFrequency
                                           ; SOURCE LINE # 1199
                                           ; SOURCE LINE # 1200
                                           ; SOURCE LINE # 1201
0024         ?C0202:
0024 22                RET     
             ; FUNCTION BAT1FWUpdata (END)

             ; FUNCTION Battey1ControlCenter (BEGIN)
                                           ; SOURCE LINE # 1208
                                           ; SOURCE LINE # 1209
                                           ; SOURCE LINE # 1210
0000 900000      E     MOV     DPTR,#BT1_STATUS1
0003 E0                MOVX    A,@DPTR
0004 20E008            JB      ACC.0,?C0203
                                           ; SOURCE LINE # 1211
                                           ; SOURCE LINE # 1212
0007 900000      E     MOV     DPTR,#BAT1_STATUS
000A E0                MOVX    A,@DPTR
000B 54FD              ANL     A,#0FDH
000D F0                MOVX    @DPTR,A
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 71  

000E 22                RET     
                                           ; SOURCE LINE # 1214
000F         ?C0203:
                                           ; SOURCE LINE # 1216
000F 900000      E     MOV     DPTR,#BAT1_1SecTimer
0012 E0                MOVX    A,@DPTR
0013 04                INC     A
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1217
0015 E0                MOVX    A,@DPTR
0016 D3                SETB    C
0017 9496              SUBB    A,#096H
0019 4015              JC      ?C0205
                                           ; SOURCE LINE # 1218
                                           ; SOURCE LINE # 1219
001B E4                CLR     A
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1222
001D 120000      R     LCALL   BAT1GoodOrBad
                                           ; SOURCE LINE # 1223
0020 120000      R     LCALL   BAT1MFGF2Polling
                                           ; SOURCE LINE # 1226
0023 120000      R     LCALL   PollingBAT1Data
                                           ; SOURCE LINE # 1227
0026 900000      E     MOV     DPTR,#BT1_STATUS1
0029 E0                MOVX    A,@DPTR
002A 30E103            JNB     ACC.1,?C0205
                                           ; SOURCE LINE # 1228
                                           ; SOURCE LINE # 1229
002D 120000      R     LCALL   BAT1Protection
                                           ; SOURCE LINE # 1230
                                           ; SOURCE LINE # 1231
0030         ?C0205:
                                           ; SOURCE LINE # 1233
0030 900000      E     MOV     DPTR,#BT1_STATUS1
0033 E0                MOVX    A,@DPTR
0034 30E112            JNB     ACC.1,?C0207
                                           ; SOURCE LINE # 1234
                                           ; SOURCE LINE # 1235
0037 120000      R     LCALL   BAT1ForceStep
                                           ; SOURCE LINE # 1237
003A 900000      E     MOV     DPTR,#POWER_FLAG1
003D E0                MOVX    A,@DPTR
003E 30E005            JNB     ACC.0,?C0208
                                           ; SOURCE LINE # 1238
                                           ; SOURCE LINE # 1239
0041 120000      R     LCALL   BAT1_CheckFullyCharged
                                           ; SOURCE LINE # 1240
0044 8003              SJMP    ?C0207
0046         ?C0208:
                                           ; SOURCE LINE # 1242
                                           ; SOURCE LINE # 1243
0046 120000      R     LCALL   BAT1_CheckFullyDisCharged
                                           ; SOURCE LINE # 1244
                                           ; SOURCE LINE # 1245
0049         ?C0207:
                                           ; SOURCE LINE # 1247
0049 900000      E     MOV     DPTR,#BAT1_CtrlStep
004C E0                MOVX    A,@DPTR
004D 120000      E     LCALL   ?C?CCASE
0050 0000        R     DW      ?C0211
0052 01                DB      01H
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 72  

0053 0000        R     DW      ?C0212
0055 02                DB      02H
0056 0000        R     DW      ?C0213
0058 03                DB      03H
0059 0000        R     DW      ?C0214
005B 04                DB      04H
005C 0000        R     DW      ?C0215
005E 05                DB      05H
005F 0000        R     DW      ?C0216
0061 10                DB      010H
0062 0000        R     DW      ?C0217
0064 11                DB      011H
0065 0000        R     DW      ?C0218
0067 20                DB      020H
0068 0000        R     DW      ?C0220
006A 30                DB      030H
006B 0000        R     DW      ?C0221
006D 31                DB      031H
006E 0000        R     DW      ?C0222
0070 32                DB      032H
0071 0000              DW      00H
0073 0000        R     DW      ?C0204
                                           ; SOURCE LINE # 1248
                                           ; SOURCE LINE # 1249
0075         ?C0211:
                                           ; SOURCE LINE # 1250
0075 020000      R     LJMP    IdentifyBAT1
                                           ; SOURCE LINE # 1251
                                           ; SOURCE LINE # 1253
0078         ?C0212:
                                           ; SOURCE LINE # 1254
0078 020000      R     LJMP    BAT1WakeUpCharge
                                           ; SOURCE LINE # 1255
                                           ; SOURCE LINE # 1257
007B         ?C0213:
                                           ; SOURCE LINE # 1258
007B 020000      R     LJMP    BAT1_PreCharge
                                           ; SOURCE LINE # 1259
                                           ; SOURCE LINE # 1261
007E         ?C0214:
                                           ; SOURCE LINE # 1262
007E 020000      R     LJMP    BAT1_NormalCharge
                                           ; SOURCE LINE # 1263
                                           ; SOURCE LINE # 1265
0081         ?C0215:
                                           ; SOURCE LINE # 1266
0081 120000      R     LCALL   BAT1DisCharge
                                           ; SOURCE LINE # 1267
0084 020000      R     LJMP    BAT1CheckDisChargeLow
                                           ; SOURCE LINE # 1268
                                           ; SOURCE LINE # 1270
0087         ?C0216:
                                           ; SOURCE LINE # 1271
0087 020000      R     LJMP    BAT1FullyCharged
                                           ; SOURCE LINE # 1272
                                           ; SOURCE LINE # 1274
008A         ?C0217:
                                           ; SOURCE LINE # 1275
008A 020000      R     LJMP    BAT1FullyDisharged
                                           ; SOURCE LINE # 1276
                                           ; SOURCE LINE # 1278
008D         ?C0218:
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 73  

                                           ; SOURCE LINE # 1279
008D 020000      R     LJMP    BAT1SetFail
                                           ; SOURCE LINE # 1280
                                           ; SOURCE LINE # 1282
                                           ; SOURCE LINE # 1283
                                           ; SOURCE LINE # 1285
0090         ?C0220:
                                           ; SOURCE LINE # 1286
0090 020000      R     LJMP    BAT1ForceDischarge
                                           ; SOURCE LINE # 1287
                                           ; SOURCE LINE # 1289
0093         ?C0221:
                                           ; SOURCE LINE # 1290
0093 020000      R     LJMP    BAT1ForceCharge
                                           ; SOURCE LINE # 1291
                                           ; SOURCE LINE # 1293
0096         ?C0222:
                                           ; SOURCE LINE # 1294
0096 120000      R     LCALL   BAT1AutoLearning
                                           ; SOURCE LINE # 1295
                                           ; SOURCE LINE # 1297
                                           ; SOURCE LINE # 1298
                                           ; SOURCE LINE # 1300
                                           ; SOURCE LINE # 1301
                                           ; SOURCE LINE # 1304
                                           ; SOURCE LINE # 1305
                                           ; SOURCE LINE # 1308
                                           ; SOURCE LINE # 1309
                                           ; SOURCE LINE # 1310
                                           ; SOURCE LINE # 1311
0099         ?C0204:
0099 22                RET     
             ; FUNCTION Battey1ControlCenter (END)

             ; FUNCTION SetSmartCharger (BEGIN)
                                           ; SOURCE LINE # 1322
                                           ; SOURCE LINE # 1323
                                           ; SOURCE LINE # 1325
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#doneindex
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1327
0005 900000      E     MOV     DPTR,#POWER_FLAG1
0008 E0                MOVX    A,@DPTR
0009 20E003            JB      ACC.0,?C0227
                                           ; SOURCE LINE # 1328
                                           ; SOURCE LINE # 1329
000C 020000      R     LJMP    ?C0328
                                           ; SOURCE LINE # 1330
000F         ?C0227:
                                           ; SOURCE LINE # 1332
                                           ; SOURCE LINE # 1333
000F 120000      R     LCALL   L?0340
                                           ; SOURCE LINE # 1334
0012 900000      E     MOV     DPTR,#GPDRI
0015 E0                MOVX    A,@DPTR
0016 30E315            JNB     ACC.3,?C0229
0019 E0                MOVX    A,@DPTR
001A 20E411            JB      ACC.4,?C0229
001D 900000      E     MOV     DPTR,#BAT1_CV_L
0020 E0                MOVX    A,@DPTR
0021 700B              JNZ     ?C0229
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 74  

0023 900000      E     MOV     DPTR,#BAT1_CV_H
0026 E0                MOVX    A,@DPTR
0027 7005              JNZ     ?C0229
                                           ; SOURCE LINE # 1335
                                           ; SOURCE LINE # 1336
                                           ; SOURCE LINE # 1337
                                           ; SOURCE LINE # 1338
                                           ; SOURCE LINE # 1339
0029 120000      R     LCALL   L?0357
                                           ; SOURCE LINE # 1340
002C 8023              SJMP    ?C0230
002E         ?C0229:
                                           ; SOURCE LINE # 1341
002E 900000      E     MOV     DPTR,#GPDRI
0031 E0                MOVX    A,@DPTR
0032 30E415            JNB     ACC.4,?C0231
0035 900000      E     MOV     DPTR,#BAT1_CV_L
0038 E0                MOVX    A,@DPTR
0039 600F              JZ      ?C0231
003B 900000      E     MOV     DPTR,#BAT1_CV_H
003E E0                MOVX    A,@DPTR
003F 6009              JZ      ?C0231
                                           ; SOURCE LINE # 1342
                                           ; SOURCE LINE # 1343
                                           ; SOURCE LINE # 1344
0041 120000      R     LCALL   L?0376
                                           ; SOURCE LINE # 1345
0044 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_LO
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1346
                                           ; SOURCE LINE # 1347
0048 8003              SJMP    ?C0329
004A         ?C0231:
                                           ; SOURCE LINE # 1349
                                           ; SOURCE LINE # 1350
                                           ; SOURCE LINE # 1351
                                           ; SOURCE LINE # 1352
                                           ; SOURCE LINE # 1353
004A 120000      R     LCALL   L?0342
004D         ?C0329:
004D 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_HI
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1354
0051         ?C0230:
                                           ; SOURCE LINE # 1356
0051 120000      R     LCALL   L?0344
0054 120000      E     LCALL   _bRWSMBus
0057 EF                MOV     A,R7
0058 7003              JNZ     ?C0233
                                           ; SOURCE LINE # 1357
                                           ; SOURCE LINE # 1358
005A 120000      R     LCALL   L?0389
                                           ; SOURCE LINE # 1359
005D         ?C0233:
                                           ; SOURCE LINE # 1361
005D 120000      R     LCALL   L?0380
0060 7400        E     MOV     A,#LOW CHARGE_VOLTAGE_LO
0062 120000      R     LCALL   L?0345
0065 120000      E     LCALL   _bRWSMBus
0068 EF                MOV     A,R7
0069 7003              JNZ     ?C0234
                                           ; SOURCE LINE # 1362
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 75  

                                           ; SOURCE LINE # 1363
006B 120000      R     LCALL   L?0389
                                           ; SOURCE LINE # 1364
006E         ?C0234:
                                           ; SOURCE LINE # 1366
006E 120000      R     LCALL   L?0375
0071 120000      R     LCALL   L?0346
0074 120000      E     LCALL   _bRWSMBus
0077 EF                MOV     A,R7
0078 7003              JNZ     ?C0235
                                           ; SOURCE LINE # 1368
                                           ; SOURCE LINE # 1369
007A 120000      R     LCALL   L?0390
                                           ; SOURCE LINE # 1370
007D         ?C0235:
                                           ; SOURCE LINE # 1372
007D         ?C0328:
007D 900000      R     MOV     DPTR,#doneindex
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
                                           ; SOURCE LINE # 1373
0082         ?C0228:
0082 22                RET     
             ; FUNCTION SetSmartCharger (END)

             ; FUNCTION PollingChargerIC (BEGIN)
                                           ; SOURCE LINE # 1385
                                           ; SOURCE LINE # 1386
                                           ; SOURCE LINE # 1389
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#chargeindex
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1391
0005 900000      E     MOV     DPTR,#POWER_FLAG1
0008 E0                MOVX    A,@DPTR
0009 20E003            JB      ACC.0,?C0236
                                           ; SOURCE LINE # 1392
                                           ; SOURCE LINE # 1393
000C 020000      R     LJMP    ?C0330
                                           ; SOURCE LINE # 1394
000F         ?C0236:
                                           ; SOURCE LINE # 1396
000F 120000      R     LCALL   PollingChargerData
                                           ; SOURCE LINE # 1398
                                           ; SOURCE LINE # 1399
0012 120000      R     LCALL   L?0340
                                           ; SOURCE LINE # 1400
0015 900000      E     MOV     DPTR,#GPDRI
0018 E0                MOVX    A,@DPTR
0019 30E315            JNB     ACC.3,?C0238
001C E0                MOVX    A,@DPTR
001D 20E411            JB      ACC.4,?C0238
0020 900000      E     MOV     DPTR,#BAT1_CV_L
0023 E0                MOVX    A,@DPTR
0024 700B              JNZ     ?C0238
0026 900000      E     MOV     DPTR,#BAT1_CV_H
0029 E0                MOVX    A,@DPTR
002A 7005              JNZ     ?C0238
                                           ; SOURCE LINE # 1401
                                           ; SOURCE LINE # 1402
                                           ; SOURCE LINE # 1403
                                           ; SOURCE LINE # 1404
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 76  

                                           ; SOURCE LINE # 1405
002C 120000      R     LCALL   L?0357
                                           ; SOURCE LINE # 1406
002F 8023              SJMP    ?C0239
0031         ?C0238:
                                           ; SOURCE LINE # 1407
0031 900000      E     MOV     DPTR,#GPDRI
0034 E0                MOVX    A,@DPTR
0035 30E415            JNB     ACC.4,?C0240
0038 900000      E     MOV     DPTR,#BAT1_CV_L
003B E0                MOVX    A,@DPTR
003C 600F              JZ      ?C0240
003E 900000      E     MOV     DPTR,#BAT1_CV_H
0041 E0                MOVX    A,@DPTR
0042 6009              JZ      ?C0240
                                           ; SOURCE LINE # 1408
                                           ; SOURCE LINE # 1409
                                           ; SOURCE LINE # 1410
0044 120000      R     LCALL   L?0376
                                           ; SOURCE LINE # 1411
0047 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_LO
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1412
                                           ; SOURCE LINE # 1413
004B 8003              SJMP    ?C0331
004D         ?C0240:
                                           ; SOURCE LINE # 1415
                                           ; SOURCE LINE # 1416
                                           ; SOURCE LINE # 1417
                                           ; SOURCE LINE # 1418
                                           ; SOURCE LINE # 1419
004D 120000      R     LCALL   L?0342
0050         ?C0331:
0050 900000      E     MOV     DPTR,#CHARGE_VOLTAGE_HI
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1420
0054         ?C0239:
                                           ; SOURCE LINE # 1421
0054 120000      R     LCALL   L?0344
0057 120000      E     LCALL   _bRWSMBus
005A EF                MOV     A,R7
005B 7003              JNZ     ?C0242
                                           ; SOURCE LINE # 1422
                                           ; SOURCE LINE # 1423
005D 120000      R     LCALL   L?0391
                                           ; SOURCE LINE # 1424
0060         ?C0242:
                                           ; SOURCE LINE # 1426
0060 120000      R     LCALL   L?0380
0063 A3                INC     DPTR
0064 7400        E     MOV     A,#LOW CHARGE_VOLTAGE_LO
0066 120000      R     LCALL   L?0346
0069 120000      E     LCALL   _bRWSMBus
006C EF                MOV     A,R7
006D 7003              JNZ     ?C0243
                                           ; SOURCE LINE # 1427
                                           ; SOURCE LINE # 1428
006F 120000      R     LCALL   L?0391
                                           ; SOURCE LINE # 1429
0072         ?C0243:
                                           ; SOURCE LINE # 1431
0072 120000      R     LCALL   L?0375
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 77  

0075 120000      R     LCALL   L?0346
0078 120000      E     LCALL   _bRWSMBus
007B EF                MOV     A,R7
007C 7003              JNZ     ?C0244
                                           ; SOURCE LINE # 1433
                                           ; SOURCE LINE # 1434
007E 120000      R     LCALL   L?0392
                                           ; SOURCE LINE # 1435
0081         ?C0244:
                                           ; SOURCE LINE # 1436
0081         ?C0330:
0081 900000      R     MOV     DPTR,#chargeindex
0084 E0                MOVX    A,@DPTR
0085 FF                MOV     R7,A
                                           ; SOURCE LINE # 1437
0086         ?C0237:
0086 22                RET     
             ; FUNCTION PollingChargerIC (END)

             ; FUNCTION DisableCharger (BEGIN)
                                           ; SOURCE LINE # 1445
                                           ; SOURCE LINE # 1446
                                           ; SOURCE LINE # 1448
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#result
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1449
                                           ; SOURCE LINE # 1450
                                           ; SOURCE LINE # 1451
                                           ; SOURCE LINE # 1452
0005 120000      R     LCALL   L?0377
                                           ; SOURCE LINE # 1453
0008 120000      R     LCALL   SetSmartCharger
000B EF                MOV     A,R7
000C 6011              JZ      ?C0246
                                           ; SOURCE LINE # 1454
                                           ; SOURCE LINE # 1455
                                           ; SOURCE LINE # 1456
000E 120000      R     LCALL   L?0364
0011 4005              JC      ?C0247
                                           ; SOURCE LINE # 1457
                                           ; SOURCE LINE # 1459
0013 7F40              MOV     R7,#040H
0015 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 1460
0018         ?C0247:
                                           ; SOURCE LINE # 1461
0018 E4                CLR     A
0019 900000      R     MOV     DPTR,#result
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1462
001D 8036              SJMP    ?C0253
001F         ?C0246:
                                           ; SOURCE LINE # 1464
                                           ; SOURCE LINE # 1465
001F 900000      E     MOV     DPTR,#POWER_FLAG1
0022 E0                MOVX    A,@DPTR
0023 30E012            JNB     ACC.0,?C0249
                                           ; SOURCE LINE # 1466
                                           ; SOURCE LINE # 1467
0026 900000      E     MOV     DPTR,#BT1_STATUS3
0029 E0                MOVX    A,@DPTR
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 78  

002A 30E104            JNB     ACC.1,?C0250
                                           ; SOURCE LINE # 1468
                                           ; SOURCE LINE # 1469
002D E4                CLR     A
002E FF                MOV     R7,A
                                           ; SOURCE LINE # 1470
002F 8002              SJMP    ?C0332
0031         ?C0250:
                                           ; SOURCE LINE # 1472
                                           ; SOURCE LINE # 1473
0031 7F01              MOV     R7,#01H
0033         ?C0332:
0033 120000      R     LCALL   _Hook_BAT1_ChargePinON
                                           ; SOURCE LINE # 1474
                                           ; SOURCE LINE # 1475
0036 8013              SJMP    ?C0252
0038         ?C0249:
                                           ; SOURCE LINE # 1477
                                           ; SOURCE LINE # 1478
0038 E4                CLR     A
0039 FF                MOV     R7,A
003A 120000      R     LCALL   _Hook_BAT1_ChargePinON
                                           ; SOURCE LINE # 1479
003D 900000      E     MOV     DPTR,#BT1_STATUS2
0040 E0                MOVX    A,@DPTR
0041 4410              ORL     A,#010H
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1480
0044 900000      E     MOV     DPTR,#BT1_STATUS1
0047 E0                MOVX    A,@DPTR
0048 4410              ORL     A,#010H
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1481
004B         ?C0252:
                                           ; SOURCE LINE # 1482
004B E4                CLR     A
004C 900000      E     MOV     DPTR,#Charger_TimeOut
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1483
0050 900000      R     MOV     DPTR,#result
0053 04                INC     A
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1484
                                           ; SOURCE LINE # 1485
                                           ; SOURCE LINE # 1487
                                           ; SOURCE LINE # 1489
                                           ; SOURCE LINE # 1490
                                           ; SOURCE LINE # 1491
                                           ; SOURCE LINE # 1492
                                           ; SOURCE LINE # 1493
                                           ; SOURCE LINE # 1494
0055         ?C0253:
                                           ; SOURCE LINE # 1508
0055 900000      R     MOV     DPTR,#result
0058 E0                MOVX    A,@DPTR
0059 FF                MOV     R7,A
                                           ; SOURCE LINE # 1509
005A         ?C0258:
005A 22                RET     
             ; FUNCTION DisableCharger (END)

             ; FUNCTION Battey1FrimUp (BEGIN)
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 79  

                                           ; SOURCE LINE # 1513
                                           ; SOURCE LINE # 1514
                                           ; SOURCE LINE # 1515
0000 900000      E     MOV     DPTR,#SYS_MISC1
0003 E0                MOVX    A,@DPTR
0004 30E107            JNB     ACC.1,?C0259
                                           ; SOURCE LINE # 1516
                                           ; SOURCE LINE # 1517
0007 E0                MOVX    A,@DPTR
0008 20E213            JB      ACC.2,?C0263
                                           ; SOURCE LINE # 1518
                                           ; SOURCE LINE # 1521
000B 020000      R     LJMP    BAT1FWUpdata
                                           ; SOURCE LINE # 1522
                                           ; SOURCE LINE # 1523
000E         ?C0259:
                                           ; SOURCE LINE # 1525
                                           ; SOURCE LINE # 1526
000E 900000      E     MOV     DPTR,#SYS_MISC1
0011 E0                MOVX    A,@DPTR
0012 30E209            JNB     ACC.2,?C0263
                                           ; SOURCE LINE # 1527
                                           ; SOURCE LINE # 1528
0015 E0                MOVX    A,@DPTR
0016 54FB              ANL     A,#0FBH
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1529
0019 7F01              MOV     R7,#01H
001B 120000      R     LCALL   _SetBAT1CtrlStep
                                           ; SOURCE LINE # 1530
                                           ; SOURCE LINE # 1531
                                           ; SOURCE LINE # 1532
001E         ?C0263:
001E 22                RET     
             ; FUNCTION Battey1FrimUp (END)

             ; FUNCTION Calibrate_Mode_PreDC (BEGIN)
                                           ; SOURCE LINE # 1540
                                           ; SOURCE LINE # 1541
                                           ; SOURCE LINE # 1543
0000 900000      E     MOV     DPTR,#BAT1_RSOC
0003 E0                MOVX    A,@DPTR
0004 C3                CLR     C
0005 945F              SUBB    A,#05FH
0007 500A              JNC     ?C0264
                                           ; SOURCE LINE # 1544
                                           ; SOURCE LINE # 1546
0009 120000      R     LCALL   AC_ON
                                           ; SOURCE LINE # 1547
000C 900000      E     MOV     DPTR,#BAT_Calibrate_Step
000F 7402              MOV     A,#02H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1548
0012 22                RET     
0013         ?C0264:
                                           ; SOURCE LINE # 1549
                                           ; SOURCE LINE # 1550
0013 120000      R     LCALL   AC_OFF
                                           ; SOURCE LINE # 1551
                                           ; SOURCE LINE # 1553
0016         ?C0266:
0016 22                RET     
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 80  

             ; FUNCTION Calibrate_Mode_PreDC (END)

             ; FUNCTION Calibrate_Mode_NC (BEGIN)
                                           ; SOURCE LINE # 1555
                                           ; SOURCE LINE # 1556
                                           ; SOURCE LINE # 1557
0000 900000      E     MOV     DPTR,#BAT1_RSOC
0003 E0                MOVX    A,@DPTR
0004 C3                CLR     C
0005 9464              SUBB    A,#064H
0007 4009              JC      ?C0268
                                           ; SOURCE LINE # 1558
                                           ; SOURCE LINE # 1560
0009 120000      R     LCALL   AC_OFF
                                           ; SOURCE LINE # 1561
000C 900000      E     MOV     DPTR,#BAT_Calibrate_Step
000F 7404              MOV     A,#04H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1563
                                           ; SOURCE LINE # 1564
0012         ?C0268:
0012 22                RET     
             ; FUNCTION Calibrate_Mode_NC (END)

             ; FUNCTION Calibrate_Mode_DC (BEGIN)
                                           ; SOURCE LINE # 1567
                                           ; SOURCE LINE # 1568
                                           ; SOURCE LINE # 1569
0000 900000      E     MOV     DPTR,#BAT1_RSOC
0003 E0                MOVX    A,@DPTR
0004 C3                CLR     C
0005 9401              SUBB    A,#01H
0007 5006              JNC     ?C0270
                                           ; SOURCE LINE # 1570
                                           ; SOURCE LINE # 1572
0009 120000      R     LCALL   AC_ON
                                           ; SOURCE LINE # 1573
000C 120000      R     LCALL   L?0371
                                           ; SOURCE LINE # 1575
                                           ; SOURCE LINE # 1576
000F         ?C0270:
000F 22                RET     
             ; FUNCTION Calibrate_Mode_DC (END)

             ; FUNCTION Calibrate_Mode_Exit (BEGIN)
                                           ; SOURCE LINE # 1579
                                           ; SOURCE LINE # 1580
                                           ; SOURCE LINE # 1582
0000 120000      R     LCALL   AC_ON
                                           ; SOURCE LINE # 1583
0003 900000      E     MOV     DPTR,#VPC_Lenovo
0006 E0                MOVX    A,@DPTR
0007 4402              ORL     A,#02H
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1584
000A E4                CLR     A
000B FD                MOV     R5,A
000C 7F44              MOV     R7,#044H
000E 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 1586
0011 E4                CLR     A
0012 900000      E     MOV     DPTR,#BAT_Calibrate_Step
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 81  

0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1588
0016 22                RET     
             ; FUNCTION Calibrate_Mode_Exit (END)

             ; FUNCTION Battery_Calibrate_Mode (BEGIN)
                                           ; SOURCE LINE # 1591
                                           ; SOURCE LINE # 1592
                                           ; SOURCE LINE # 1593
0000 900000      E     MOV     DPTR,#BAT_Calibrate_Step
0003 E0                MOVX    A,@DPTR
0004 701A              JNZ     ?C0272
                                           ; SOURCE LINE # 1594
                                           ; SOURCE LINE # 1595
0006 900000      E     MOV     DPTR,#BAT1_RSOC
0009 E0                MOVX    A,@DPTR
000A C3                CLR     C
000B 945F              SUBB    A,#05FH
000D 900000      E     MOV     DPTR,#BAT_Calibrate_Step
0010 4005              JC      ?C0273
                                           ; SOURCE LINE # 1596
0012 7401              MOV     A,#01H
0014 F0                MOVX    @DPTR,A
0015 8003              SJMP    ?C0274
0017         ?C0273:
                                           ; SOURCE LINE # 1598
0017 7402              MOV     A,#02H
0019 F0                MOVX    @DPTR,A
001A         ?C0274:
                                           ; SOURCE LINE # 1600
001A 900000      E     MOV     DPTR,#BAT_Storagemode_Step
001D 7404              MOV     A,#04H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1602
0020         ?C0272:
                                           ; SOURCE LINE # 1603
0020 900000      E     MOV     DPTR,#Sys_Power_Status
0023 E0                MOVX    A,@DPTR
0024 547F              ANL     A,#07FH
0026 FF                MOV     R7,A
0027 BF0504            CJNE    R7,#05H,?C0275
                                           ; SOURCE LINE # 1604
                                           ; SOURCE LINE # 1605
002A E4                CLR     A
                                           ; SOURCE LINE # 1606
002B 120000      R     LCALL   L?0370
                                           ; SOURCE LINE # 1607
002E         ?C0275:
                                           ; SOURCE LINE # 1610
002E 900000      E     MOV     DPTR,#SysPowState
0031 E0                MOVX    A,@DPTR
0032 B45503            CJNE    A,#055H,?C0276
                                           ; SOURCE LINE # 1611
                                           ; SOURCE LINE # 1612
0035 120000      R     LCALL   L?0371
                                           ; SOURCE LINE # 1614
0038         ?C0276:
                                           ; SOURCE LINE # 1617
0038 900000      E     MOV     DPTR,#BAT1_FailCause
003B E0                MOVX    A,@DPTR
003C 6003              JZ      ?C0277
                                           ; SOURCE LINE # 1618
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 82  

                                           ; SOURCE LINE # 1619
003E 120000      R     LCALL   L?0371
                                           ; SOURCE LINE # 1621
0041         ?C0277:
                                           ; SOURCE LINE # 1627
0041 900000      E     MOV     DPTR,#BAT_Calibrate_Step
0044 E0                MOVX    A,@DPTR
0045 24FE              ADD     A,#0FEH
0047 600F              JZ      ?C0280
0049 24FE              ADD     A,#0FEH
004B 600E              JZ      ?C0281
004D 24FC              ADD     A,#0FCH
004F 600D              JZ      ?C0282
0051 2407              ADD     A,#07H
0053 700C              JNZ     ?C0284
                                           ; SOURCE LINE # 1628
                                           ; SOURCE LINE # 1629
0055         ?C0279:
                                           ; SOURCE LINE # 1630
0055 020000      R     LJMP    Calibrate_Mode_PreDC
                                           ; SOURCE LINE # 1631
                                           ; SOURCE LINE # 1633
0058         ?C0280:
                                           ; SOURCE LINE # 1634
0058 020000      R     LJMP    Calibrate_Mode_NC
                                           ; SOURCE LINE # 1635
                                           ; SOURCE LINE # 1637
005B         ?C0281:
                                           ; SOURCE LINE # 1638
005B 020000      R     LJMP    Calibrate_Mode_DC
                                           ; SOURCE LINE # 1639
                                           ; SOURCE LINE # 1641
005E         ?C0282:
                                           ; SOURCE LINE # 1642
005E 120000      R     LCALL   Calibrate_Mode_Exit
                                           ; SOURCE LINE # 1643
                                           ; SOURCE LINE # 1645
                                           ; SOURCE LINE # 1646
                                           ; SOURCE LINE # 1647
                                           ; SOURCE LINE # 1650
0061         ?C0284:
0061 22                RET     
             ; FUNCTION Battery_Calibrate_Mode (END)

             ; FUNCTION Storage_Mode_Check (BEGIN)
                                           ; SOURCE LINE # 1652
                                           ; SOURCE LINE # 1653
                                           ; SOURCE LINE # 1654
0000 900000      E     MOV     DPTR,#BAT_Storagemode_Step
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1655
0006 22                RET     
             ; FUNCTION Storage_Mode_Check (END)

             ; FUNCTION Storage_Mode_DC (BEGIN)
                                           ; SOURCE LINE # 1658
                                           ; SOURCE LINE # 1659
                                           ; SOURCE LINE # 1660
0000 900000      E     MOV     DPTR,#BAT1_RSOC
0003 E0                MOVX    A,@DPTR
0004 D3                SETB    C
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 83  

0005 943C              SUBB    A,#03CH
0007 4003              JC      ?C0286
                                           ; SOURCE LINE # 1661
                                           ; SOURCE LINE # 1662
0009 020000      R     LJMP    AC_OFF
                                           ; SOURCE LINE # 1663
000C         ?C0286:
                                           ; SOURCE LINE # 1665
                                           ; SOURCE LINE # 1666
000C 120000      R     LCALL   AC_ON
                                           ; SOURCE LINE # 1667
000F 900000      E     MOV     DPTR,#BAT_Storagemode_Step
0012 7402              MOV     A,#02H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1668
                                           ; SOURCE LINE # 1669
0015         ?C0288:
0015 22                RET     
             ; FUNCTION Storage_Mode_DC (END)

             ; FUNCTION Storage_Mode_NC (BEGIN)
                                           ; SOURCE LINE # 1671
                                           ; SOURCE LINE # 1672
                                           ; SOURCE LINE # 1673
0000 900000      E     MOV     DPTR,#BAT1_RSOC
0003 E0                MOVX    A,@DPTR
0004 C3                CLR     C
0005 943C              SUBB    A,#03CH
0007 4008              JC      ?C0289
                                           ; SOURCE LINE # 1674
                                           ; SOURCE LINE # 1675
0009 900000      E     MOV     DPTR,#BT1_STATUS3
000C E0                MOVX    A,@DPTR
000D 4402              ORL     A,#02H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1676
0010 22                RET     
0011         ?C0289:
                                           ; SOURCE LINE # 1677
0011 900000      E     MOV     DPTR,#BAT1_RSOC
0014 E0                MOVX    A,@DPTR
0015 C3                CLR     C
0016 9437              SUBB    A,#037H
0018 5007              JNC     ?C0292
                                           ; SOURCE LINE # 1678
                                           ; SOURCE LINE # 1679
001A 900000      E     MOV     DPTR,#BT1_STATUS3
001D E0                MOVX    A,@DPTR
001E 54FD              ANL     A,#0FDH
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1680
                                           ; SOURCE LINE # 1681
0021         ?C0292:
0021 22                RET     
             ; FUNCTION Storage_Mode_NC (END)

             ; FUNCTION Storage_Mode_Exit (BEGIN)
                                           ; SOURCE LINE # 1684
                                           ; SOURCE LINE # 1685
                                           ; SOURCE LINE # 1686
0000 120000      R     LCALL   AC_ON
                                           ; SOURCE LINE # 1688
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 84  

0003 E4                CLR     A
0004 900000      E     MOV     DPTR,#BAT_Storagemode_Step
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1689
0008 900000      E     MOV     DPTR,#BT1_STATUS3
000B E0                MOVX    A,@DPTR
000C 54FD              ANL     A,#0FDH
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1690
000F 900000      E     MOV     DPTR,#BIOS_OEM_battery_health
0012 E0                MOVX    A,@DPTR
0013 54FD              ANL     A,#0FDH
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1693
0016 22                RET     
             ; FUNCTION Storage_Mode_Exit (END)

             ; FUNCTION Battery_Storage_Mode (BEGIN)
                                           ; SOURCE LINE # 1695
                                           ; SOURCE LINE # 1696
                                           ; SOURCE LINE # 1697
0000 900000      E     MOV     DPTR,#BIOS_OEM_battery_health
0003 E0                MOVX    A,@DPTR
0004 30E106            JNB     ACC.1,?C0294
                                           ; SOURCE LINE # 1698
                                           ; SOURCE LINE # 1699
0007 900000      E     MOV     DPTR,#BAT_Storagemode_Step
000A 7404              MOV     A,#04H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1700
000D         ?C0294:
                                           ; SOURCE LINE # 1702
000D 900000      E     MOV     DPTR,#BAT_Storagemode_Step
0010 E0                MOVX    A,@DPTR
0011 14                DEC     A
0012 600E              JZ      ?C0297
0014 14                DEC     A
0015 600E              JZ      ?C0298
0017 24FE              ADD     A,#0FEH
0019 600D              JZ      ?C0299
001B 2404              ADD     A,#04H
001D 700C              JNZ     ?C0300
                                           ; SOURCE LINE # 1703
                                           ; SOURCE LINE # 1704
001F         ?C0296:
                                           ; SOURCE LINE # 1705
001F 020000      R     LJMP    Storage_Mode_Check
                                           ; SOURCE LINE # 1706
                                           ; SOURCE LINE # 1707
0022         ?C0297:
                                           ; SOURCE LINE # 1708
0022 020000      R     LJMP    Storage_Mode_DC
                                           ; SOURCE LINE # 1709
                                           ; SOURCE LINE # 1710
0025         ?C0298:
                                           ; SOURCE LINE # 1711
0025 020000      R     LJMP    Storage_Mode_NC
                                           ; SOURCE LINE # 1712
                                           ; SOURCE LINE # 1713
0028         ?C0299:
                                           ; SOURCE LINE # 1714
0028 020000      R     LJMP    Storage_Mode_Exit
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 85  

                                           ; SOURCE LINE # 1715
                                           ; SOURCE LINE # 1716
002B         ?C0300:
                                           ; SOURCE LINE # 1717
002B E4                CLR     A
002C 900000      E     MOV     DPTR,#BAT_Storagemode_Step
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1718
                                           ; SOURCE LINE # 1719
                                           ; SOURCE LINE # 1722
0030         ?C0301:
0030 22                RET     
             ; FUNCTION Battery_Storage_Mode (END)

             ; FUNCTION Lenovo_Battery_Health (BEGIN)
                                           ; SOURCE LINE # 1724
                                           ; SOURCE LINE # 1725
                                           ; SOURCE LINE # 1726
0000 900000      E     MOV     DPTR,#BAT_Storagemode_Step
0003 E0                MOVX    A,@DPTR
0004 6005              JZ      ?C0302
                                           ; SOURCE LINE # 1727
0006 7404              MOV     A,#04H
0008 F0                MOVX    @DPTR,A
0009 8003              SJMP    ?C0303
000B         ?C0302:
                                           ; SOURCE LINE # 1729
                                           ; SOURCE LINE # 1730
000B 020000      R     LJMP    Battery_Calibrate_Mode
                                           ; SOURCE LINE # 1732
000E         ?C0303:
                                           ; SOURCE LINE # 1734
000E 900000      E     MOV     DPTR,#Sys_Power_Status
0011 E0                MOVX    A,@DPTR
0012 547F              ANL     A,#07FH
0014 FF                MOV     R7,A
0015 BF0502            CJNE    R7,#05H,?C0305
                                           ; SOURCE LINE # 1735
                                           ; SOURCE LINE # 1736
0018 E4                CLR     A
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1737
001A         ?C0305:
                                           ; SOURCE LINE # 1739
001A 900000      E     MOV     DPTR,#BIOS_OEM_battery_health
001D E0                MOVX    A,@DPTR
001E 30E006            JNB     ACC.0,?C0306
                                           ; SOURCE LINE # 1740
                                           ; SOURCE LINE # 1741
0021 E0                MOVX    A,@DPTR
0022 54FE              ANL     A,#0FEH
                                           ; SOURCE LINE # 1742
0024 120000      R     LCALL   L?0370
                                           ; SOURCE LINE # 1743
0027         ?C0306:
                                           ; SOURCE LINE # 1745
0027 120000      R     LCALL   Battery_Storage_Mode
                                           ; SOURCE LINE # 1746
002A         ?C0304:
002A 22                RET     
             ; FUNCTION Lenovo_Battery_Health (END)

C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 86  

             ; FUNCTION CheckBatShipMode (BEGIN)
                                           ; SOURCE LINE # 1750
                                           ; SOURCE LINE # 1751
                                           ; SOURCE LINE # 1752
0000 900000      E     MOV     DPTR,#Bat_ShipMode_Cmd
0003 E0                MOVX    A,@DPTR
0004 20E254            JB      ACC.2,?C0307
0007 E0                MOVX    A,@DPTR
0008 30E050            JNB     ACC.0,?C0307
                                           ; SOURCE LINE # 1753
                                           ; SOURCE LINE # 1754
000B 7F95              MOV     R7,#095H
000D 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1755
0010 7F0A              MOV     R7,#0AH
0012 120000      E     LCALL   _Delay1MS
                                           ; SOURCE LINE # 1757
0015 900000      E     MOV     DPTR,#Bat_ShipMode_Data_L
0018 7410              MOV     A,#010H
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1758
001B E4                CLR     A
001C 900000      E     MOV     DPTR,#Bat_ShipMode_Data_H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1760
0020 120000      R     LCALL   L?0378
0023 120000      R     LCALL   L?0353
0026 7D8C              MOV     R5,#08CH
0028 FF                MOV     R7,A
0029 120000      E     LCALL   _bRWSMBus
002C EF                MOV     A,R7
002D 6031              JZ      ?C0311
                                           ; SOURCE LINE # 1761
                                           ; SOURCE LINE # 1762
002F 7F96              MOV     R7,#096H
0031 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1763
0034 900000      E     MOV     DPTR,#Bat_ShipMode_Data_L
0037 7410              MOV     A,#010H
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1764
003A E4                CLR     A
003B 120000      R     LCALL   L?0378
003E 120000      R     LCALL   L?0353
0041 7D8C              MOV     R5,#08CH
0043 FF                MOV     R7,A
0044 120000      E     LCALL   _bRWSMBus
0047 EF                MOV     A,R7
0048 6016              JZ      ?C0311
                                           ; SOURCE LINE # 1765
                                           ; SOURCE LINE # 1766
004A 7F97              MOV     R7,#097H
004C 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 1767
004F 900000      E     MOV     DPTR,#Bat_ShipMode_Cmd
0052 E0                MOVX    A,@DPTR
0053 54FE              ANL     A,#0FEH
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1768
0056 E0                MOVX    A,@DPTR
0057 4402              ORL     A,#02H
0059 F0                MOVX    @DPTR,A
C51 COMPILER V7.50   OEM_BATTERY                                                           09/08/2020 15:56:22 PAGE 87  

                                           ; SOURCE LINE # 1780
                                           ; SOURCE LINE # 1781
                                           ; SOURCE LINE # 1782
005A 22                RET     
005B         ?C0307:
                                           ; SOURCE LINE # 1784
005B E4                CLR     A
005C 900000      E     MOV     DPTR,#Bat_ShipMode_Cmd
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1785
0060         ?C0311:
0060 22                RET     
             ; FUNCTION CheckBatShipMode (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3579    ----
   CONSTANT SIZE    =     82    ----
   XDATA SIZE       =   ----      38
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE CORE_INIT
OBJECT MODULE PLACED IN Core\Core_Init.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Core\Core_Init.c LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Core\Include\;.
                    -\Oem\Include\)

line level    source

   1          
   2          #include "Core_Inc.h"
   3          #include "Oem_Inc.h"
   4          
   5          
   6          void Kernel_Initialization(void)
   7          {
   8   1      
   9   1      //      EA = 0;
  10   1      //    EA = 1;
  11   1      
  12   1              SPCTRL1 = 0x03;         // I2EC R/W Enable;
  13   1              SPCTRL2 = 0x27;         // Bit4 = 1, 8032 UART1 Enable; Bit 2-1 = 11b, SSPI Enable, Bit 5 = 1 because the LRESE
             -T# gating;
  14   1                                                      // Bit 0 = 1, Port I2EC Enable;
  15   1                                                      
  16   1              #if VCC_POWER_ON_TREATED
                      RSTS = 0x44;//set 2006h bit3 =0 for LDN change issue 
                      #else
  19   1              RSTS = 0x84;//set 2006h bit3 =0 for LDN change issue 
  20   1              #endif
  21   1      
  22   1              PI2ECH = 0x0B;   // I2EC Base address MLB
  23   1              PI2ECL = 0x00;   // I2EC Base address LSB
  24   1      
  25   1              Disable_DCache();       //Disable DCache
  26   1      
  27   1              vDelay1ms(100);
  28   1              Index_07H = 0x07;    //LDN=0x07
  29   1              Index_30H = 0x01;
  30   1              Index_E9H = 0x20;       // Disable BUS Selection
  31   1      
  32   1              Index_2CH = 0x8B;       // Disable SMBUS isolation
  33   1              
  34   1              Index_62H = 0x02;       // IO base assignment
  35   1              Index_63H = 0x00;
  36   1      
  37   1      
  38   1              SET_BIT(CFG_REG, 7);                            
  39   1              SET_BIT(PWM_STEP_FREQ_REG, 4);  //Initialize the Thermal Diode At the VSTBY Power
  40   1      
  41   1              Kernel_Code_Version = Read_SPI(0xFEFE);
  42   1              
  43   1      }
  44          
  45          
  46          void Init_ClearRam(void)
  47          {
  48   1      
  49   1              IIBYTE *IdataIndex;
  50   1              PORT_BYTE_PNTR byte_register_pntr;
  51   1              IdataIndex = 0x20;
  52   1              byte_register_pntr=0;
  53   1      
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 2   

  54   1              #if INIT_CLEAR_XRAM
  55   1              while(byte_register_pntr<0x1000)// Clear external ram (0x000~0xFFF)
  56   1              {
  57   2                  *byte_register_pntr=0;
  58   2                  byte_register_pntr ++;
  59   2              }
  60   1              #endif
  61   1      
  62   1              #if INIT_CLEAR_IRAM
  63   1              while(IdataIndex<0xD0)                  // Clear internal ram (0x20~0xCF)
  64   1              {
  65   2                          *IdataIndex=0;
  66   2                          IdataIndex ++;
  67   2              }
  68   1              #endif
  69   1                      
  70   1      }
  71          
  72          
  73          
  74          void Enable_SMLink1_Mapping_To_TMPIN2(void)
  75          {
  76   1              Index_07H = 0x07 ;      // Secret move for enabling the SMLink1
  77   1              Index_2AH = 0x02 ;      // Secret move for enabling the SMLink1
  78   1      
  79   1              PCH_AMDTSI_HOST_STS             = 0x00 ;
  80   1              PCH_AMDTSI_TARGET_ADDR  = 0x97 ;
  81   1              PCH_AMDTSI_HOST_CMD             = 0x40 ;
  82   1              PCH_AMDTSI_HOST_CTRL            = 0xC3 ;
  83   1      }
  84          
  85          //-----------------------------------------------------------------------------
  86          // Reset_Initialization - Initialize the registers and data variables.
  87          //
  88          //-----------------------------------------------------------------------------
  89          void Reset_Initialization(void)
  90          {
  91   1      
  92   1              Kernel_Initialization();
  93   1      
  94   1              AWFCS_EN = 0x01;
  95   1              //==================================
  96   1              //Init GPIO
  97   1              //==================================
  98   1              Initialize_GPIO_Pin_State();
  99   1              //==================================
 100   1              InitADC();
 101   1      
 102   1              //==================================
 103   1              //Set K8 function (for AMD platform)
 104   1              //==================================
 105   1              #if K8_Function_Enable
                      Enable_K8_Function();
                      #endif
 108   1              
 109   1              LED_S0_Status = 0;
 110   1              
 111   1              Init_BRAM() ;
 112   1              
 113   1              Init_Timers();
 114   1              //J74_001A++>> 
 115   1              if(BRAM[60] == 0x55)
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 3   

 116   1              {
 117   2                      S3_FLAG = 1;
 118   2                      BRAM[60] = 0;
 119   2              }
 120   1              //J74_001A++<<
 121   1      }
 122          
 123          void Init_Timers(void)
 124          {
 125   1              TF0 = TR0 = 0;          // Stop timer0 and clear interrupt
 126   1              
 127   1              #if SUPPORT_Hook_1ms_Timer
 128   1              TL0 = T_Timer_1ms;              // Reload timer
 129   1              TH0 = T_Timer_1ms>>8;       // 1ms
 130   1              #else
                      TL0 = T_Timer_5ms;              // Reload timer
                      TH0 = T_Timer_5ms>>8;       // 5ms
                      #endif
 134   1              
 135   1              TMOD  = 0x11;                   // Timer0 and timer1 are 16 bits timer
 136   1              TR0 = 1;                // Start timer0 running
 137   1              ET0 = 1;                                // Enable timer0 interrupt
 138   1                                                              
 139   1              TF1 = TR1 = 0;          // Stop timer 1 and clear interrupt
 140   1              //TL1 = T_Timer_2ms;            // Reload timer
 141   1              //TH1 = T_Timer_2ms>>8;         // 2ms
 142   1              TR1 = 0;                // Stop timer1 
 143   1              //ET1 = 1;                              // Enable timer1 interrupt
 144   1      }
 145          
 146          
 147          //==============================================================================
 148          // Name: vSetTimeout
 149          // Description: When TF1 is 1 mean timeout occur
 150          //==============================================================================
 151          void Set_T1_Timeout(WORD wTimeCnt)
 152          {
 153   1              ET1 = 0;                                        // Disable timer1 interrupt
 154   1              TR1 = 0;                                        // Stop timer1
 155   1              _nop_();
 156   1              _nop_();
 157   1              _nop_();
 158   1              _nop_();
 159   1              TH1 = wTimeCnt>>8;                      // Set timer1 counter MSB
 160   1              TL1 = wTimeCnt;                         // Set timer1 counter LSB
 161   1              TF1 = 0;                                        // Clear overflow flag
 162   1              TR1 = 1;                                        // Enable timer1
 163   1      }
 164          
 165          
 166          
 167          void Load_Timer_A(void)
 168          {                                               // Assume the 8051 clock source is Ring Oscillator 
 169   1              TL0 = T_Timer_5ms;              // Reload timer
 170   1              TH0 = T_Timer_5ms>>8;       // 5ms
 171   1              TF0 = 0;                                // Clear overflow flag
 172   1      }
 173          
 174          
 175          void Load_Timer_A_1ms(void)
 176          {                                               // Assume the 8051 clock source is Ring Oscillator 
 177   1              TL0 = T_Timer_1ms;              // Reload timer
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 4   

 178   1              TH0 = T_Timer_1ms>>8;       // 1ms
 179   1              TF0 = 0;                                // Clear overflow flag
 180   1      }
 181          
 182          
 183          
 184          void InitSMBus(void)
 185          {
 186   1      
 187   1              //SMBUS initi
 188   1              Index_07H = 0x19;       // LDN 19h for SMBus configurations
 189   1              Index_70H = 0x00;
 190   1              Index_30H = 0x00;       // Disable Host side
 191   1              
 192   1              //SMBUS Disable
 193   1              #if Disable_All_SMBUS_Channel
                              Index_30H = 0x00;       // Activation
                              Index_70H = 0x00;
                              Index_76H = 0x00;       // SMBus disable
                              return;
                      #endif
 199   1      
 200   1      
 201   1              //---------------------------------------------
 202   1              #if Enable_SMBUS_ChannelA       //SMBUS0
 203   1              SET_BIT(Index_76H, 1);
 204   1              HOCTL2_A = 0x01;        //Enable SMBUS (SMHEN)
 205   1              #else
                      CLR_BIT(Index_76H, 1);
                      #endif
 208   1      
 209   1              #if Enable_SMBUS_ChannelB
                      HOCTL2_B = 0x01;        //Enable SMBUS (SMHEN)
                      #endif
 212   1      
 213   1      
 214   1              #if Enable_SMBUS_ChannelC       //SMBUS2
                      SET_BIT(Index_76H, 0);  // SMBus enable
                      HOCTL2_C = 0x01;        //Enable SMBUS (SMHEN)
                      #else
 218   1              CLR_BIT(Index_76H, 0);
 219   1              #endif
 220   1              //---------------------------------------------
 221   1      
 222   1              Core_Init_SMBus();
 223   1              #if SMBusServiceCenterFunc
                              CheckSMBusTableSize();
                      #endif
 226   1      
 227   1      
 228   1              switch(SMBus_Freq)//400,100,50,20,13,10
 229   1              {
 230   2                      case 400:
 231   2                              SMBUS_4P7USREG = 0x03;
 232   2                              SMBUS_4P0USREG = 0x02;
 233   2                              SMBUS_300NSREG = 0x03;  
 234   2                              SMBUS_250NSREG = 0x03;  
 235   2                              SMBUS_25MSREG    = 0x19;        
 236   2                              SMBUS_45P3USLREG = 0xC9;        
 237   2                              SMBUS_45P3USHREG = 0x01;
 238   2                              SMBUS_4P7A4P0H = 0x00;
 239   2                              break;
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 5   

 240   2                              
 241   2                      case 100:
 242   2                              //set SMBUS Frequency = 100KHz
 243   2                              SMBUS_4P7USREG = 0x15;
 244   2                              SMBUS_4P0USREG = 0x25;
 245   2                              SMBUS_300NSREG = 0x03;  
 246   2                              SMBUS_250NSREG = 0x15;  
 247   2                              SMBUS_25MSREG    = 0x19;        
 248   2                              SMBUS_45P3USLREG = 0xB8;        
 249   2                              SMBUS_45P3USHREG = 0x01;
 250   2                              SMBUS_4P7A4P0H = 0x00;
 251   2                              break;
 252   2      
 253   2                      case 50:
 254   2                              //set SMBUS Frequency = 50KHz
 255   2                              SMBUS_4P7USREG = 0x2C;
 256   2                              SMBUS_4P0USREG = 0x53;
 257   2                              SMBUS_300NSREG = 0x03;  
 258   2                              SMBUS_250NSREG = 0x2C;  
 259   2                              SMBUS_25MSREG    = 0x19;        
 260   2                              SMBUS_45P3USLREG = 0xA0;        
 261   2                              SMBUS_45P3USHREG = 0x01;
 262   2                              SMBUS_4P7A4P0H = 0x00;  
 263   2                              break;
 264   2              
 265   2                      case 20:
 266   2                              //set SMBUS Frequency = 20KHz
 267   2                              SMBUS_4P7USREG = 0x71;
 268   2                              SMBUS_4P0USREG = 0xDD;
 269   2                              SMBUS_300NSREG = 0x03;  
 270   2                              SMBUS_250NSREG = 0x71;  
 271   2                              SMBUS_25MSREG    = 0x19;        
 272   2                              SMBUS_45P3USLREG = 0x5B;        
 273   2                              SMBUS_45P3USHREG = 0x01;
 274   2                              SMBUS_4P7A4P0H = 0x00;  
 275   2                              break;
 276   2                              
 277   2                      case 13:
 278   2                              //set SMBUS Frequency = 13KHz
 279   2                              SMBUS_4P7USREG = 0xAF;
 280   2                              SMBUS_4P0USREG = 0x5A;
 281   2                              SMBUS_300NSREG = 0x03;  
 282   2                              SMBUS_250NSREG = 0xAF;  
 283   2                              SMBUS_25MSREG    = 0x19;        
 284   2                              SMBUS_45P3USLREG = 0x1D;        
 285   2                              SMBUS_45P3USHREG = 0x01;
 286   2                              SMBUS_4P7A4P0H = 0x02;
 287   2                              break;
 288   2                              
 289   2                      case 10:
 290   2                              //set SMBUS Frequency = 10KHz
 291   2                              SMBUS_4P7USREG = 0xE4;
 292   2                              SMBUS_4P0USREG = 0xC5;
 293   2                              SMBUS_300NSREG = 0x03;  
 294   2                              SMBUS_250NSREG = 0xE4;  
 295   2                              SMBUS_25MSREG    = 0x19;        
 296   2                              SMBUS_45P3USLREG = 0xE8;        
 297   2                              SMBUS_45P3USHREG = 0x00;
 298   2                              SMBUS_4P7A4P0H = 0x02;  
 299   2                              break;
 300   2              
 301   2                      default:
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 6   

 302   2                              break;
 303   2              }
 304   1      
 305   1      }
 306          
 307          
 308          void InitDAC(void)
 309          {
 310   1              DACPDREG = 0x00;        //Enable DAC0~4
 311   1              
 312   1              DACDAT0_MSB = 0x30;
 313   1              DACDAT0_LSB = 0xFF;
 314   1              
 315   1              DACDAT1_MSB = 0x02;
 316   1              DACDAT1_LSB = 0x00;
 317   1              
 318   1              DACDAT2_MSB = 0x00;
 319   1              DACDAT2_LSB = 0x00;
 320   1              
 321   1              DACDAT3_MSB = 0x00;
 322   1              DACDAT3_LSB = 0xFF;
 323   1              
 324   1              DACDAT4_MSB = 0x02;
 325   1              DACDAT4_LSB = 0xFF;
 326   1      }
 327          
 328          void InitADC(void)
 329          {
 330   1              Index_07H = 0x04;
 331   1              Index_30H = 0x01;
 332   1              ADC_VCEn = 0x3F;
 333   1              ADC_channel_enable = 0xFF;
 334   1              CFG_REG |= 0x01;
 335   1      }
 336          
 337          
 338          void InitFanCTL(void)
 339          {
 340   1              FAN_MAIN_CTL = 0x77;//enable TAC1-3
 341   1              FAN_CTL = 0xC0;//Set Active high
 342   1      
 343   1              FAN_CTL1= 0x00; //Use Fan1
 344   1              PWM_FAN_CTL1= 0x50;
 345   1      
 346   1              FAN_CTL2 = 0x00;        //Use Fan2
 347   1              PWM_FAN_CTL2 = 0x50;
 348   1      }
 349          
 350          
 351          //======================================================
 352          // Name:        vDelay1ms
 353          // Input:               bMS
 354          // Output:      bMS delay
 355          // Return:
 356          //
 357          // Module Author: Ethan Lo, ITE Tech. Inc.
 358          // Application Implementation: B.J. Chen, ITE. Tech. Inc.
 359          //======================================================
 360          void vDelay1ms(WORD bMS)
 361          {
 362   1          bit SaveEA;
 363   1          BYTE i;
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 7   

 364   1      
 365   1          SaveEA = EA;    // save Interrupt
 366   1          EA = 0;         // clear global interrupt
 367   1      
 368   1          while(bMS)      // delay 1ms
 369   1          {
 370   2              for( i=0; i<66; i++ )
 371   2                  WNCKR = 0;  // 15.26 us
 372   2              bMS--;
 373   2          }
 374   1          EA = SaveEA;        // restore Interrupt
 375   1      }//End vDelayXms
 376          
 377          void LED_SEG(BYTE ucByte) 
 378          {
 379   1      
 380   1          GPIO_7x = ucByte;   
 381   1              
 382   1      }//END LED_SEG
 383          
 384          /*
 385          Hardware Monitor 
 386          
 387                          INDEX13 bit 2~0=0
 388                          INDEX14 = C0h
 389          
 390          
 391          COM 2 
 392                  LDN07  
 393                          INDEX 25 bit 7=1
 394                        INDEX 26 bit7~4=1 : F0h
 395                        INDEX 26 bit1~0=1 : 03h
 396                        INDEX C0 bit7=1
 397                        INDEX C1 bit7~4=1 : F0h
 398                        INDEX C1 bit1~0=1 : 03h
 399                        INDEX C8 bit7=1
 400                        INDEX C9 bit7~4=1 : F0h
 401                        INDEX C9 bit1~0=1 : 03h
 402          
 403           Hardware Monitor EC 
 404          
 405                          index 0A bit 5~4= 0
 406          */
 407          
 408          
 409          void InitEnterDeepSleep(void)
 410          {
 411   1              //Disable Timer0/Timer1 Interrupt
 412   1              ET0 = 0;
 413   1              ET1 = 0;
 414   1      
 415   1              //WKO[34], INT52        GP34 WU34
 416   1              IER6 = 0x10;
 417   1              WUENR3 = 0x10;
 418   1              WUESR3 = 0xFF;
 419   1      }
 420          
 421          void InitWakeFromDeepSleep(void)
 422          {
 423   1              //WKO[34], INT52        GP34 WU34
 424   1              WUENR3 = 0x00;
 425   1              IER6 = 0x00;
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 8   

 426   1      
 427   1              DeepSleepCountDown = 2;
 428   1      
 429   1              //Enable Timer0 Interrupt
 430   1              ET0 = 1;
 431   1              //ET1 = 0;
 432   1      }
 433          
 434          
 435          void Init_UART2(void)
 436          {
 437   1              if( (SysPowState == _SYSTEM_S5) || (SysPowState == _PowrUp_S5) )
 438   1              {
 439   2                      //Index_23H = 0x01;     //For S5 only
 440   2                      SET_BIT(Index_23H, 0);  //For S5 only
 441   2              }
 442   1              
 443   1              
 444   1              //Set LDN 02 for UART2
 445   1              Index_07H = 0x02;
 446   1              Index_30H = 0x01;
 447   1              SET_BIT(Index_F0H, 3);  //UART2 Pin not gated
 448   1              
 449   1              Index_07H = 0x07;
 450   1              CLR_BIT(Index_26H,7);   //Sin2
 451   1              CLR_BIT(Index_26H,6);   //Sout2
 452   1              CLR_BIT(Index_C1H,7);
 453   1              CLR_BIT(Index_C1H,6);
 454   1              UART2_LCR = 0x80;                               // DLAB = 1
 455   1              UART2_DLM = 0x00;                               // Enable read/write Baud Rate
 456   1              //UART2_DLL = 0x01;                             // Set baud rate = 115200
 457   1              //UART2_DLL = 0x0C;                             // Set baud rate = 9600
 458   1              //UART2_DLL = 0x03;                             // Set baud rate = 38400
 459   1              UART2_DLL = 0x06;                               // Set baud rate = 19200
 460   1              
 461   1              UART2_LCR = 0x03;                               // DLAB = 0, Word length = 8 bit
 462   1              
 463   1              UART2_FCR |= 0x86;                              // Set Rx FIFO to 8 byte and reset FIFO
 464   1              SetFlag(UART2_FCR, BIT0);               // Enable FIFO
 465   1              SetFlag(UART2_IER, BIT0);               // Enable received data available interrupt
 466   1              SetFlag(UART2_MCR, BIT3);               // Enable OUT2
 467   1              SET_MASK(IER4, Int_UART2) ;     //UART2 int
 468   1              ISR4 = Int_UART2;
 469   1      
 470   1      
 471   1      }
 472          
 473          
 474          
 475          void Init_UART1(void)
 476          {
 477   1      
 478   1              //UART1 test
 479   1              if( (SysPowState == _SYSTEM_S5) || (SysPowState == _PowrUp_S5) )
 480   1              {
 481   2                      //Index_23H = 0x01;     //For S5 only
 482   2                      SET_BIT(Index_23H, 0);  //For S5 only
 483   2              }
 484   1                      
 485   1              //Set LDN 01 for UART1
 486   1              Index_07H = 0x01;
 487   1              Index_30H = 0x01;
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 9   

 488   1              SET_BIT(Index_F0H, 3);  //UART1 Pin not gated
 489   1              
 490   1              UART1_LCR = 0x80;                               // DLAB = 1
 491   1              UART1_DLM = 0x00;                               // Enable read/write Baud Rate
 492   1              //UART2_DLL = 0x01;                             // Set baud rate = 115200
 493   1              //UART2_DLL = 0x0C;                             // Set baud rate = 9600
 494   1              UART1_DLL = 0x03;                               // Set baud rate = 38400
 495   1              
 496   1              UART1_LCR = 0x03;                               // DLAB = 0, Word length = 8 bit
 497   1      
 498   1              UART1_FCR |= 0x86;                              // Set Rx FIFO to 8 byte and reset FIFO
 499   1              SetFlag(UART1_FCR, BIT0);               // Enable FIFO
 500   1              SetFlag(UART1_IER, BIT0);               // Enable received data available interrupt
 501   1              SetFlag(UART1_MCR, BIT3);               // Enable OUT2
 502   1              SET_MASK(IER4, Int_UART1) ;     //UART1 int
 503   1              ISR4 = Int_UART1 ;
 504   1      
 505   1      
 506   1      }
 507          
 508          
 509          void Set_ExtTimer1(void)
 510          {
 511   1      
 512   1              SET_BIT(ETWCTRL, 0);    //Reset
 513   1              ETPSR = 0x00;   //Set Clock     
 514   1              
 515   1              //ETCNTLHR = 0x3E;
 516   1              //ETCNTLLR = 0x80;              //Start
 517   1              
 518   1              ETCNTLHR = 0x7D;
 519   1              ETCNTLLR = 0x00;
 520   1              
 521   1              ISR3 = BIT6;            //clear INT30 ISR
 522   1              IER3 |= BIT6;   //set  INT30 IER
 523   1              
 524   1      }
 525          
 526          
 527          BYTE Read_SPI(WORD address)
 528          {
 529   1              unsigned char code *pt_rom;
 530   1              unsigned char tmp;
 531   1              
 532   1              pt_rom = 0+address;
 533   1              tmp = *pt_rom;
 534   1      
 535   1              return tmp;
 536   1      }
 537          
 538          
 539          void Init_BRAM(void)
 540          {
 541   1      
 542   1          PORT_BYTE_PNTR byte_reg_pntr ;
 543   1      
 544   1          byte_reg_pntr=0x2200;
 545   1      
 546   1              if( (BRAM_CHECK0 == 70) && (BRAM_CHECK1 == 5) && (BRAM_CHECK2 == 2) )
 547   1              {
 548   2                      return; 
 549   2              }
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 10  

 550   1              else
 551   1              {
 552   2                      while( byte_reg_pntr < (0x22C0) )
 553   2                      {   // Clear BRAM range (0x2200~0x22BF)
 554   3                              *byte_reg_pntr = 0x00;
 555   3                              byte_reg_pntr++; ;
 556   3                      }
 557   2                      BRAM_CHECK0 = 70;
 558   2                      BRAM_CHECK1 = 5;
 559   2                      BRAM_CHECK2 = 2;
 560   2              }
 561   1      
 562   1              
 563   1      
 564   1      }
 565          
 566          //------------------------------------------------------------------------------
 567          // The function of enabling KBC Input Buffer Full (60 64 port)Interrupt 
 568          //------------------------------------------------------------------------------
 569          void EnableKBCIBFInt(void)
 570          {
 571   1              SET_MASK(IER3,Int_KBCIBF);
 572   1      }
 573          
 574          //------------------------------------------------------------------------------
 575          //Disable Dynamic Cache
 576          //------------------------------------------------------------------------------
 577          void Disable_DCache(void)
 578          {
 579   1              #if Disable_DCache_without_checking
 580   1      
 581   1              CACHDISR = 0x03;
 582   1              
 583   1              #else 
                      
                      //Disable DCache except IT8738
                      if( ECHIPID2 != 0x38 )
                      {
                              CACHDISR = 0x03;
                      }
                      #endif
 591   1      }
 592          
 593          
 594          //------------------------------------------------------------------------------
 595          //K8 function Enable
 596          //------------------------------------------------------------------------------
 597          void Enable_K8_Function(void)
 598          {
 599   1              LDN = 0x07;
 600   1              SET_MASK(Index_2DH, BIT0);
 601   1      }
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 11  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0038 (BEGIN)
0000         L?0057:
0000         L?0058:
0000 900000      E     MOV     DPTR,#SMBUS_250NSREG
0003         L?0059:
0003 F0                MOVX    @DPTR,A
0004 900000      E     MOV     DPTR,#SMBUS_25MSREG
0007 7419              MOV     A,#019H
0009 F0                MOVX    @DPTR,A
000A 900000      E     MOV     DPTR,#SMBUS_45P3USLREG
000D 22                RET     
000E         L?0060:
000E 900000      E     MOV     DPTR,#SMBUS_4P0USREG
0011         L?0061:
0011 F0                MOVX    @DPTR,A
0012 900000      E     MOV     DPTR,#SMBUS_300NSREG
0015 7403              MOV     A,#03H
0017 F0                MOVX    @DPTR,A
0018 22                RET     
0019         L?0062:
0019 900000      E     MOV     DPTR,#Index_07H
001C F0                MOVX    @DPTR,A
001D 900000      E     MOV     DPTR,#Index_30H
0020 22                RET     
0021         L?0063:
0021 900000      E     MOV     DPTR,#SMBUS_4P7USREG
0024 F0                MOVX    @DPTR,A
0025 900000      E     MOV     DPTR,#SMBUS_4P0USREG
0028 22                RET     
             ; FUNCTION Com0038 (END)

             ; FUNCTION Kernel_Initialization (BEGIN)
                                           ; SOURCE LINE # 6
                                           ; SOURCE LINE # 7
                                           ; SOURCE LINE # 12
0000 900000      E     MOV     DPTR,#SPCTRL1
0003 7403              MOV     A,#03H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 13
0006 900000      E     MOV     DPTR,#SPCTRL2
0009 7427              MOV     A,#027H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 19
000C 900000      E     MOV     DPTR,#RSTS
000F 7484              MOV     A,#084H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 22
0012 900000      E     MOV     DPTR,#PI2ECH
0015 740B              MOV     A,#0BH
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 23
0018 E4                CLR     A
0019 900000      E     MOV     DPTR,#PI2ECL
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 25
001D 120000      R     LCALL   Disable_DCache
                                           ; SOURCE LINE # 27
0020 7F64              MOV     R7,#064H
0022 7E00              MOV     R6,#00H
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 12  

0024 120000      R     LCALL   _vDelay1ms
                                           ; SOURCE LINE # 28
0027 7407              MOV     A,#07H
                                           ; SOURCE LINE # 29
0029 120000      R     LCALL   L?0062
002C 7401              MOV     A,#01H
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 30
002F 900000      E     MOV     DPTR,#Index_E9H
0032 7420              MOV     A,#020H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 32
0035 900000      E     MOV     DPTR,#Index_2CH
0038 748B              MOV     A,#08BH
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 34
003B 900000      E     MOV     DPTR,#Index_62H
003E 7402              MOV     A,#02H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 35
0041 E4                CLR     A
0042 900000      E     MOV     DPTR,#Index_63H
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0046 900000      E     MOV     DPTR,#CFG_REG
0049 E0                MOVX    A,@DPTR
004A 4480              ORL     A,#080H
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 39
004D 900000      E     MOV     DPTR,#PWM_STEP_FREQ_REG
0050 E0                MOVX    A,@DPTR
0051 4410              ORL     A,#010H
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 41
0054 74FE              MOV     A,#0FEH
0056 FF                MOV     R7,A
0057 FE                MOV     R6,A
0058 120000      R     LCALL   _Read_SPI
005B 8F00        E     MOV     Kernel_Code_Version,R7
                                           ; SOURCE LINE # 43
005D 22                RET     
             ; FUNCTION Kernel_Initialization (END)

             ; FUNCTION Init_ClearRam (BEGIN)
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 51
;---- Variable 'IdataIndex' assigned to Register 'R7' ----
0000 7F20              MOV     R7,#020H
                                           ; SOURCE LINE # 52
;---- Variable 'byte_register_pntr' assigned to Register 'DPTR' ----
0002 900000            MOV     DPTR,#00H
0005         ?C0002:
                                           ; SOURCE LINE # 55
0005 AC83              MOV     R4,DPH
0007 C3                CLR     C
0008 EC                MOV     A,R4
0009 9410              SUBB    A,#010H
000B 5005              JNC     ?C0004
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
000D E4                CLR     A
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 13  

000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 58
000F A3                INC     DPTR
                                           ; SOURCE LINE # 59
0010 80F3              SJMP    ?C0002
0012         ?C0004:
                                           ; SOURCE LINE # 63
0012 EF                MOV     A,R7
0013 C3                CLR     C
0014 94D0              SUBB    A,#0D0H
0016 5008              JNC     ?C0006
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0018 C8                XCH     A,R0
0019 EF                MOV     A,R7
001A C8                XCH     A,R0
001B E4                CLR     A
001C F6                MOV     @R0,A
                                           ; SOURCE LINE # 66
001D 0F                INC     R7
                                           ; SOURCE LINE # 67
001E 80F2              SJMP    ?C0004
                                           ; SOURCE LINE # 70
0020         ?C0006:
0020 22                RET     
             ; FUNCTION Init_ClearRam (END)

             ; FUNCTION Enable_SMLink1_Mapping_To_TMPIN2 (BEGIN)
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0000 900000      E     MOV     DPTR,#Index_07H
0003 7407              MOV     A,#07H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
0006 900000      E     MOV     DPTR,#Index_2AH
0009 7402              MOV     A,#02H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
000C E4                CLR     A
000D 900000      E     MOV     DPTR,#PCH_AMDTSI_HOST_STS
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 80
0011 900000      E     MOV     DPTR,#PCH_AMDTSI_TARGET_ADDR
0014 7497              MOV     A,#097H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
0017 900000      E     MOV     DPTR,#PCH_AMDTSI_HOST_CMD
001A 7440              MOV     A,#040H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 82
001D 900000      E     MOV     DPTR,#PCH_AMDTSI_HOST_CTRL
0020 74C3              MOV     A,#0C3H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
0023 22                RET     
             ; FUNCTION Enable_SMLink1_Mapping_To_TMPIN2 (END)

             ; FUNCTION Reset_Initialization (BEGIN)
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 92
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 14  

0000 120000      R     LCALL   Kernel_Initialization
                                           ; SOURCE LINE # 94
0003 900000      E     MOV     DPTR,#AWFCS_EN
0006 7401              MOV     A,#01H
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 98
0009 120000      E     LCALL   Initialize_GPIO_Pin_State
                                           ; SOURCE LINE # 100
000C 120000      R     LCALL   InitADC
                                           ; SOURCE LINE # 109
000F E4                CLR     A
0010 900000      E     MOV     DPTR,#LED_S0_Status
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 111
0014 120000      R     LCALL   Init_BRAM
                                           ; SOURCE LINE # 113
0017 120000      R     LCALL   Init_Timers
                                           ; SOURCE LINE # 115
001A 900000      E     MOV     DPTR,#BRAM+03CH
001D E0                MOVX    A,@DPTR
001E B4550B            CJNE    A,#055H,?C0009
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
0021 900000      E     MOV     DPTR,#S3_FLAG
0024 7401              MOV     A,#01H
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
0027 E4                CLR     A
0028 900000      E     MOV     DPTR,#BRAM+03CH
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 121
002C         ?C0009:
002C 22                RET     
             ; FUNCTION Reset_Initialization (END)

             ; FUNCTION Init_Timers (BEGIN)
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
0000 C28C              CLR     TR0
0002 C28D              CLR     TF0
                                           ; SOURCE LINE # 128
0004 E4                CLR     A
0005 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 129
0007 758CFD            MOV     TH0,#0FDH
                                           ; SOURCE LINE # 135
000A 758911            MOV     TMOD,#011H
                                           ; SOURCE LINE # 136
000D D28C              SETB    TR0
                                           ; SOURCE LINE # 137
000F D2A9              SETB    ET0
                                           ; SOURCE LINE # 139
0011 C28E              CLR     TR1
0013 C28F              CLR     TF1
                                           ; SOURCE LINE # 142
0015 C28E              CLR     TR1
                                           ; SOURCE LINE # 144
0017 22                RET     
             ; FUNCTION Init_Timers (END)

C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 15  

             ; FUNCTION _Set_T1_Timeout (BEGIN)
                                           ; SOURCE LINE # 151
0000 900000      R     MOV     DPTR,#wTimeCnt
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
0008 C2AB              CLR     ET1
                                           ; SOURCE LINE # 154
000A C28E              CLR     TR1
                                           ; SOURCE LINE # 155
000C 00                NOP     
                                           ; SOURCE LINE # 156
000D 00                NOP     
                                           ; SOURCE LINE # 157
000E 00                NOP     
                                           ; SOURCE LINE # 158
000F 00                NOP     
                                           ; SOURCE LINE # 159
0010 900000      R     MOV     DPTR,#wTimeCnt
0013 E0                MOVX    A,@DPTR
0014 F58D              MOV     TH1,A
                                           ; SOURCE LINE # 160
0016 E0                MOVX    A,@DPTR
0017 A3                INC     DPTR
0018 E0                MOVX    A,@DPTR
0019 F58B              MOV     TL1,A
                                           ; SOURCE LINE # 161
001B C28F              CLR     TF1
                                           ; SOURCE LINE # 162
001D D28E              SETB    TR1
                                           ; SOURCE LINE # 163
001F 22                RET     
             ; FUNCTION _Set_T1_Timeout (END)

             ; FUNCTION Load_Timer_A (BEGIN)
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
0000 758A06            MOV     TL0,#06H
                                           ; SOURCE LINE # 170
0003 758CF1            MOV     TH0,#0F1H
                                           ; SOURCE LINE # 171
0006 C28D              CLR     TF0
                                           ; SOURCE LINE # 172
0008 22                RET     
             ; FUNCTION Load_Timer_A (END)

             ; FUNCTION Load_Timer_A_1ms (BEGIN)
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 177
0000 E4                CLR     A
0001 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 178
0003 758CFD            MOV     TH0,#0FDH
                                           ; SOURCE LINE # 179
0006 C28D              CLR     TF0
                                           ; SOURCE LINE # 180
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 16  

0008 22                RET     
             ; FUNCTION Load_Timer_A_1ms (END)

             ; FUNCTION InitSMBus (BEGIN)
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 188
0000 900000      E     MOV     DPTR,#Index_07H
0003 7419              MOV     A,#019H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
0006 E4                CLR     A
0007 900000      E     MOV     DPTR,#Index_70H
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
000B 900000      E     MOV     DPTR,#Index_30H
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
000F 900000      E     MOV     DPTR,#Index_76H
0012 E0                MOVX    A,@DPTR
0013 4402              ORL     A,#02H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
0016 900000      E     MOV     DPTR,#HOCTL2_A
0019 7401              MOV     A,#01H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 218
001C 900000      E     MOV     DPTR,#Index_76H
001F E0                MOVX    A,@DPTR
0020 54FE              ANL     A,#0FEH
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
0023 120000      E     LCALL   Core_Init_SMBus
                                           ; SOURCE LINE # 228
0026 7464              MOV     A,#064H
0028 75F000            MOV     B,#00H
002B 120000      E     LCALL   ?C?ICASE
002E 0000        R     DW      ?C0020
0030 000A              DW      0AH
0032 0000        R     DW      ?C0019
0034 000D              DW      0DH
0036 0000        R     DW      ?C0018
0038 0014              DW      014H
003A 0000        R     DW      ?C0017
003C 0032              DW      032H
003E 0000        R     DW      ?C0016
0040 0064              DW      064H
0042 0000        R     DW      ?C0015
0044 0190              DW      0190H
0046 0000              DW      00H
0048 0000        R     DW      ?C0022
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
004A         ?C0015:
                                           ; SOURCE LINE # 231
004A 7403              MOV     A,#03H
                                           ; SOURCE LINE # 232
004C 120000      R     LCALL   L?0063
004F 14                DEC     A
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
0051 900000      E     MOV     DPTR,#SMBUS_300NSREG
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 17  

0054 04                INC     A
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
0056 120000      R     LCALL   L?0058
0059 74C9              MOV     A,#0C9H
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
005B 803C              SJMP    ?C0055
                                           ; SOURCE LINE # 241
005D         ?C0016:
                                           ; SOURCE LINE # 243
005D 900000      E     MOV     DPTR,#SMBUS_4P7USREG
0060 7415              MOV     A,#015H
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 244
0063 7425              MOV     A,#025H
                                           ; SOURCE LINE # 245
0065 120000      R     LCALL   L?0060
                                           ; SOURCE LINE # 246
0068 7415              MOV     A,#015H
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
006A 120000      R     LCALL   L?0057
006D 74B8              MOV     A,#0B8H
006F         ?C0053:
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 251
006F 8028              SJMP    ?C0055
                                           ; SOURCE LINE # 253
0071         ?C0017:
                                           ; SOURCE LINE # 255
0071 900000      E     MOV     DPTR,#SMBUS_4P7USREG
0074 742C              MOV     A,#02CH
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 256
0077 7453              MOV     A,#053H
                                           ; SOURCE LINE # 257
0079 120000      R     LCALL   L?0060
                                           ; SOURCE LINE # 258
007C 742C              MOV     A,#02CH
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 260
007E 120000      R     LCALL   L?0057
0081 74A0              MOV     A,#0A0H
0083         ?C0054:
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 263
0083 8014              SJMP    ?C0055
                                           ; SOURCE LINE # 265
0085         ?C0018:
                                           ; SOURCE LINE # 267
0085 7471              MOV     A,#071H
                                           ; SOURCE LINE # 268
0087 120000      R     LCALL   L?0063
008A 74DD              MOV     A,#0DDH
                                           ; SOURCE LINE # 269
008C 120000      R     LCALL   L?0061
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 18  

                                           ; SOURCE LINE # 270
008F 900000      E     MOV     DPTR,#SMBUS_250NSREG
0092 7471              MOV     A,#071H
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
0094 120000      R     LCALL   L?0059
0097 745B              MOV     A,#05BH
0099         ?C0055:
0099 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 273
009A 900000      E     MOV     DPTR,#SMBUS_45P3USHREG
009D 7401              MOV     A,#01H
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 274
00A0 E4                CLR     A
00A1 900000      E     MOV     DPTR,#SMBUS_4P7A4P0H
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 275
00A5 22                RET     
                                           ; SOURCE LINE # 277
00A6         ?C0019:
                                           ; SOURCE LINE # 279
00A6 900000      E     MOV     DPTR,#SMBUS_4P7USREG
00A9 74AF              MOV     A,#0AFH
00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 280
00AC 900000      E     MOV     DPTR,#SMBUS_4P0USREG
00AF 745A              MOV     A,#05AH
                                           ; SOURCE LINE # 281
00B1 120000      R     LCALL   L?0061
                                           ; SOURCE LINE # 282
00B4 900000      E     MOV     DPTR,#SMBUS_250NSREG
00B7 74AF              MOV     A,#0AFH
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
00B9 120000      R     LCALL   L?0059
00BC 741D              MOV     A,#01DH
00BE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 285
00BF 900000      E     MOV     DPTR,#SMBUS_45P3USHREG
00C2 7401              MOV     A,#01H
00C4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 286
00C5 900000      E     MOV     DPTR,#SMBUS_4P7A4P0H
00C8 04                INC     A
00C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 287
00CA 22                RET     
                                           ; SOURCE LINE # 289
00CB         ?C0020:
                                           ; SOURCE LINE # 291
00CB 900000      E     MOV     DPTR,#SMBUS_4P7USREG
00CE 74E4              MOV     A,#0E4H
00D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
00D1 900000      E     MOV     DPTR,#SMBUS_4P0USREG
00D4 74C5              MOV     A,#0C5H
                                           ; SOURCE LINE # 293
00D6 120000      R     LCALL   L?0061
                                           ; SOURCE LINE # 294
00D9 900000      E     MOV     DPTR,#SMBUS_250NSREG
00DC 74E4              MOV     A,#0E4H
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 19  

                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 296
00DE 120000      R     LCALL   L?0059
00E1 74E8              MOV     A,#0E8H
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 297
00E4 E4                CLR     A
00E5 900000      E     MOV     DPTR,#SMBUS_45P3USHREG
00E8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 298
00E9 900000      E     MOV     DPTR,#SMBUS_4P7A4P0H
00EC 7402              MOV     A,#02H
00EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 303
                                           ; SOURCE LINE # 305
00EF         ?C0022:
00EF 22                RET     
             ; FUNCTION InitSMBus (END)

             ; FUNCTION InitDAC (BEGIN)
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#DACPDREG
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 312
0005 900000      E     MOV     DPTR,#DACDAT0_MSB
0008 7430              MOV     A,#030H
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 313
000B 900000      E     MOV     DPTR,#DACDAT0_LSB
000E 74FF              MOV     A,#0FFH
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 315
0011 900000      E     MOV     DPTR,#DACDAT1_MSB
0014 7402              MOV     A,#02H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 316
0017 E4                CLR     A
0018 900000      E     MOV     DPTR,#DACDAT1_LSB
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 318
001C 900000      E     MOV     DPTR,#DACDAT2_MSB
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
0020 900000      E     MOV     DPTR,#DACDAT2_LSB
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 321
0024 900000      E     MOV     DPTR,#DACDAT3_MSB
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 322
0028 900000      E     MOV     DPTR,#DACDAT3_LSB
002B 74FF              MOV     A,#0FFH
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 324
002E 900000      E     MOV     DPTR,#DACDAT4_MSB
0031 7402              MOV     A,#02H
0033 F0                MOVX    @DPTR,A
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 20  

                                           ; SOURCE LINE # 325
0034 900000      E     MOV     DPTR,#DACDAT4_LSB
0037 74FF              MOV     A,#0FFH
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 326
003A 22                RET     
             ; FUNCTION InitDAC (END)

             ; FUNCTION InitADC (BEGIN)
                                           ; SOURCE LINE # 328
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 330
0000 7404              MOV     A,#04H
                                           ; SOURCE LINE # 331
0002 120000      R     LCALL   L?0062
0005 7401              MOV     A,#01H
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 332
0008 900000      E     MOV     DPTR,#ADC_VCEn
000B 743F              MOV     A,#03FH
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 333
000E 900000      E     MOV     DPTR,#ADC_channel_enable
0011 74FF              MOV     A,#0FFH
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 334
0014 900000      E     MOV     DPTR,#CFG_REG
0017 E0                MOVX    A,@DPTR
0018 4401              ORL     A,#01H
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 335
001B 22                RET     
             ; FUNCTION InitADC (END)

             ; FUNCTION InitFanCTL (BEGIN)
                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 339
                                           ; SOURCE LINE # 340
0000 900000      E     MOV     DPTR,#FAN_MAIN_CTL
0003 7477              MOV     A,#077H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 341
0006 900000      E     MOV     DPTR,#FAN_CTL
0009 74C0              MOV     A,#0C0H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 343
000C E4                CLR     A
000D 900000      E     MOV     DPTR,#FAN_CTL1
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 344
0011 900000      E     MOV     DPTR,#PWM_FAN_CTL1
0014 7450              MOV     A,#050H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 346
0017 E4                CLR     A
0018 900000      E     MOV     DPTR,#FAN_CTL2
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 347
001C 900000      E     MOV     DPTR,#PWM_FAN_CTL2
001F 7450              MOV     A,#050H
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 348
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 21  

0022 22                RET     
             ; FUNCTION InitFanCTL (END)

             ; FUNCTION _vDelay1ms (BEGIN)
                                           ; SOURCE LINE # 360
0000 900000      R     MOV     DPTR,#bMS
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 361
                                           ; SOURCE LINE # 365
0008 A2AF              MOV     C,EA
000A 9200        R     MOV     SaveEA,C
                                           ; SOURCE LINE # 366
000C C2AF              CLR     EA
000E         ?C0026:
                                           ; SOURCE LINE # 368
000E 900000      R     MOV     DPTR,#bMS
0011 E0                MOVX    A,@DPTR
0012 7002              JNZ     ?C0051
0014 A3                INC     DPTR
0015 E0                MOVX    A,@DPTR
0016         ?C0051:
0016 6018              JZ      ?C0027
                                           ; SOURCE LINE # 369
                                           ; SOURCE LINE # 370
;---- Variable 'i' assigned to Register 'R7' ----
0018 E4                CLR     A
0019 FF                MOV     R7,A
001A         ?C0028:
                                           ; SOURCE LINE # 371
001A E4                CLR     A
001B 900000      E     MOV     DPTR,#WNCKR
001E F0                MOVX    @DPTR,A
001F 0F                INC     R7
0020 EF                MOV     A,R7
0021 B442F6            CJNE    A,#042H,?C0028
0024         ?C0029:
                                           ; SOURCE LINE # 372
0024 900000      R     MOV     DPTR,#bMS
0027 74FF              MOV     A,#0FFH
0029 F5F0              MOV     B,A
002B 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 373
002E 80DE              SJMP    ?C0026
0030         ?C0027:
                                           ; SOURCE LINE # 374
0030 A200        R     MOV     C,SaveEA
0032 92AF              MOV     EA,C
                                           ; SOURCE LINE # 375
0034 22                RET     
             ; FUNCTION _vDelay1ms (END)

             ; FUNCTION _LED_SEG (BEGIN)
                                           ; SOURCE LINE # 377
;---- Variable 'ucByte' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 378
                                           ; SOURCE LINE # 380
0000 900000      E     MOV     DPTR,#GPIO_7x
0003 EF                MOV     A,R7
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 22  

0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 382
0005 22                RET     
             ; FUNCTION _LED_SEG (END)

             ; FUNCTION InitEnterDeepSleep (BEGIN)
                                           ; SOURCE LINE # 409
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 412
0000 C2A9              CLR     ET0
                                           ; SOURCE LINE # 413
0002 C2AB              CLR     ET1
                                           ; SOURCE LINE # 416
0004 900000      E     MOV     DPTR,#IER6
0007 7410              MOV     A,#010H
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 417
000A 900000      E     MOV     DPTR,#WUENR3
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 418
000E 900000      E     MOV     DPTR,#WUESR3
0011 74FF              MOV     A,#0FFH
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 419
0014 22                RET     
             ; FUNCTION InitEnterDeepSleep (END)

             ; FUNCTION InitWakeFromDeepSleep (BEGIN)
                                           ; SOURCE LINE # 421
                                           ; SOURCE LINE # 422
                                           ; SOURCE LINE # 424
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#WUENR3
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 425
0005 900000      E     MOV     DPTR,#IER6
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 427
0009 900000      E     MOV     DPTR,#DeepSleepCountDown
000C 7402              MOV     A,#02H
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 430
000F D2A9              SETB    ET0
                                           ; SOURCE LINE # 432
0011 22                RET     
             ; FUNCTION InitWakeFromDeepSleep (END)

             ; FUNCTION Init_UART2 (BEGIN)
                                           ; SOURCE LINE # 435
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 437
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 6405              XRL     A,#05H
0006 6003              JZ      ?C0036
0008 E0                MOVX    A,@DPTR
0009 7007              JNZ     ?C0035
000B         ?C0036:
                                           ; SOURCE LINE # 438
                                           ; SOURCE LINE # 440
000B 900000      E     MOV     DPTR,#Index_23H
000E E0                MOVX    A,@DPTR
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 23  

000F 4401              ORL     A,#01H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 441
0012         ?C0035:
                                           ; SOURCE LINE # 445
0012 900000      E     MOV     DPTR,#Index_07H
0015 7402              MOV     A,#02H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 446
0018 900000      E     MOV     DPTR,#Index_30H
001B 14                DEC     A
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 447
001D 900000      E     MOV     DPTR,#Index_F0H
0020 E0                MOVX    A,@DPTR
0021 4408              ORL     A,#08H
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 449
0024 900000      E     MOV     DPTR,#Index_07H
0027 7407              MOV     A,#07H
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 450
002A 900000      E     MOV     DPTR,#Index_26H
002D E0                MOVX    A,@DPTR
002E 547F              ANL     A,#07FH
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 451
0031 E0                MOVX    A,@DPTR
0032 54BF              ANL     A,#0BFH
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 452
0035 900000      E     MOV     DPTR,#Index_C1H
0038 E0                MOVX    A,@DPTR
0039 547F              ANL     A,#07FH
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 453
003C E0                MOVX    A,@DPTR
003D 54BF              ANL     A,#0BFH
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 454
0040 902803            MOV     DPTR,#02803H
0043 7480              MOV     A,#080H
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 455
0046 902801            MOV     DPTR,#02801H
0049 E4                CLR     A
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 459
004B 902800            MOV     DPTR,#02800H
004E 7406              MOV     A,#06H
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 461
0051 902803            MOV     DPTR,#02803H
0054 7403              MOV     A,#03H
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 463
0057 902802            MOV     DPTR,#02802H
005A E0                MOVX    A,@DPTR
005B 4486              ORL     A,#086H
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 464
005E E0                MOVX    A,@DPTR
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 24  

005F 4401              ORL     A,#01H
0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 465
0062 902801            MOV     DPTR,#02801H
0065 E0                MOVX    A,@DPTR
0066 4401              ORL     A,#01H
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 466
0069 902804            MOV     DPTR,#02804H
006C E0                MOVX    A,@DPTR
006D 4408              ORL     A,#08H
006F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 467
0070 900000      E     MOV     DPTR,#IER4
0073 E0                MOVX    A,@DPTR
0074 4480              ORL     A,#080H
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 468
0077 900000      E     MOV     DPTR,#ISR4
007A 7480              MOV     A,#080H
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 471
007D 22                RET     
             ; FUNCTION Init_UART2 (END)

             ; FUNCTION Init_UART1 (BEGIN)
                                           ; SOURCE LINE # 475
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 479
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 6405              XRL     A,#05H
0006 6003              JZ      ?C0039
0008 E0                MOVX    A,@DPTR
0009 7007              JNZ     ?C0038
000B         ?C0039:
                                           ; SOURCE LINE # 480
                                           ; SOURCE LINE # 482
000B 900000      E     MOV     DPTR,#Index_23H
000E E0                MOVX    A,@DPTR
000F 4401              ORL     A,#01H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 483
0012         ?C0038:
                                           ; SOURCE LINE # 486
0012 900000      E     MOV     DPTR,#Index_07H
0015 7401              MOV     A,#01H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 487
0018 900000      E     MOV     DPTR,#Index_30H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 488
001C 900000      E     MOV     DPTR,#Index_F0H
001F E0                MOVX    A,@DPTR
0020 4408              ORL     A,#08H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 490
0023 902703            MOV     DPTR,#02703H
0026 7480              MOV     A,#080H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 491
0029 902701            MOV     DPTR,#02701H
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 25  

002C E4                CLR     A
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 494
002E 902700            MOV     DPTR,#02700H
0031 7403              MOV     A,#03H
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 496
0034 902703            MOV     DPTR,#02703H
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 498
0038 902702            MOV     DPTR,#02702H
003B E0                MOVX    A,@DPTR
003C 4486              ORL     A,#086H
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 499
003F E0                MOVX    A,@DPTR
0040 4401              ORL     A,#01H
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 500
0043 902701            MOV     DPTR,#02701H
0046 E0                MOVX    A,@DPTR
0047 4401              ORL     A,#01H
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 501
004A 902704            MOV     DPTR,#02704H
004D E0                MOVX    A,@DPTR
004E 4408              ORL     A,#08H
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 502
0051 900000      E     MOV     DPTR,#IER4
0054 E0                MOVX    A,@DPTR
0055 4440              ORL     A,#040H
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 503
0058 900000      E     MOV     DPTR,#ISR4
005B 7440              MOV     A,#040H
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 506
005E 22                RET     
             ; FUNCTION Init_UART1 (END)

             ; FUNCTION Set_ExtTimer1 (BEGIN)
                                           ; SOURCE LINE # 509
                                           ; SOURCE LINE # 510
                                           ; SOURCE LINE # 512
0000 900000      E     MOV     DPTR,#ETWCTRL
0003 E0                MOVX    A,@DPTR
0004 4401              ORL     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 513
0007 E4                CLR     A
0008 900000      E     MOV     DPTR,#ETPSR
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 518
000C 900000      E     MOV     DPTR,#ETCNTLHR
000F 747D              MOV     A,#07DH
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 519
0012 E4                CLR     A
0013 900000      E     MOV     DPTR,#ETCNTLLR
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 521
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 26  

0017 900000      E     MOV     DPTR,#ISR3
001A 7440              MOV     A,#040H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 522
001D 900000      E     MOV     DPTR,#IER3
0020 E0                MOVX    A,@DPTR
0021 4440              ORL     A,#040H
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 524
0024 22                RET     
             ; FUNCTION Set_ExtTimer1 (END)

             ; FUNCTION _Read_SPI (BEGIN)
                                           ; SOURCE LINE # 527
0000 900000      R     MOV     DPTR,#address
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 528
                                           ; SOURCE LINE # 532
0008 900000      R     MOV     DPTR,#address
000B E0                MOVX    A,@DPTR
000C FE                MOV     R6,A
000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
;---- Variable 'pt_rom' assigned to Register 'DPTR' ----
000F F582              MOV     DPL,A
0011 8E83              MOV     DPH,R6
                                           ; SOURCE LINE # 533
0013 E4                CLR     A
0014 93                MOVC    A,@A+DPTR
0015 FF                MOV     R7,A
;---- Variable 'tmp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 535
                                           ; SOURCE LINE # 536
0016         ?C0042:
0016 22                RET     
             ; FUNCTION _Read_SPI (END)

             ; FUNCTION Init_BRAM (BEGIN)
                                           ; SOURCE LINE # 539
                                           ; SOURCE LINE # 540
                                           ; SOURCE LINE # 544
;---- Variable 'byte_reg_pntr' assigned to Register 'R6/R7' ----
0000 7F00              MOV     R7,#00H
0002 7E22              MOV     R6,#022H
                                           ; SOURCE LINE # 546
0004 900000      E     MOV     DPTR,#BRAM_CHECK0
0007 E0                MOVX    A,@DPTR
0008 B4460F            CJNE    A,#046H,?C0046
000B 900000      E     MOV     DPTR,#BRAM_CHECK1
000E E0                MOVX    A,@DPTR
000F B40508            CJNE    A,#05H,?C0046
0012 900000      E     MOV     DPTR,#BRAM_CHECK2
0015 E0                MOVX    A,@DPTR
0016 6402              XRL     A,#02H
0018 6028              JZ      ?C0044
                                           ; SOURCE LINE # 547
                                           ; SOURCE LINE # 549
                                           ; SOURCE LINE # 551
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 27  

001A         ?C0046:
                                           ; SOURCE LINE # 552
001A C3                CLR     C
001B EF                MOV     A,R7
001C 94C0              SUBB    A,#0C0H
001E EE                MOV     A,R6
001F 9422              SUBB    A,#022H
0021 500D              JNC     ?C0047
                                           ; SOURCE LINE # 553
                                           ; SOURCE LINE # 554
0023 8F82              MOV     DPL,R7
0025 8E83              MOV     DPH,R6
0027 E4                CLR     A
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 555
0029 0F                INC     R7
002A BF0001            CJNE    R7,#00H,?C0052
002D 0E                INC     R6
002E         ?C0052:
                                           ; SOURCE LINE # 556
002E 80EA              SJMP    ?C0046
0030         ?C0047:
                                           ; SOURCE LINE # 557
0030 900000      E     MOV     DPTR,#BRAM_CHECK0
0033 7446              MOV     A,#046H
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 558
0036 900000      E     MOV     DPTR,#BRAM_CHECK1
0039 7405              MOV     A,#05H
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 559
003C 900000      E     MOV     DPTR,#BRAM_CHECK2
003F 7402              MOV     A,#02H
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 560
                                           ; SOURCE LINE # 564
0042         ?C0044:
0042 22                RET     
             ; FUNCTION Init_BRAM (END)

             ; FUNCTION EnableKBCIBFInt (BEGIN)
                                           ; SOURCE LINE # 569
                                           ; SOURCE LINE # 570
                                           ; SOURCE LINE # 571
0000 900000      E     MOV     DPTR,#IER3
0003 E0                MOVX    A,@DPTR
0004 4401              ORL     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 572
0007 22                RET     
             ; FUNCTION EnableKBCIBFInt (END)

             ; FUNCTION Disable_DCache (BEGIN)
                                           ; SOURCE LINE # 577
                                           ; SOURCE LINE # 578
                                           ; SOURCE LINE # 581
0000 900000      E     MOV     DPTR,#CACHDISR
0003 7403              MOV     A,#03H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 591
0006 22                RET     
             ; FUNCTION Disable_DCache (END)
C51 COMPILER V7.50   CORE_INIT                                                             09/20/2020 10:56:18 PAGE 28  


             ; FUNCTION Enable_K8_Function (BEGIN)
                                           ; SOURCE LINE # 597
                                           ; SOURCE LINE # 598
                                           ; SOURCE LINE # 599
0000 902907            MOV     DPTR,#02907H
0003 7407              MOV     A,#07H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 600
0006 900000      E     MOV     DPTR,#Index_2DH
0009 E0                MOVX    A,@DPTR
000A 4401              ORL     A,#01H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 601
000D 22                RET     
             ; FUNCTION Enable_K8_Function (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1160    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
